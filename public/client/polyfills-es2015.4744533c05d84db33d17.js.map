{"version":3,"sources":["webpack:///node_modules/url-polyfill/url-polyfill.js","webpack:///src/polyfills.ts","webpack:///node_modules/zone.js/dist/zone-evergreen.js"],"names":["global","iteratorSupported","Symbol","iterator","error","createIterator","items","next","value","shift","done","serializeParam","encodeURIComponent","replace","deserializeParam","decodeURIComponent","String","URLSearchParams","toString","prototype","set","e","searchString","Object","defineProperty","this","writable","typeofSearchString","_fromString","_this","forEach","name","append","TypeError","call","i","length","entry","key","hasOwnProperty","proto","_entries","push","delete","get","getAll","slice","has","callback","thisArg","entries","keys","values","searchArray","join","sort","a","b","enumerable","configurable","attribute","attributes","split","window","self","_URL","URL","u","pathname","href","searchParams","url","base","baseElement","doc","document","location","implementation","createHTMLDocument","createElement","head","appendChild","indexOf","Error","err","anchorElement","body","protocol","test","search","enableSearchUpdate","enableSearchParamsUpdate","methodName","method","apply","arguments","attributeName","_anchorElement","_updateSearchParams","defineProperties","hostname","port","createObjectURL","blob","revokeObjectURL","getOrigin","setInterval","origin","performance","mark","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Zone","parent","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","fn","perfName","_api","getZoneWith","fork","source","_callback","intercept","runGuarded","applyThis","applyArgs","invoke","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","returnTask","scheduleFn","scheduleMicroTask","isEmpty","counts","prev","change","options","_state","useG","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","setNativePromise","NativePromise","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","__load_patch","api","getOwnPropertyDescriptor","_uncaughtPromiseErrors","rejection","console","message","stack","uncaughtPromiseError","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","obj","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","executor","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","toStringTag","onFinally","race","all","ZONE_AWARE_PROMISE","desc","NewNativePromise","symbolThenPatched","Ctor","prop","originalThen","fetch","resultPromise","ctor","Promise","ObjectGetPrototypeOf","getPrototypeOf","create","Array","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","instance","patchFn","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","eventNameToString","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","checkIsPassive","capture","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","falseEventName","trueEventName","symbolCapture","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","match","exec","evtName","results","foundTasks","Event","targetName","callbacks","nativeDelegate","opts","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","concat","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","customElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","geolocation","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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QAAS,UAAW,gBAAiB,SAC5GC,EAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,EAAmB,CAAC,QAAS,WAC7BC,EApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6CC,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UA8GuGV,EA5EjG,CAC1B,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAG5B,CACxB,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBACA,eACA,gBACA,iBACA,eACA,sBACA,iBACA,uBACA,kBACA,gBACA,iBACA,iBACA,iBACA,gBACA,eACA,gBACA,cACA,aACA,gCACA,mBACA,OACA,kBAgBJ,SAAS/O,GAAiB1F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","file":"x","sourcesContent":["(function(global) {\r\n  /**\r\n   * Polyfill URLSearchParams\r\n   *\r\n   * Inspired from : https://github.com/WebReflection/url-search-params/blob/master/src/url-search-params.js\r\n   */\r\n\r\n  var checkIfIteratorIsSupported = function() {\r\n    try {\r\n      return !!Symbol.iterator;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n  var iteratorSupported = checkIfIteratorIsSupported();\r\n\r\n  var createIterator = function(items) {\r\n    var iterator = {\r\n      next: function() {\r\n        var value = items.shift();\r\n        return { done: value === void 0, value: value };\r\n      }\r\n    };\r\n\r\n    if (iteratorSupported) {\r\n      iterator[Symbol.iterator] = function() {\r\n        return iterator;\r\n      };\r\n    }\r\n\r\n    return iterator;\r\n  };\r\n\r\n  /**\r\n   * Search param name and values should be encoded according to https://url.spec.whatwg.org/#urlencoded-serializing\r\n   * encodeURIComponent() produces the same result except encoding spaces as `%20` instead of `+`.\r\n   */\r\n  var serializeParam = function(value) {\r\n    return encodeURIComponent(value).replace(/%20/g, '+');\r\n  };\r\n\r\n  var deserializeParam = function(value) {\r\n    return decodeURIComponent(String(value).replace(/\\+/g, ' '));\r\n  };\r\n\r\n  var polyfillURLSearchParams = function() {\r\n\r\n    var URLSearchParams = function(searchString) {\r\n      Object.defineProperty(this, '_entries', { writable: true, value: {} });\r\n      var typeofSearchString = typeof searchString;\r\n\r\n      if (typeofSearchString === 'undefined') {\r\n        // do nothing\r\n      } else if (typeofSearchString === 'string') {\r\n        if (searchString !== '') {\r\n          this._fromString(searchString);\r\n        }\r\n      } else if (searchString instanceof URLSearchParams) {\r\n        var _this = this;\r\n        searchString.forEach(function(value, name) {\r\n          _this.append(name, value);\r\n        });\r\n      } else if ((searchString !== null) && (typeofSearchString === 'object')) {\r\n        if (Object.prototype.toString.call(searchString) === '[object Array]') {\r\n          for (var i = 0; i < searchString.length; i++) {\r\n            var entry = searchString[i];\r\n            if ((Object.prototype.toString.call(entry) === '[object Array]') || (entry.length !== 2)) {\r\n              this.append(entry[0], entry[1]);\r\n            } else {\r\n              throw new TypeError('Expected [string, any] as entry at index ' + i + ' of URLSearchParams\\'s input');\r\n            }\r\n          }\r\n        } else {\r\n          for (var key in searchString) {\r\n            if (searchString.hasOwnProperty(key)) {\r\n              this.append(key, searchString[key]);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        throw new TypeError('Unsupported input\\'s type for URLSearchParams');\r\n      }\r\n    };\r\n\r\n    var proto = URLSearchParams.prototype;\r\n\r\n    proto.append = function(name, value) {\r\n      if (name in this._entries) {\r\n        this._entries[name].push(String(value));\r\n      } else {\r\n        this._entries[name] = [String(value)];\r\n      }\r\n    };\r\n\r\n    proto.delete = function(name) {\r\n      delete this._entries[name];\r\n    };\r\n\r\n    proto.get = function(name) {\r\n      return (name in this._entries) ? this._entries[name][0] : null;\r\n    };\r\n\r\n    proto.getAll = function(name) {\r\n      return (name in this._entries) ? this._entries[name].slice(0) : [];\r\n    };\r\n\r\n    proto.has = function(name) {\r\n      return (name in this._entries);\r\n    };\r\n\r\n    proto.set = function(name, value) {\r\n      this._entries[name] = [String(value)];\r\n    };\r\n\r\n    proto.forEach = function(callback, thisArg) {\r\n      var entries;\r\n      for (var name in this._entries) {\r\n        if (this._entries.hasOwnProperty(name)) {\r\n          entries = this._entries[name];\r\n          for (var i = 0; i < entries.length; i++) {\r\n            callback.call(thisArg, entries[i], name, this);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    proto.keys = function() {\r\n      var items = [];\r\n      this.forEach(function(value, name) {\r\n        items.push(name);\r\n      });\r\n      return createIterator(items);\r\n    };\r\n\r\n    proto.values = function() {\r\n      var items = [];\r\n      this.forEach(function(value) {\r\n        items.push(value);\r\n      });\r\n      return createIterator(items);\r\n    };\r\n\r\n    proto.entries = function() {\r\n      var items = [];\r\n      this.forEach(function(value, name) {\r\n        items.push([name, value]);\r\n      });\r\n      return createIterator(items);\r\n    };\r\n\r\n    if (iteratorSupported) {\r\n      proto[Symbol.iterator] = proto.entries;\r\n    }\r\n\r\n    proto.toString = function() {\r\n      var searchArray = [];\r\n      this.forEach(function(value, name) {\r\n        searchArray.push(serializeParam(name) + '=' + serializeParam(value));\r\n      });\r\n      return searchArray.join('&');\r\n    };\r\n\r\n\r\n    global.URLSearchParams = URLSearchParams;\r\n  };\r\n\r\n  var checkIfURLSearchParamsSupported = function() {\r\n    try {\r\n      var URLSearchParams = global.URLSearchParams;\r\n\r\n      return (new URLSearchParams('?a=1').toString() === 'a=1') && (typeof URLSearchParams.prototype.set === 'function');\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  if (!checkIfURLSearchParamsSupported()) {\r\n    polyfillURLSearchParams();\r\n  }\r\n\r\n  var proto = global.URLSearchParams.prototype;\r\n\r\n  if (typeof proto.sort !== 'function') {\r\n    proto.sort = function() {\r\n      var _this = this;\r\n      var items = [];\r\n      this.forEach(function(value, name) {\r\n        items.push([name, value]);\r\n        if (!_this._entries) {\r\n          _this.delete(name);\r\n        }\r\n      });\r\n      items.sort(function(a, b) {\r\n        if (a[0] < b[0]) {\r\n          return -1;\r\n        } else if (a[0] > b[0]) {\r\n          return +1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n      if (_this._entries) { // force reset because IE keeps keys index\r\n        _this._entries = {};\r\n      }\r\n      for (var i = 0; i < items.length; i++) {\r\n        this.append(items[i][0], items[i][1]);\r\n      }\r\n    };\r\n  }\r\n\r\n  if (typeof proto._fromString !== 'function') {\r\n    Object.defineProperty(proto, '_fromString', {\r\n      enumerable: false,\r\n      configurable: false,\r\n      writable: false,\r\n      value: function(searchString) {\r\n        if (this._entries) {\r\n          this._entries = {};\r\n        } else {\r\n          var keys = [];\r\n          this.forEach(function(value, name) {\r\n            keys.push(name);\r\n          });\r\n          for (var i = 0; i < keys.length; i++) {\r\n            this.delete(keys[i]);\r\n          }\r\n        }\r\n\r\n        searchString = searchString.replace(/^\\?/, '');\r\n        var attributes = searchString.split('&');\r\n        var attribute;\r\n        for (var i = 0; i < attributes.length; i++) {\r\n          attribute = attributes[i].split('=');\r\n          this.append(\r\n            deserializeParam(attribute[0]),\r\n            (attribute.length > 1) ? deserializeParam(attribute[1]) : ''\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // HTMLAnchorElement\r\n\r\n})(\r\n  (typeof global !== 'undefined') ? global\r\n    : ((typeof window !== 'undefined') ? window\r\n    : ((typeof self !== 'undefined') ? self : this))\r\n);\r\n\r\n(function(global) {\r\n  /**\r\n   * Polyfill URL\r\n   *\r\n   * Inspired from : https://github.com/arv/DOM-URL-Polyfill/blob/master/src/url.js\r\n   */\r\n\r\n  var checkIfURLIsSupported = function() {\r\n    try {\r\n      var u = new global.URL('b', 'http://a');\r\n      u.pathname = 'c d';\r\n      return (u.href === 'http://a/c%20d') && u.searchParams;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n  var polyfillURL = function() {\r\n    var _URL = global.URL;\r\n\r\n    var URL = function(url, base) {\r\n      if (typeof url !== 'string') url = String(url);\r\n\r\n      // Only create another document if the base is different from current location.\r\n      var doc = document, baseElement;\r\n      if (base && (global.location === void 0 || base !== global.location.href)) {\r\n        doc = document.implementation.createHTMLDocument('');\r\n        baseElement = doc.createElement('base');\r\n        baseElement.href = base;\r\n        doc.head.appendChild(baseElement);\r\n        try {\r\n          if (baseElement.href.indexOf(base) !== 0) throw new Error(baseElement.href);\r\n        } catch (err) {\r\n          throw new Error('URL unable to set base ' + base + ' due to ' + err);\r\n        }\r\n      }\r\n\r\n      var anchorElement = doc.createElement('a');\r\n      anchorElement.href = url;\r\n      if (baseElement) {\r\n        doc.body.appendChild(anchorElement);\r\n        anchorElement.href = anchorElement.href; // force href to refresh\r\n      }\r\n\r\n      if (anchorElement.protocol === ':' || !/:/.test(anchorElement.href)) {\r\n        throw new TypeError('Invalid URL');\r\n      }\r\n\r\n      Object.defineProperty(this, '_anchorElement', {\r\n        value: anchorElement\r\n      });\r\n\r\n\r\n      // create a linked searchParams which reflect its changes on URL\r\n      var searchParams = new global.URLSearchParams(this.search);\r\n      var enableSearchUpdate = true;\r\n      var enableSearchParamsUpdate = true;\r\n      var _this = this;\r\n      ['append', 'delete', 'set'].forEach(function(methodName) {\r\n        var method = searchParams[methodName];\r\n        searchParams[methodName] = function() {\r\n          method.apply(searchParams, arguments);\r\n          if (enableSearchUpdate) {\r\n            enableSearchParamsUpdate = false;\r\n            _this.search = searchParams.toString();\r\n            enableSearchParamsUpdate = true;\r\n          }\r\n        };\r\n      });\r\n\r\n      Object.defineProperty(this, 'searchParams', {\r\n        value: searchParams,\r\n        enumerable: true\r\n      });\r\n\r\n      var search = void 0;\r\n      Object.defineProperty(this, '_updateSearchParams', {\r\n        enumerable: false,\r\n        configurable: false,\r\n        writable: false,\r\n        value: function() {\r\n          if (this.search !== search) {\r\n            search = this.search;\r\n            if (enableSearchParamsUpdate) {\r\n              enableSearchUpdate = false;\r\n              this.searchParams._fromString(this.search);\r\n              enableSearchUpdate = true;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    var proto = URL.prototype;\r\n\r\n    var linkURLWithAnchorAttribute = function(attributeName) {\r\n      Object.defineProperty(proto, attributeName, {\r\n        get: function() {\r\n          return this._anchorElement[attributeName];\r\n        },\r\n        set: function(value) {\r\n          this._anchorElement[attributeName] = value;\r\n        },\r\n        enumerable: true\r\n      });\r\n    };\r\n\r\n    ['hash', 'host', 'hostname', 'port', 'protocol']\r\n      .forEach(function(attributeName) {\r\n        linkURLWithAnchorAttribute(attributeName);\r\n      });\r\n\r\n    Object.defineProperty(proto, 'search', {\r\n      get: function() {\r\n        return this._anchorElement['search'];\r\n      },\r\n      set: function(value) {\r\n        this._anchorElement['search'] = value;\r\n        this._updateSearchParams();\r\n      },\r\n      enumerable: true\r\n    });\r\n\r\n    Object.defineProperties(proto, {\r\n\r\n      'toString': {\r\n        get: function() {\r\n          var _this = this;\r\n          return function() {\r\n            return _this.href;\r\n          };\r\n        }\r\n      },\r\n\r\n      'href': {\r\n        get: function() {\r\n          return this._anchorElement.href.replace(/\\?$/, '');\r\n        },\r\n        set: function(value) {\r\n          this._anchorElement.href = value;\r\n          this._updateSearchParams();\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'pathname': {\r\n        get: function() {\r\n          return this._anchorElement.pathname.replace(/(^\\/?)/, '/');\r\n        },\r\n        set: function(value) {\r\n          this._anchorElement.pathname = value;\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'origin': {\r\n        get: function() {\r\n          // get expected port from protocol\r\n          var expectedPort = { 'http:': 80, 'https:': 443, 'ftp:': 21 }[this._anchorElement.protocol];\r\n          // add port to origin if, expected port is different than actual port\r\n          // and it is not empty f.e http://foo:8080\r\n          // 8080 != 80 && 8080 != ''\r\n          var addPortToOrigin = this._anchorElement.port != expectedPort &&\r\n            this._anchorElement.port !== '';\r\n\r\n          return this._anchorElement.protocol +\r\n            '//' +\r\n            this._anchorElement.hostname +\r\n            (addPortToOrigin ? (':' + this._anchorElement.port) : '');\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'password': { // TODO\r\n        get: function() {\r\n          return '';\r\n        },\r\n        set: function(value) {\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'username': { // TODO\r\n        get: function() {\r\n          return '';\r\n        },\r\n        set: function(value) {\r\n        },\r\n        enumerable: true\r\n      },\r\n    });\r\n\r\n    URL.createObjectURL = function(blob) {\r\n      return _URL.createObjectURL.apply(_URL, arguments);\r\n    };\r\n\r\n    URL.revokeObjectURL = function(url) {\r\n      return _URL.revokeObjectURL.apply(_URL, arguments);\r\n    };\r\n\r\n    global.URL = URL;\r\n\r\n  };\r\n\r\n  if (!checkIfURLIsSupported()) {\r\n    polyfillURL();\r\n  }\r\n\r\n  if ((global.location !== void 0) && !('origin' in global.location)) {\r\n    var getOrigin = function() {\r\n      return global.location.protocol + '//' + global.location.hostname + (global.location.port ? (':' + global.location.port) : '');\r\n    };\r\n\r\n    try {\r\n      Object.defineProperty(global.location, 'origin', {\r\n        get: getOrigin,\r\n        enumerable: true\r\n      });\r\n    } catch (e) {\r\n      setInterval(function() {\r\n        global.location.origin = getOrigin();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n})(\r\n  (typeof global !== 'undefined') ? global\r\n    : ((typeof window !== 'undefined') ? window\r\n    : ((typeof self !== 'undefined') ? self : this))\r\n);\r\n","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n* BROWSER POLYFILLS\n*/\n\r\n\r\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect';\r\n\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es7/reflect';\r\n\r\n\r\n/**\r\n * Web Animations `@angular/platform-browser/animations`\r\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\r\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\r\n **/\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n/**\r\n * By default, zone.js will patch all possible macroTask and DomEvents\r\n * user can disable parts of macroTask/DomEvents patch by setting following flags\r\n */\r\n\r\n // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\r\n // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\r\n // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\r\n\r\n /*\r\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\r\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\r\n */\r\n// (window as any).__Zone_enable_cross_context_check = true;\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by default for Angular itself.\r\n */\r\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\r\n\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\nimport 'url-polyfill';\r\n","/**\n * @license Angular v0.10.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}(function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                while (_uncaughtPromiseErrors.length) {\n                    const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        try {\n                            // try to print more readable error log\n                            throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            const error = err;\n                            error.rejection = value;\n                            error.promise = promise;\n                            error.zone = Zone.current;\n                            error.task = Zone.currentTask;\n                            _uncaughtPromiseErrors.push(error);\n                            api.scheduleMicroTask(); // to make sure that it is running\n                        }\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        class ZoneAwarePromise {\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            then(onFulfilled, onRejected) {\n                const chainPromise = new this.constructor(null);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                const chainPromise = new this.constructor(null);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            function checkIsPassive(task) {\n                if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                    typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                    // options is a non-null non-undefined object\n                    // passive is not supported\n                    // don't pass options as object\n                    // just pass capture as a boolean\n                    task.options = !!taskData.options.capture;\n                    taskData.options = task.options;\n                }\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const options = arguments[2];\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                    let capture;\n                    let once = false;\n                    if (options === undefined) {\n                        capture = false;\n                    }\n                    else if (options === true) {\n                        capture = true;\n                    }\n                    else if (options === false) {\n                        capture = false;\n                    }\n                    else {\n                        capture = options ? !!options.capture : false;\n                        once = options ? !!options.once : false;\n                    }\n                    const zone = Zone.current;\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    let symbolEventName;\n                    if (!symbolEventNames) {\n                        // the code is duplicate, but I just want to get some better performance\n                        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                        zoneSymbolEventNames$1[eventName] = {};\n                        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                        symbolEventName = capture ? symbolCapture : symbol;\n                    }\n                    else {\n                        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    }\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                let capture;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                }\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplyconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n}));\n"]}