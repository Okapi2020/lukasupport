{"version":3,"sources":["webpack:///src/common/core/ui/confirm-modal/confirm-modal.component.ts","webpack:///src/common/core/ui/confirm-modal/confirm-modal.component.html","webpack:///src/common/file-preview/preview-url-transformer.ts","webpack:///node_modules/rxjs/internal/util/isIterable.js","webpack:///src/app/shared/models/Reply.ts","webpack:///src/app/conversation/draft.service.ts","webpack:///node_modules/rxjs/internal/scheduled/scheduleObservable.js","webpack:///node_modules/rxjs/internal/scheduled/scheduleArray.js","webpack:///src/app/ticketing/assign-ticket-dropdown/assign-ticket-dropdown.component.ts","webpack:///src/app/ticketing/assign-ticket-dropdown/assign-ticket-dropdown.component.html","webpack:///src/app/conversation/conversation-replies/conversation-replies.component.ts","webpack:///src/app/conversation/conversation-replies/conversation-replies.component.html","webpack:///src/app/conversation/conversation-modal/conversation-modal.component.ts","webpack:///src/app/conversation/conversation-modal/conversation-modal.component.html","webpack:///src/common/uploads/formatted-file-size.pipe.ts","webpack:///node_modules/rxjs/internal/util/subscribeTo.js","webpack:///src/app/shared/models/Tag.ts","webpack:///src/common/file-preview/preview-files.service.ts","webpack:///src/app/ticketing/canned-replies/crupdate-canned-reply-modal/crupdate-canned-reply-modal.component.ts","webpack:///src/app/ticketing/canned-replies/crupdate-canned-reply-modal/crupdate-canned-reply-modal.component.html","webpack:///src/app/shared/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.html","webpack:///src/app/shared/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.ts","webpack:///src/app/shared/file-preview-overlay/file-preview-overlay.component.ts","webpack:///src/app/shared/file-preview-overlay/file-preview-overlay.component.html","webpack:///src/app/shared/file-mime.service.ts","webpack:///src/app/shared/reply-attachment-list/reply-attachment-list.component.html","webpack:///src/app/shared/reply-attachment-list/reply-attachment-list.component.ts","webpack:///src/common/auth/find-user-modal/find-user-modal.component.ts","webpack:///src/common/auth/find-user-modal/find-user-modal.component.html","webpack:///node_modules/rxjs/internal/util/isPromise.js","webpack:///node_modules/rxjs/internal/util/pipe.js","webpack:///src/app/conversation/conversation.component.html","webpack:///src/app/conversation/conversation.component.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","webpack:///src/common/file-preview/file-preview.module.ts","webpack:///src/app/customer-mailbox/customer-tickets-list/customer-tickets-list.component.html","webpack:///src/app/customer-mailbox/customer-tickets-list/customer-tickets-list.component.ts","webpack:///src/app/ticketing/suggested-articles-drawer/suggested-articles-drawer.component.html","webpack:///src/app/ticketing/suggested-articles-drawer/suggested-articles-drawer.component.ts","webpack:///src/app/ticketing/new-ticket/new-ticket.component.html","webpack:///src/app/ticketing/new-ticket/new-ticket.component.ts","webpack:///src/app/customer-mailbox/customer-mailbox.component.html","webpack:///src/app/customer-mailbox/customer-mailbox.component.ts","webpack:///src/app/customer-mailbox/customer-conversation/customer-conversation.component.html","webpack:///src/app/customer-mailbox/customer-conversation/customer-conversation.component.ts","webpack:///src/app/customer-mailbox/customer-mailbox.routing.ts","webpack:///src/app/customer-mailbox/customer-mailbox.module.ts","webpack:///src/app/conversation/conversation-resolve.service.ts","webpack:///src/common/uploads/utils/read-uploaded-folders.ts","webpack:///src/common/uploads/directives/upload-dropzone.directive.ts","webpack:///src/app/conversation/conversation.module.ts","webpack:///src/common/uploads/directives/upload-button.directive.ts","webpack:///node_modules/rxjs/internal/scheduled/scheduled.js","webpack:///src/app/ticketing/add-tag-dropdown/add-tag-dropdown.component.ts","webpack:///src/app/ticketing/add-tag-dropdown/add-tag-dropdown.component.html","webpack:///node_modules/rxjs/internal/Subscriber.js","webpack:///node_modules/rxjs/internal/util/isObject.js","webpack:///src/common/uploads/uploads.module.ts","webpack:///node_modules/rxjs/internal/Observer.js","webpack:///src/app/conversation/conversation-sidebar/conversation-sidebar.component.ts","webpack:///src/app/conversation/conversation-sidebar/conversation-sidebar.component.html","webpack:///node_modules/rxjs/internal/util/isInteropObservable.js","webpack:///node_modules/rxjs/internal/observable/of.js","webpack:///src/app/shared/tag.service.ts","webpack:///src/app/shared/reply-attachment-list/reply-attachment-list.module.ts","webpack:///src/app/conversation/conversation-replies.service.ts","webpack:///src/common/text-editor/editors/tinymce-text-editor.service.ts","webpack:///src/common/text-editor/validation/text-editor-image-validator.ts","webpack:///src/common/text-editor/text-editor.component.html","webpack:///src/common/text-editor/text-editor.component.ts","webpack:///node_modules/rxjs/internal/util/UnsubscriptionError.js","webpack:///node_modules/rxjs/internal/scheduled/scheduleIterable.js","webpack:///node_modules/rxjs/internal/util/hostReportError.js","webpack:///node_modules/rxjs/internal/util/subscribeToArray.js","webpack:///src/app/ticketing/canned-replies/dropdown/canned-replies-dropdown.component.ts","webpack:///src/app/ticketing/canned-replies/dropdown/canned-replies-dropdown.component.html","webpack:///node_modules/rxjs/internal/Observable.js","webpack:///node_modules/rxjs/internal/operators/mergeMap.js","webpack:///node_modules/rxjs/internal/symbol/iterator.js","webpack:///node_modules/rxjs/internal/InnerSubscriber.js","webpack:///src/app/ticketing/canned-replies/canned-replies.service.ts","webpack:///src/common/file-preview/base-file-preview.ts","webpack:///src/common/shared/data-table/data/paginated-data-table-source.ts","webpack:///src/common/core/utils/array-to-object.ts","webpack:///node_modules/rxjs/internal/util/toSubscriber.js","webpack:///node_modules/rxjs/internal/OuterSubscriber.js","webpack:///node_modules/perfect-scrollbar/dist/perfect-scrollbar.esm.js","webpack:///src/common/core/ui/custom-scrollbar/supports-native-scrollbar-styling.ts","webpack:///src/common/core/ui/custom-scrollbar/custom-scrollbar.directive.ts","webpack:///node_modules/rxjs/internal/util/subscribeToPromise.js","webpack:///src/common/file-preview/default-preview/default-preview.component.ts","webpack:///src/common/file-preview/default-preview/default-preview.component.html","webpack:///src/app/ticketing/update-reply-modal/update-reply-modal.component.ts","webpack:///src/app/ticketing/update-reply-modal/update-reply-modal.component.html","webpack:///src/app/ticketing/ticket-attachments.service.ts","webpack:///src/app/conversation/conversation-header/conversation-header.component.html","webpack:///src/app/conversation/conversation-header/conversation-header.component.ts","webpack:///node_modules/rxjs/internal/util/subscribeToResult.js","webpack:///src/app/shared/models/CannedReply.ts","webpack:///src/app/conversation/after-reply-action.service.ts","webpack:///node_modules/rxjs/internal/observable/from.js","webpack:///src/common/core/ui/custom-scrollbar/custom-scrollbar.module.ts","webpack:///src/app/customer-mailbox/new-ticket-categories-resolve.ts","webpack:///src/common/core/ui/format-pipes/formatted-date.pipe.ts","webpack:///src/common/file-preview/current-preview-file.ts","webpack:///src/app/shared/router-history.service.ts","webpack:///src/app/conversation/conversation-toolbar/conversation-toolbar.component.ts","webpack:///src/app/conversation/conversation-toolbar/conversation-toolbar.component.html","webpack:///src/common/core/ui/format-pipes/format-pipes.module.ts","webpack:///src/app/conversation/confirm-reply-delete-modal/confirm-reply-delete-modal.component.ts","webpack:///src/app/conversation/confirm-reply-delete-modal/confirm-reply-delete-modal.component.html","webpack:///node_modules/rxjs/internal/util/isArray.js","webpack:///node_modules/rxjs/internal/config.js","webpack:///node_modules/rxjs/internal/scheduled/schedulePromise.js","webpack:///node_modules/rxjs/internal/util/isScheduler.js","webpack:///src/common/file-preview/preview-container/preview-container.component.html","webpack:///src/common/file-preview/preview-container/preview-container.component.ts","webpack:///node_modules/rxjs/internal/util/subscribeToObservable.js","webpack:///node_modules/rxjs/internal/symbol/rxSubscriber.js","webpack:///src/common/core/ui/infinite-scroll/infinite.scroll.ts","webpack:///src/app/shared/conversation-infinite-scroll.directive.ts","webpack:///node_modules/rxjs/internal/util/subscribeToIterable.js","webpack:///node_modules/rxjs/internal/util/isFunction.js","webpack:///node_modules/rxjs/internal/operators/map.js","webpack:///src/app/conversation/conversation-text-editor/conversation-text-editor.component.ts","webpack:///src/app/conversation/conversation-text-editor/conversation-text-editor.component.html","webpack:///src/app/ticketing/add-note-modal/add-note-modal.component.ts","webpack:///src/app/ticketing/add-note-modal/add-note-modal.component.html","webpack:///node_modules/rxjs/_esm2015/internal/operators/throttle.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","webpack:///src/common/uploads/upload-progress-bar/upload-progress-bar.component.ts","webpack:///src/common/uploads/upload-progress-bar/upload-progress-bar.component.html","webpack:///src/app/shared/models/Ticket.ts","webpack:///src/common/uploads/utils/download-file-from-url.ts","webpack:///src/common/file-preview/text-preview/text-preview.component.html","webpack:///src/common/file-preview/text-preview/text-preview.component.ts","webpack:///src/common/file-preview/audio-preview/audio-preview.component.html","webpack:///src/common/file-preview/audio-preview/audio-preview.component.ts","webpack:///src/common/file-preview/video-preview/video-preview.component.html","webpack:///src/common/file-preview/video-preview/video-preview.component.ts","webpack:///src/common/file-preview/image-preview/image-preview.component.ts","webpack:///src/common/file-preview/image-preview/image-preview.component.html","webpack:///src/common/file-preview/pdf-preview/pdf-preview.component.ts","webpack:///src/common/file-preview/pdf-preview/pdf-preview.component.html","webpack:///src/common/file-preview/google-docs-viewer/google-docs-viewer.component.html","webpack:///src/common/file-preview/google-docs-viewer/google-docs-viewer.component.ts","webpack:///src/common/file-preview/available-previews.ts","webpack:///node_modules/rxjs/internal/util/noop.js","webpack:///src/app/conversation/conversation.service.ts","webpack:///node_modules/rxjs/internal/util/isArrayLike.js","webpack:///src/app/conversation/conversation-replies/show-original-reply-modal/show-original-reply-modal.component.ts","webpack:///src/app/conversation/conversation-replies/show-original-reply-modal/show-original-reply-modal.component.html","webpack:///node_modules/rxjs/internal/util/canReportError.js","webpack:///node_modules/rxjs/internal/Subscription.js","webpack:///node_modules/rxjs/internal/symbol/observable.js","webpack:///node_modules/rxjs/internal/observable/fromArray.js"],"names":["ConfirmModalComponent","dialogRef","data","i18n","settings","this","close","title","t","body","bodyBold","ok","cancel","confirm","PREVIEW_URL_TRANSFORMER","factory","entry","url","providedIn","iterator_1","exports","isIterable","input","iterator","Reply","params","type","name","Draft","ticketUploads","tickets","uploadQueue","toast","reset","model","draft","contents","id","ticketId","length","uploads","files","start","pipe","scan","acc","value","fileEntry","last","subscribe","entries","save","detach","i","get","findIndex","upl","splice","isEmpty","request","saveDraft","getPayload","catchError","of","share","response","set","deleteDraft","Object","assign","map","upload","Observable_1","Subscription_1","observable_1","scheduleObservable","scheduler","Observable","subscriber","sub","Subscription","add","schedule","observable","next","error","err","complete","scheduleArray","closed","AssignTicketDropdownComponent","users","currentUser","agents","assigned","trigger","menuOpened","fetchAgents","openMenu","closeMenu","userId","ticketIds","ticket","assigned_to","open","emit","getAll","permission","per_page","filter","user","assignTicketsTo","ConversationRepliesComponent","modal","conversation","backendEvents","subscription","ticketReplyCreated","reply","ticket_id","replies","unsubscribe","panelClass","afterClosed","newReply","replace","show","confirmed","delete","setDraft","openEditor","remove","className","getOriginalEmailForReply","original","u","updateReply","ConversationModalComponent","tags","router","hydrate","closeAll","navigate","getStatus","merge","activeTicketId","refresh","init","openTicket","FormattedFileSizePipe","bytes","precision","isNaN","parseFloat","String","isFinite","subscribeToArray_1","subscribeToPromise_1","subscribeToIterable_1","subscribeToObservable_1","isArrayLike_1","isPromise_1","isObject_1","subscribeTo","result","subscribeToObservable","isArrayLike","subscribeToArray","isPromise","subscribeToPromise","subscribeToIterable","isObject","TypeError","Tag","PreviewFilesService","availablePreviews","injector","portal","meta","previewUriTransformer","download","asObservable","haveNext","updateMeta","updatePortal","havePrevious","dir","newPointer","oldPointer","pointer","total","current","getCurrent","createInjector","activeFile","injectionTokens","WeakMap","transformer","CrupdateCannedReplyModalComponent","cannedReplies","attachments","errors","cannedReply","textEditor","destroyEditor","payload","update","create","errorResponse","messages","getContents","shared","attachment","setContents","slice","uploadFiles","previewFiles","FilePreviewToolbarComponent","showLogo","disableDownload","showCloseButton","FilePreviewOverlayComponent","el","overlayRef","ticketEntry","setPreviewUriTransformer","urlTransformer","bind","bindToDownload","previewContainer","nativeElement","addEventListener","e","target","closest","downloadSub","getAllEntries","downloadFile","hashes","hash","join","getBaseUrl","closeOverlay","FileMime","iconsMap","text","audio","video","document","image","mime","split","getFileType","$event","stopPropagation","ReplyAttachmentListComponent","overlay","cancelButtonVisible","detached","ent","position","origin","FindUserModalComponent","searchFormControl","loading$","users$","valueChanges","query","searchUsers","then","noop_1","pipeFromArray","fns","reduce","prev","fn","noop","_i","arguments","ConversationComponent","route","hideBackButton","hideSidebar","focus","_c0","MatChipBase","_elementRef","_MatChipMixinBase","MatChipAvatar","ɵfac","ɵdir","selectors","hostAttrs","MatChipTrailingIcon","MatChip","_ngZone","platform","globalRippleOptions","animationMode","_changeDetectorRef","super","_hasFocus","chipListSelectable","_chipListMultiple","_selected","_selectable","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","disabled","disableRipple","coercedValue","c","_dispatchSelectionChange","undefined","_value","textContent","selectable","selected","toString","element","hasAttribute","tagName","toLowerCase","classList","chip","_removeTriggerEvents","_markForCheck","isUserInput","removable","event","preventDefault","keyCode","toggleSelected","onStable","run","source","markForCheck","contentQueries","rf","ctx","dirIndex","_t","MatChipRemove","avatar","first","trailingIcon","removeIcon","hostVars","hostBindings","_handleClick","_handleKeydown","_blur","ariaSelected","inputs","color","outputs","exportAs","features","_parentChip","parentChip","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","nextUniqueId","MatChipListChange","MatChipList","_dir","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_onTouched","_onChange","_multiple","_compareWith","o1","o2","_required","_disabled","ariaOrientation","change","valueChange","valueAccessor","multiple","_selectionModel","empty","_syncChipsState","_initializeSelection","writeValue","_chipInput","stateChanges","placeholder","_placeholder","focused","_hasFocusedChip","chips","forEach","_keyManager","withWrap","withVerticalOrientation","withHorizontalOrientation","tabOut","_allowFocusEscape","changes","Promise","resolve","_resetChips","_updateTabIndex","_updateFocusForDestroyedChips","updateErrorState","_dropSubscriptions","inputElement","ids","_ariaDescribedby","_setSelectionByValue","isDisabled","_originatesFromChip","options","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","contains","onKeydown","newChipIndex","Math","min","setActiveItem","index","nodeName","_clearSelection","deselect","Array","isArray","currentValue","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","skip","clear","fallbackValue","valueToEmit","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","toArray","indexOf","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","some","ɵcmp","_keydown","role","required","errorState","compareWith","tabIndex","errorStateMatcher","provide","useExisting","ngContentSelectors","decls","vars","consts","template","styles","encapsulation","changeDetection","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_inputElement","_chipList","registerInput","_emitChipEnd","addOnBlur","_isSeparatorKey","separators","has","_focus","_onInput","invalid","chipList","ɵ0","MatChipsModule","ɵmod","ɵinj","providers","useValue","FilePreviewModule","useClass","CustomerTicketsListComponent","paginator","form","snapshot","queryParams","status","dataSource","uri","dataPaginator","matPaginator","matSort","console","log","reload","disconnect","tag","SuggestedArticlesDrawerComponent","helpCenter","urls","searchLogger","inputValue","searchQuery","articles","searching","debounceTime","distinctUntilChanged","switchMap","searchArticles","pagination","setSearchResults","findArticles","categories","updateSession","clickedArticle","NewTicketComponent","errors$","BehaviorSubject","attachments$","ticketCategories","ticketModel","content$","ReplaySubject","all$","getJson","category","subject","getAllCompleted","finalize","updateSessionAndStore","createdTicket","customerTicketList","newAttachments","cat","CustomerMailboxComponent","CustomerConversationComponent","getStatusTags","changeTicketStatus","afterReplyAction","navigateToCustomerTicketsList","setStatus","routing","forChild","path","component","canActivate","children","permissions","CustomerMailboxModule","TicketResolve","state","mergeMap","readDirRecursive","createReader","readEntries","key","childEntry","isDirectory","push","transformFileEntry","file","fullPath","UploadDropzoneDirective","disableDropzoneClick","disableDropzone","uploadConfig","filesDropped","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","clickButton","handleClick","removeClassesFromDropzone","emitUploadEvent","dropzoneDisabled","dataTransfer","dropEffect","newEl","elementFromPoint","clientX","clientY","items","from","item","kind","webkitGetAsEntry","concat","hasFiles","types","ConversationModule","UploadButtonDirective","config","filesSelected","scheduleObservable_1","schedulePromise_1","scheduleArray_1","scheduleIterable_1","isInteropObservable_1","isIterable_1","scheduled","isInteropObservable","schedulePromise","scheduleIterable","AddTagDropdownComponent","tagService","tagAdded","tagQuery","searchedOnce","trackByFn","bindTagQueryInput","searchForTags","perPage","menuClosed","clearSearchField","addTag","setValue","search","__extends","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","prototype","isFunction_1","Observer_1","rxSubscriber_1","config_1","hostReportError_1","Subscriber","_super","destinationOrNext","_this","call","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","SafeSubscriber","rxSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentOrParents","_parentSubscriber","observerOrNext","context","isFunction","_context","useDeprecatedSynchronousErrorHandling","__tryOrSetError","__tryOrUnsub","hostReportError","wrappedComplete","parent","Error","_unsubscribe","x","UploadsModule","ConversationSidebarComponent","previousTicketsVisible","activeTicket","loadUserData","mergedTicket","otherTickets","requester","getTickets","user_id","getCategory","purchase_codes","categoryName","bestMatch","code","item_name","envatoPurchase","beforeClosed","getUserTicketsExceptCurrent","setEnvatoPurchase","isScheduler_1","fromArray_1","args","isScheduler","pop","fromArray","TagService","http","baseUri","getWithCache","post","put","notType","ReplyAttachmentListModule","ConversationReplies","currentPage","lastPage","isLoading","existing","unshift","oldReply","replyId","getTicketReplies","current_page","last_page","TinymceTextEditor","zone","lazyLoader","breakpoints","makeBootstrapPromise","editorIsReady","tinymceInstance","setContent","undoManager","waitForEditor","hasUndo","hasRedo","queryCommandState","execCommand","getContent","transact","selection","setCursorLocation","nodeChanged","collapse","insertContents","bootstrapPromise","loadTinymce","initTinymce","loadAsset","textAreaEl","plugins","branding","browser_spellcheck","max_height","maxHeight","min_height","minHeight","autoresize_on_init","paste_as_text","elementpath","statusbar","menubar","convert_urls","forced_root_block","element_format","body_class","content_style","content_css","default_link_target","link_assume_external_targets","target_list","link_title","image_dimensions","image_description","setup","editor","on","onChange","shortcuts","onCtrlEnter","init_instance_callback","bootstrapPromiseResolve","isMobile$","toolbar","extended_valid_elements","getAssetUrl","height","editorEl","offsetHeight","tinymce","TextEditorImageValidator","DEFAULT_MAX_SIZE_MB","validations","maxSize","convertToBytes","TextEditorComponent","renderer","overlayPanel","imageValidator","sourceAreaControl","activeEditor","showAdvancedControls","basic","onFileUpload","bootTextEditor","command","BeColorPickerModule","components","panel","valueChanged","contentAreaContainer","setStyle","sourceTextArea","source_view","fileList","Image","validator","httpParams","diskPrefix","inlineUploadPrefix","insertImage","attrs","href","setConfig","visualTextArea","UnsubscriptionError","UnsubscriptionErrorImpl","message","return","done","array","len","CannedRepliesDropdownComponent","cannedRepliesService","onReplySelect","loadedResultsAtLeastOnce","getCannedReplies","fullMatch","groupMatch","force","getReplies","canReportError_1","toSubscriber_1","pipe_1","getPromiseCtor","promiseCtor","_isScalar","_subscribe","lift","operator","sink","toSubscriber","_trySubscribe","canReportError","warn","reject","operations","toPromise","subscribeToResult_1","OuterSubscriber_1","InnerSubscriber_1","map_1","from_1","project","resultSelector","concurrent","Number","POSITIVE_INFINITY","a","ii","MergeMapOperator","observer","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","_innerSub","ish","innerSubscriber","InnerSubscriber","innerSubscription","subscribeToResult","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyComplete","shift","OuterSubscriber","getSymbolIterator","Symbol","$$iterator","notifyError","CannedRepliesService","httpClient","BaseFilePreview","sanitizer","filePreviewWrapper","bypassSecurityTrustResourceUrl","getSrc","responseType","initiated","pagination$","userParamsChange$","selectedRows","searchControl","filterForm","nextPageLoader$","virtualSort$","paginationParams","activeFilters$","filters","f","column","control","defaultValue","addControl","applyFiltersFromQueryParams","dontUpdateQueryParams","paginatedOnce$","val","take","combineLatest","noResults$","noResults","paginationResponse","hasValue","allRowsSelected","deselectAllItems","row","getCurrentPage","page","resetSort","resetMatPaginator","updateConfig","sortChange","initialized","pageChange","searchChange","filterChange","keys","transformParams","paginate","initialData","pageIndex","pageSize","appendData","currentData","patchValue","originalParams","previous","orderBy","orderDir","direction","keysToRemove","staticParams","sort","disableClear","_changePageSize","firstPage","destroy","currentQueryParams","queryValues","controls","filterName","queryValue","Subscriber_1","nextOrObserver","apply","getComputedStyle","obj","style","div","createElement","elMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","parentNode","removeChild","queryChildren","selector","child","cls","scrollingClassTimeout","y","addScrollingClass","clearTimeout","removeScrollingClass","isAlive","scrollingThreshold","EventElement","handlers","prototypeAccessors","configurable","eventName","handler","unbind","this$1","removeEventListener","unbindAll","every","defineProperties","EventManager","eventElements","createEvent","window","CustomEvent","evt","initCustomEvent","processScrollDiff","axis","diff","useScrollingClass","forceFireReachEvent","fields","ref","contentHeight","containerHeight","scrollTop","up","down","reach","dispatchEvent","toInt","parseInt","eventElement","ee","once","onceHandler","env","isWebKit","documentElement","supportsTouch","navigator","maxTouchPoints","DocumentTouch","supportsIePointer","msMaxTouchPoints","isChrome","test","userAgent","updateGeometry","roundedScrollTop","floor","rect","getBoundingClientRect","containerWidth","ceil","width","contentWidth","scrollWidth","scrollHeight","scrollbarXRail","appendChild","scrollbarYRail","suppressScrollX","scrollXMarginOffset","scrollbarXActive","railXWidth","railXMarginWidth","railXRatio","scrollbarXWidth","getThumbSize","scrollbarXLeft","negativeScrollAdjustment","scrollLeft","suppressScrollY","scrollYMarginOffset","scrollbarYActive","railYHeight","railYMarginHeight","railYRatio","scrollbarYHeight","scrollbarYTop","xRailOffset","left","isRtl","isScrollbarXUsingBottom","bottom","scrollbarXBottom","top","scrollbarXTop","yRailOffset","isScrollbarYUsingRight","right","scrollbarYRight","scrollbarYOuterWidth","scrollbarYLeft","scrollbarX","railBorderXWidth","scrollbarY","railBorderYWidth","thumbSize","minScrollbarLength","max","maxScrollbarLength","bindMouseScrollHandler","pageY","startingScrollTop","startingMousePageY","scrollBy","mouseMoveHandler","touches","mouseUpHandler","ownerDocument","bindMoves","touchMode","positionTop","pageYOffset","positionLeft","pageX","pageXOffset","keyboard","isDefaultPrevented","defaultPrevented","activeElement","contentDocument","shadowRoot","deltaX","deltaY","which","metaKey","altKey","shiftKey","wheelPropagation","wheel","mousewheelHandler","wheelDeltaX","wheelDeltaY","deltaMode","wheelDelta","querySelector","cursor","overflowY","match","maxScrollTop","clientHeight","overflowX","maxScrollLeft","clientWidth","shouldPrevent","useBothWheelAxes","wheelSpeed","isTop","isBottom","isLeft","isRight","offsetWidth","abs","ctrlKey","onwheel","onmousewheel","touch","startOffset","startTime","speed","easingLoop","touchStart","touchMove","touchEnd","PointerEvent","MSPointerEvent","applyTouchMove","differenceX","differenceY","getTouch","targetTouches","shouldHandle","pointerType","buttons","MSPOINTER_TYPE_MOUSE","Date","getTime","clearInterval","currentOffset","currentTime","timeGap","magnitudeX","magnitudeY","scrollY","swipeEasing","setInterval","isInitialized","PerfectScrollbar","userSettings","originalScrollLeft","blur","isNegativeScroll","setAttribute","railXStyle","borderLeftWidth","borderRightWidth","display","marginLeft","marginRight","railYStyle","paddingLeft","paddingRight","borderTopWidth","borderBottomWidth","marginTop","marginBottom","handlerName","lastScrollTop","lastScrollLeft","onScroll","removePsClasses","SUPPORTS_NATIVE_SCROLLBAR_STYLING","appVersion","overflow","innerHTML","CustomScrollbarDirective","ngZone","mutationObserverFactory","supportsNativeStyling","subscriptions","minLength","suppressX","native","debouncer","Subject","addClass","shouldUseNative","scrollbar","bindToContentChange","runOutsideAngular","mutations","observe","childList","subtree","promise","DefaultPreviewComponent","UpdateReplyModalComponent","TicketAttachmentsService","conversationId","draftId","uploadId","ConversationHeaderComponent","mailboxTags","tagToRemove","removeTag","subscribeTo_1","outerSubscriber","CannedReply","AfterReplyAction","localStorage","defaultAction","navigateToNextActiveTicket","navigateToAgentTicketsList","tagId","getActiveTagId","getLatestActiveTicket","scheduled_1","CustomScrollbarModule","NewTicketCategoriesResolve","navigateByUrl","FormattedDatePipe","_locale","format","angularPipe","timezone","locale","transform","CURRENT_PREVIEW_FILE","RouterHistory","history","limit","getPrevious","parts","parseQueryParams","rawString","URLSearchParams","events","addHistoryItem","urlAfterRedirects","ConversationToolbarComponent","modals","browserEvents","routerHistory","initKeybinds","performAfterReplyAction","note","addNewNote","refreshMailboxTags","back","relativeTo","globalKeyDown$","handled","anyDialogOpen","userIsTyping","closeAllMenus","navigateToTicketsList","assignTicketDropdown","showNoteModal","addTagDropdown","ticketStatusTrigger","menuOpen","handleTicketStatusChangeKeybind","getTagByIdOrName","FormatPipesModule","ConfirmReplyDeleteModalComponent","getDisplayType","_enable_super_gross_mode_that_will_cause_bad_things","stack","PreviewContainerComponent","comp","instance","obs","random","$$rxSubscriber","InfiniteScroll","threshold","scrollSub","fromEvent","getScrollContainer","capture","passive","canLoadMore","offset","innerHeight","loadMoreItems","ConversationInfiniteScrollDirective","loadMore","iterable","thisArg","MapOperator","MapSubscriber","count","ConversationTextEditorComponent","hcUrls","selectedStatus","setSelectedStatus","setEditor","submitReply","closeEditor","hasPermission","articleDropdown","article","insertLink","saveDraftAndAddToReplies","maybeDeleteDraft","AddNoteModalComponent","ticketService","loading","addNote","defaultThrottleConfig","leading","trailing","ThrottleTimeOperator","duration","_hasTrailingValue","_trailingValue","throttled","dispatchNext","arg","clearThrottle","UploadProgressBarComponent","cd","hidden","totalProgress","animationFrame","progress","count$","pending","AGENT_PERMISSION","Ticket","downloadFileFromUrl","link","click","TextPreviewComponent","fileTooLarge$","file_size","loadFileContents","content","AudioPreviewComponent","invalidMedia","canPlayVideo","player","src","play","canPlayType","playerEl","VideoPreviewComponent","ImagePreviewComponent","PdfPreviewComponent","GoogleDocsViewerComponent","showDefaultPreview$","showDefaultPreview","iframe","onload","timeoutRef","stopLoading","getIframeSrc","catch","location","previewUrl","preview_token","getGoogleDocsUrl","encodeURIComponent","AVAILABLE_PREVIEWS","DefaultPreviews","pdf","spreadsheet","powerPoint","word","Conversation","replySaving","editorIsOpen","afterInit","newTag","saveReply","perform","setTicketId","ShowOriginalReplyModalComponent","headerNames","originalEmail","headers","isArray_1","UnsubscriptionError_1","flattenUnsubscriptionErrors","errs","_subscriptions","teardown","EMPTY","tmp","subscriptionIndex"],"mappings":"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","file":"x","sourcesContent":["import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Translations} from '../../translations/translations.service';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\nexport interface ConfirmModalData {\r\n    title: string;\r\n    body: string;\r\n    bodyBold?: string;\r\n    ok?: string;\r\n    cancel?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'confirm-modal',\r\n    templateUrl: './confirm-modal.component.html',\r\n    styleUrls: ['./confirm-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ConfirmModalComponent implements OnInit {\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmModalData,\r\n        private i18n: Translations,\r\n        public settings: Settings,\r\n    ) {}\r\n\r\n    public close() {\r\n        this.dialogRef.close(false);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.data.title = this.i18n.t(this.data.title);\r\n        this.data.body = this.i18n.t(this.data.body);\r\n        if (this.data.bodyBold) this.data.bodyBold = this.i18n.t(this.data.bodyBold);\r\n        this.data.ok = this.data.ok ? this.i18n.t(this.data.ok) : this.i18n.t('Confirm');\r\n        this.data.cancel = this.data.cancel ? this.i18n.t(this.data.cancel) : this.i18n.t('Cancel');\r\n    }\r\n\r\n    public confirm() {\r\n        this.dialogRef.close(true);\r\n    }\r\n}","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title>{{data.title}}</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div class=\"mat-dialog-contents\" mat-dialog-content>\r\n    <p>{{data.body}}</p>\r\n    <p class=\"bold\" *ngIf=\"data.bodyBold\">{{data.bodyBold}}</p>\r\n</div>\r\n\r\n<div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n    <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel cancel-button\">{{data.cancel}}</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" class=\"button primary submit-button\" cdkFocusInitial (click)=\"confirm()\">{{data.ok}}</button>\r\n</div>\r\n","import { InjectionToken } from '@angular/core';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\n\r\nexport type PreviewUrlTransformer = (entry: FileEntry) => string;\r\n\r\nexport const PREVIEW_URL_TRANSFORMER = new InjectionToken<PreviewUrlTransformer>('PREVIEW_URL_TRANSFORMER', {\r\n    factory: () => {\r\n        return entry => entry.url;\r\n    },\r\n    providedIn: 'root',\r\n});\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterator_1 = require(\"../symbol/iterator\");\nfunction isIterable(input) {\n    return input && typeof input[iterator_1.iterator] === 'function';\n}\nexports.isIterable = isIterable;\n//# sourceMappingURL=isIterable.js.map","import {Ticket} from './Ticket';\r\nimport {User} from './User';\r\nimport {FileEntry} from '@common/uploads/types/file-entry';\r\n\r\nexport class Reply {\r\n    id: number;\r\n    body: string;\r\n    user_id: number;\r\n    ticket_id: number;\r\n    uuid?: string;\r\n    type = 'replies';\r\n    created_at?: string;\r\n    updated_at?: string;\r\n    uploads?: FileEntry[];\r\n    ticket?: Ticket;\r\n    user?: User;\r\n\r\n    constructor(params: Object = {}) {\r\n        for (const name in params) {\r\n            this[name] = params[name];\r\n        }\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {TicketAttachmentsService} from '../ticketing/ticket-attachments.service';\r\nimport {Reply} from '../shared/models/Reply';\r\nimport {DraftPayload, TicketsService} from '../ticketing/tickets.service';\r\nimport {Observable, of} from 'rxjs';\r\nimport {catchError, last, scan, share} from 'rxjs/operators';\r\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {FileEntry} from '@common/uploads/types/file-entry';\r\nimport {UploadFileResponse} from '@common/uploads/uploads-api.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Draft {\r\n    private model: Reply;\r\n    private ticketId: number;\r\n\r\n    constructor(\r\n        private ticketUploads: TicketAttachmentsService,\r\n        private tickets: TicketsService,\r\n        private uploadQueue: UploadQueueService,\r\n        private toast: Toast,\r\n    ) {\r\n        this.reset();\r\n    }\r\n\r\n    public get() {\r\n        return this.model;\r\n    }\r\n\r\n    public set(draft: Reply) {\r\n        this.model = draft;\r\n    }\r\n\r\n    public setBody(contents: string) {\r\n        this.model.body = contents;\r\n    }\r\n\r\n    public setTicketId(id: number) {\r\n        this.ticketId = id;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.model.body.length === 0 && this.model.uploads.length === 0;\r\n    }\r\n\r\n    public uploadFiles(files: UploadedFile[]) {\r\n        // TODO: refactor\r\n        this.uploadQueue.start(files)\r\n            .pipe(\r\n                scan((acc, value: UploadFileResponse) => [...acc, value.fileEntry], []),\r\n                last(),\r\n            )\r\n            .subscribe(entries => {\r\n                this.model.uploads = [...this.model.uploads, ...entries];\r\n                this.save();\r\n            });\r\n    }\r\n\r\n    public detachUpload(fileEntry: FileEntry) {\r\n        this.ticketUploads.detach(this.model.id, fileEntry.id).subscribe(() => {\r\n            const i = this.get().uploads.findIndex(upl => upl.id === fileEntry.id);\r\n            this.get().uploads.splice(i, 1);\r\n        });\r\n    }\r\n\r\n    public save(params: {body?: string} = {}): Observable<{data: Reply}> {\r\n        if (this.isEmpty()) return;\r\n\r\n        const request = this.tickets.saveDraft(\r\n            this.ticketId,\r\n            this.getPayload(params),\r\n            this.model.id,\r\n        ).pipe(\r\n            catchError(() => of({data: this.get()})),\r\n            share()\r\n        );\r\n\r\n        request.subscribe(response => {\r\n            this.set(response['data']);\r\n        });\r\n\r\n        return request;\r\n    }\r\n\r\n    public delete() {\r\n        if (this.model.id) {\r\n            this.tickets.deleteDraft(this.model.id).subscribe();\r\n        }\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public getPayload(params = {}): DraftPayload {\r\n        return Object.assign({}, {\r\n            body: this.model.body || null,\r\n            uploads: this.model.uploads.map(upload => upload.id),\r\n        }, params);\r\n    }\r\n\r\n    public reset() {\r\n        this.set(new Reply({uploads: [], body: ''}));\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar Subscription_1 = require(\"../Subscription\");\nvar observable_1 = require(\"../symbol/observable\");\nfunction scheduleObservable(input, scheduler) {\n    return new Observable_1.Observable(function (subscriber) {\n        var sub = new Subscription_1.Subscription();\n        sub.add(scheduler.schedule(function () {\n            var observable = input[observable_1.observable]();\n            sub.add(observable.subscribe({\n                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n            }));\n        }));\n        return sub;\n    });\n}\nexports.scheduleObservable = scheduleObservable;\n//# sourceMappingURL=scheduleObservable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar Subscription_1 = require(\"../Subscription\");\nfunction scheduleArray(input, scheduler) {\n    return new Observable_1.Observable(function (subscriber) {\n        var sub = new Subscription_1.Subscription();\n        var i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\nexports.scheduleArray = scheduleArray;\n//# sourceMappingURL=scheduleArray.js.map","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewEncapsulation,\r\n    ViewChild,\r\n    OnInit\r\n} from '@angular/core';\r\nimport {TicketsService} from '../tickets.service';\r\nimport {User} from '../../shared/models/User';\r\nimport {AGENT_PERMISSION, Ticket} from '../../shared/models/Ticket';\r\nimport {Users} from '@common/auth/users.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport {take} from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'assign-ticket-dropdown',\r\n    templateUrl: './assign-ticket-dropdown.component.html',\r\n    styleUrls: ['./assign-ticket-dropdown.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AssignTicketDropdownComponent implements OnInit {\r\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\r\n\r\n    public agents: User[] = [];\r\n\r\n    @Input() ticket: Ticket;\r\n    @Input() ticketIds: number[];\r\n\r\n    @Output() assigned = new EventEmitter();\r\n\r\n    constructor(\r\n        private users: Users,\r\n        public currentUser: CurrentUser,\r\n        private tickets: TicketsService,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.trigger.menuOpened\r\n            .pipe(take(1))\r\n            .subscribe(() => {\r\n                this.fetchAgents();\r\n            });\r\n    }\r\n\r\n    public open() {\r\n        this.trigger.openMenu();\r\n    }\r\n\r\n    public close() {\r\n        this.trigger.closeMenu();\r\n    }\r\n\r\n    public assignTicketsTo(userId: number = null) {\r\n        const payload = this.ticketIds ? this.ticketIds : [this.ticket.id];\r\n\r\n        this.tickets.assign(payload, userId).subscribe(() => {\r\n            if (this.ticket) this.ticket.assigned_to = userId;\r\n            this.toast.open('Tickets assigned');\r\n            this.assigned.emit();\r\n        });\r\n    }\r\n\r\n    public fetchAgents() {\r\n        this.users.getAll({permission: AGENT_PERMISSION, per_page: 35}).subscribe((users: User[]) => {\r\n            // filter out currently logged in user as there's already a 'me' dropdown item\r\n            this.agents = users.filter(user => user.id !== this.currentUser.get('id'));\r\n        });\r\n    }\r\n}\r\n","<button class=\"no-style toolbar-item\" [matMenuTriggerFor]=\"assignTicketMenu\"><mat-icon svgIcon=\"user-custom\"></mat-icon></button>\r\n\r\n<mat-menu #assignTicketMenu=\"matMenu\" [overlapTrigger]=\"false\" class=\"assign-ticket-menu\">\r\n    <button mat-menu-item class=\"anyone-item\" (click)=\"assignTicketsTo()\" [class.active]=\"ticket && !ticket.assigned_to\" trans>Anyone</button>\r\n    <button mat-menu-item class=\"me-item\" (click)=\"assignTicketsTo(currentUser.get('id'))\" [class.active]=\"ticket && ticket.assigned_to === currentUser.get('id')\" trans>Me</button>\r\n    <button mat-menu-item class=\"agent-item\" *ngFor=\"let agent of agents\" (click)=\"assignTicketsTo(agent.id)\" [class.active]=\"ticket && ticket.assigned_to == agent.id\">{{agent.email}}</button>\r\n</mat-menu>","import {Component, OnInit, ViewEncapsulation, Input, AfterViewInit, OnDestroy} from '@angular/core';\r\nimport {Conversation} from '../conversation.service';\r\nimport {ConversationTextEditorComponent} from '../conversation-text-editor/conversation-text-editor.component';\r\nimport {ShowOriginalReplyModalComponent} from './show-original-reply-modal/show-original-reply-modal.component';\r\nimport {Reply} from '../../shared/models/Reply';\r\nimport {TicketsService} from '../../ticketing/tickets.service';\r\nimport {UpdateReplyModalComponent} from '../../ticketing/update-reply-modal/update-reply-modal.component';\r\nimport {EchoService} from '../../shared/broadcasting/echo.service';\r\nimport {ConfirmReplyDeleteModalComponent} from '../confirm-reply-delete-modal/confirm-reply-delete-modal.component';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\n\r\nimport * as Prism from 'prismjs';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-markup-templating';\r\nimport 'prismjs/components/prism-php';\r\nimport 'prismjs/components/prism-typescript';\r\nimport 'prismjs/components/prism-javascript';\r\nimport {FileEntry} from '@common/uploads/types/file-entry';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'conversation-replies',\r\n    templateUrl: './conversation-replies.component.html',\r\n    styleUrls: ['./conversation-replies.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ConversationRepliesComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() textEditor: ConversationTextEditorComponent;\r\n    public subscription: Subscription;\r\n\r\n    constructor(\r\n        private modal: Modal,\r\n        public currentUser: CurrentUser,\r\n        private tickets: TicketsService,\r\n        public conversation: Conversation,\r\n        private backendEvents: EchoService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        // make sure only replies to this ticket are added via backend events\r\n        this.subscription = this.backendEvents.ticketReplyCreated.subscribe((reply: Reply) => {\r\n            if (this.conversation.get().id !== reply.ticket_id) return;\r\n            reply['animated'] = true;\r\n            this.conversation.replies.add(reply);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription && this.subscription.unsubscribe();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (Prism) Prism.highlightAll();\r\n    }\r\n\r\n    /**\r\n     * Update existing reply.\r\n     */\r\n    public update(reply: Reply) {\r\n        this.modal.open(UpdateReplyModalComponent, {reply}, {panelClass: 'update-reply-modal-container'})\r\n            .afterClosed()\r\n            .subscribe((newReply: Reply) => {\r\n                if ( ! newReply) return;\r\n                this.conversation.replies.replace(newReply);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Delete specified reply if user confirms this action.\r\n     */\r\n    public maybeDeleteReply(reply: Reply) {\r\n        this.modal.show(ConfirmReplyDeleteModalComponent, {reply})\r\n            .afterClosed()\r\n            .subscribe(confirmed => {\r\n                if ( ! confirmed) return;\r\n                this.conversation.replies.delete(reply);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Open specified draft in text editor.\r\n     */\r\n    public editDraft(draft: Reply) {\r\n        this.conversation.setDraft(draft);\r\n        this.conversation.openEditor();\r\n        this.conversation.replies.remove(draft.id);\r\n    }\r\n\r\n    /**\r\n     * Show original email that this reply was created from.\r\n     * (if it was created from email)\r\n     */\r\n    public showOriginalEmail(reply: Reply) {\r\n        const className = 'show-original-reply-modal-container';\r\n        this.tickets.getOriginalEmailForReply(reply.id).subscribe(response => {\r\n            this.modal.open(ShowOriginalReplyModalComponent, {original: response.data}, {panelClass: className});\r\n        }, () => {\r\n            this.modal.open(ShowOriginalReplyModalComponent, null, {panelClass: className});\r\n        });\r\n    }\r\n\r\n    public removeAttachment(reply: Reply, entry: FileEntry) {\r\n        reply.uploads = reply.uploads.filter(u => u.id !== entry.id);\r\n        this.tickets.updateReply(reply.id, {uploads: reply.uploads})\r\n            .subscribe(() => {}, () => {});\r\n    }\r\n}\r\n","<div class=\"thread\">\r\n    <ng-template ngFor let-reply let-last=\"last\" [ngForOf]=\"conversation.replies.get()\">\r\n        <div class=\"reply animated\" [class.bounce]=\"reply['animated']\" ngClass=\"{{reply.type}}\" [class.my-reply]=\"reply.user_id == currentUser.get('id')\" *ngIf=\"currentUser.hasPermission('replies.view') || reply.type !== 'notes'\">\r\n            <img class=\"user-avatar\" *ngIf=\"reply.user.avatar\" src=\"{{reply.user.avatar}}\" alt=\"{{reply.user.email}}\">\r\n            <div class=\"reply-body\">\r\n                <div class=\"message-header\">\r\n                    <div class=\"customer\">\r\n                        <span class=\"customer-name\">\r\n                            <span *ngIf=\"currentUser.get('id') == reply.user.id\" trans>You</span>\r\n                            <span *ngIf=\"currentUser.get('id') != reply.user.id\">{{reply.user.display_name}}</span>\r\n                        </span>\r\n                        &ngsp;\r\n                        <span class=\"text-gray action-text\" *ngIf=\"!last && reply.type === 'replies'\" trans>replied</span>\r\n                        <span class=\"text-gray action-text\" *ngIf=\"last && reply.type === 'replies'\" trans>started the conversation</span>\r\n                        <span class=\"text-gray action-text\" *ngIf=\"reply.type == 'notes'\" trans>left a note</span>\r\n                        <span class=\"text-gray action-text\" *ngIf=\"reply.type == 'drafts'\" trans>created a draft</span>\r\n\r\n                        <span class=\"draft-actions\" *ngIf=\"reply.type === 'drafts'\">\r\n                            <button type=\"button\" class=\"no-style edit-draft-button\" (click)=\"editDraft(reply)\" trans>Edit</button>\r\n                            <button type=\"button\" class=\"no-style delete-draft-button\" (click)=\"maybeDeleteReply(reply)\" trans>Discard</button>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"meta\">\r\n                        <span class=\"date\">{{reply['created_at_formatted']}}</span>\r\n\r\n                        <ng-container *ngIf=\"currentUser.hasPermission('replies.update') && reply.type !== 'drafts'\">\r\n                            <button mat-icon-button [matMenuTriggerFor]=\"replyActionsMenu\">\r\n                                <mat-icon svgIcon=\"more-vert\"></mat-icon>\r\n                            </button>\r\n                        </ng-container>\r\n\r\n                        <mat-menu #replyActionsMenu=\"matMenu\" class=\"reply-actions-menu\">\r\n                            <div mat-menu-item class=\"update-reply-button\" (click)=\"update(reply)\" trans>Edit</div>\r\n                            <div mat-menu-item class=\"delete-reply-button\" (click)=\"maybeDeleteReply(reply)\" trans>Delete</div>\r\n                            <div mat-menu-item class=\"show-original-reply-button\" (click)=\"showOriginalEmail(reply)\" trans>Show Original</div>\r\n                        </mat-menu>\r\n                    </div>\r\n                </div>\r\n                <div class=\"message-body\" [innerHTML]=\"reply.body\"></div>\r\n                <reply-attachment-list [attachments]=\"reply.uploads\" (detached)=\"removeAttachment(reply, $event)\" *ngIf=\"reply.uploads.length\"></reply-attachment-list>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n","import {Component, Inject, ViewEncapsulation} from '@angular/core';\r\nimport {Conversation} from '../conversation.service';\r\nimport {TicketsService} from '../../ticketing/tickets.service';\r\nimport {Draft} from '../draft.service';\r\nimport {ConversationReplies} from '../conversation-replies.service';\r\nimport {AfterReplyAction} from '../after-reply-action.service';\r\nimport {MailboxTagsService} from '../../ticketing/mailbox-tags.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Ticket} from '../../shared/models/Ticket';\r\nimport {Router} from '@angular/router';\r\n\r\ninterface ConversationModalData {\r\n    ticketId: number;\r\n    activeTicketId?: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'conversation-modal',\r\n    templateUrl: './conversation-modal.component.html',\r\n    styleUrls: ['./conversation-modal.component.scss'],\r\n    providers: [TicketsService, Conversation, Draft, ConversationReplies, AfterReplyAction],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ConversationModalComponent {\r\n\r\n    /**\r\n     * ID of ticket that is currently active behind this modal, if any.\r\n     */\r\n    public activeTicketId: number;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConversationModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ConversationModalData,\r\n        private tickets: TicketsService,\r\n        private modal: Modal,\r\n        public conversation: Conversation,\r\n        private tags: MailboxTagsService,\r\n        private router: Router,\r\n    ) {\r\n        this.hydrate();\r\n    }\r\n\r\n    public close(ticket?: Ticket) {\r\n        this.dialogRef.close(ticket);\r\n    }\r\n\r\n    public openTicket() {\r\n        this.modal.closeAll();\r\n        this.router.navigate(\r\n            ['/mailbox/tickets/tag', this.conversation.getStatus().id, 'ticket', this.conversation.get().id]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Merge currently active ticket with ticket displayed in this modal.\r\n     */\r\n    public mergeTickets() {\r\n        this.modal.show(ConfirmModalComponent, {\r\n            title: 'Merge Tickets',\r\n            body: 'Are you sure you want merge this ticket with the original one behind the pop-ups?',\r\n            bodyBold: 'Merged tickets can not be unmerged.',\r\n            ok: 'Merge'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.tickets.merge(this.activeTicketId, this.conversation.get().id).subscribe(ticket => {\r\n                this.close(ticket);\r\n                this.tags.refresh();\r\n            });\r\n        });\r\n    }\r\n\r\n    private hydrate() {\r\n        this.activeTicketId = this.data.activeTicketId;\r\n\r\n        this.tickets.get(this.data.ticketId).subscribe(response => {\r\n            this.conversation.init(response.ticket);\r\n        });\r\n    }\r\n}\r\n","<mat-dialog-content>\r\n    <conversation [hideSidebar]=\"true\" [hideBackButton]=\"true\">\r\n        <button (click)=\"openTicket()\" class=\"no-style icon-button action\" toolbar-content>\r\n            <mat-icon svgIcon=\"open-in-browser-custom\"></mat-icon>\r\n        </button>\r\n    </conversation>\r\n    <button class=\"merge-button\" mat-raised-button color=\"accent\" (click)=\"mergeTickets()\" *ngIf=\"activeTicketId\" trans>Merge</button>\r\n</mat-dialog-content>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar subscribeToArray_1 = require(\"./subscribeToArray\");\nvar subscribeToPromise_1 = require(\"./subscribeToPromise\");\nvar subscribeToIterable_1 = require(\"./subscribeToIterable\");\nvar subscribeToObservable_1 = require(\"./subscribeToObservable\");\nvar isArrayLike_1 = require(\"./isArrayLike\");\nvar isPromise_1 = require(\"./isPromise\");\nvar isObject_1 = require(\"./isObject\");\nvar iterator_1 = require(\"../symbol/iterator\");\nvar observable_1 = require(\"../symbol/observable\");\nexports.subscribeTo = function (result) {\n    if (!!result && typeof result[observable_1.observable] === 'function') {\n        return subscribeToObservable_1.subscribeToObservable(result);\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        return subscribeToArray_1.subscribeToArray(result);\n    }\n    else if (isPromise_1.isPromise(result)) {\n        return subscribeToPromise_1.subscribeToPromise(result);\n    }\n    else if (!!result && typeof result[iterator_1.iterator] === 'function') {\n        return subscribeToIterable_1.subscribeToIterable(result);\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map","import {Category} from './Category';\n\nexport class Tag {\n    id: number;\n    name: string;\n    display_name: string;\n    type = 'custom';\n    created_at?: string;\n    updated_at?: string;\n    tickets_count?: number;\n    categories?: Category[];\n\n    constructor(params: Object = {}) {\n        for (const name in params) {\n            this[name] = params[name];\n        }\n    }\n}\n","import {Inject, Injectable, Injector} from '@angular/core';\r\nimport {FileEntry} from '../uploads/types/file-entry';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\r\nimport {CURRENT_PREVIEW_FILE} from './current-preview-file';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {filter} from 'rxjs/operators';\r\nimport {PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer} from './preview-url-transformer';\r\n\r\ninterface PreviewFilesMeta {\r\n    entry?: FileEntry;\r\n    pointer?: number;\r\n    total?: number;\r\n    haveNext?: boolean;\r\n    havePrevious?: boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreviewFilesService {\r\n    private files: FileEntry[] = [];\r\n    private portal = new BehaviorSubject(null);\r\n    private meta: BehaviorSubject<PreviewFilesMeta> = new BehaviorSubject({});\r\n    private previewUriTransformer: PreviewUrlTransformer|null = null;\r\n    public download = new Subject();\r\n\r\n    constructor(\r\n        @Inject(AVAILABLE_PREVIEWS) private availablePreviews: DefaultPreviews,\r\n        private injector: Injector,\r\n    ) {}\r\n\r\n    public pagination(): Observable<PreviewFilesMeta> {\r\n        return this.meta\r\n            .pipe(filter(data => data && !!data.entry));\r\n    }\r\n\r\n    public getCurrent(): FileEntry {\r\n        return this.meta.value.entry;\r\n    }\r\n\r\n    public getAllEntries() {\r\n        return this.files;\r\n    }\r\n\r\n    public getPortal(): Observable<ComponentPortal<any>> {\r\n        return this.portal.asObservable();\r\n    }\r\n\r\n    public showNext() {\r\n        if ( ! this.meta.value.haveNext) return;\r\n        this.updateMeta('next');\r\n        this.updatePortal();\r\n    }\r\n\r\n    public showPrevious() {\r\n        if ( ! this.meta.value.havePrevious) return;\r\n        this.updateMeta('previous');\r\n        this.updatePortal();\r\n    }\r\n\r\n    private updateMeta(dir?: 'next'|'previous'|number) {\r\n        let newPointer = 0;\r\n\r\n        if (typeof dir === 'string') {\r\n            const oldPointer = this.meta.value.pointer;\r\n            newPointer = dir === 'next' ? oldPointer + 1 : oldPointer - 1;\r\n        } else if (typeof dir === 'number') {\r\n            newPointer = dir;\r\n        }\r\n\r\n        this.meta.next({\r\n            pointer: newPointer,\r\n            entry: this.files[newPointer],\r\n            total: this.files.length,\r\n            haveNext: (newPointer + 1) < this.files.length,\r\n            havePrevious: (newPointer - 1) > -1,\r\n        });\r\n    }\r\n\r\n    private updatePortal() {\r\n        const current = this.getCurrent();\r\n        const comp = (current && this.availablePreviews[current.type]) || DefaultPreviewComponent;\r\n        this.portal.next(new ComponentPortal(comp, null, this.createInjector()));\r\n    }\r\n\r\n    public set(files: FileEntry[], activeFile?: number) {\r\n        if ( ! files || files.length === 0) return;\r\n        this.files = files.filter(entry => entry.type !== 'folder');\r\n        this.updateMeta(activeFile);\r\n        this.updatePortal();\r\n    }\r\n\r\n    private createInjector(): PortalInjector {\r\n        const injectionTokens = new WeakMap();\r\n\r\n        // set currently active preview file\r\n        injectionTokens.set(CURRENT_PREVIEW_FILE, this.getCurrent());\r\n\r\n        // override preview backend uri, if specified\r\n        if (this.previewUriTransformer) {\r\n            injectionTokens.set(PREVIEW_URL_TRANSFORMER, this.previewUriTransformer);\r\n        }\r\n\r\n        return new PortalInjector(this.injector, injectionTokens);\r\n    }\r\n\r\n    public destroy() {\r\n        this.meta.next({});\r\n        this.files = null;\r\n        this.portal.next(null);\r\n    }\r\n\r\n    /**\r\n     * Provide transformer function for preview file backend url.\r\n     * (for changing base uri, adding url params etc)\r\n     */\r\n    public setPreviewUriTransformer(transformer: PreviewUrlTransformer) {\r\n        this.previewUriTransformer = transformer;\r\n    }\r\n}\r\n","import {Component, Inject, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {CannedRepliesService} from '../canned-replies.service';\r\nimport {CannedReply} from '../../../shared/models/CannedReply';\r\nimport {TextEditorComponent} from '@common/text-editor/text-editor.component';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\nimport {of} from 'rxjs';\r\nimport {delay, take} from 'rxjs/operators';\r\nimport {FileEntry} from '@common/uploads/types/file-entry';\r\n\r\ninterface CrupdateCannedReplyModalData {\r\n    cannedReply?: CannedReply;\r\n    contents?: {body?: string, uploads?: FileEntry[]};\r\n}\r\n\r\ninterface CrupdateCannedReplyModalErrors {\r\n    name?: string;\r\n    body?: string;\r\n    uploads?: string;\r\n    shared?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'crupdate-canned-reply-modal',\r\n    templateUrl: './crupdate-canned-reply-modal.component.html',\r\n    styleUrls: ['./crupdate-canned-reply-modal.component.scss'],\r\n    providers: [UploadQueueService],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CrupdateCannedReplyModalComponent {\r\n    @ViewChild('textEditor', { static: true }) textEditor: TextEditorComponent;\r\n\r\n    public attachments: FileEntry[] = [];\r\n    public model: CannedReply = new CannedReply();\r\n    public errors: CrupdateCannedReplyModalErrors = {};\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<CrupdateCannedReplyModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateCannedReplyModalData,\r\n        private cannedReplies: CannedRepliesService,\r\n        public uploadQueue: UploadQueueService,\r\n    ) {\r\n        of(null).pipe(delay(0), take(1))\r\n            .subscribe(() => this.hydrate());\r\n    }\r\n\r\n    public close(cannedReply?: CannedReply) {\r\n        this.dialogRef.close(cannedReply);\r\n        this.textEditor.destroyEditor();\r\n    }\r\n\r\n    public confirm() {\r\n        let request;\r\n        const payload = this.getPayload();\r\n\r\n        if (this.model.id) {\r\n            request = this.cannedReplies.update(this.model.id, payload);\r\n        } else {\r\n            request = this.cannedReplies.create(payload);\r\n        }\r\n\r\n        request.subscribe(response => {\r\n            this.close(response.data);\r\n        }, errorResponse => this.errors = errorResponse.messages);\r\n    }\r\n\r\n    private getPayload(): Object {\r\n        return {\r\n            name: this.model.name,\r\n            body: this.textEditor.getContents(),\r\n            shared: this.model.shared,\r\n            uploads: this.attachments.map(attachment => attachment.id),\r\n        };\r\n    }\r\n\r\n    private setContents(contents: {body?: string, uploads?: FileEntry[]} = {}) {\r\n        if (contents.body) {\r\n            this.textEditor.setContents(contents.body);\r\n        }\r\n\r\n        if (contents.uploads) {\r\n            this.attachments = contents.uploads.slice();\r\n        }\r\n    }\r\n\r\n    private hydrate() {\r\n        // init modal with specified body and uploads\r\n        if (this.data.contents) {\r\n            this.setContents(this.data.contents);\r\n        }\r\n\r\n        // init modal using existing canned reply\r\n        if (this.data.cannedReply) {\r\n            this.model = new CannedReply(this.data.cannedReply);\r\n            this.setContents({body: this.model.body, uploads: this.model.uploads});\r\n        }\r\n    }\r\n\r\n    public uploadFiles(files: UploadedFile[]) {\r\n        this.uploadQueue.start(files).subscribe(response => {\r\n            this.attachments = [...this.attachments, response.fileEntry];\r\n        });\r\n    }\r\n\r\n    public removeAttachment(entry: FileEntry) {\r\n        for (let i = 0; i < this.attachments.length; i++) {\r\n            if (this.attachments[i].id === entry.id) {\r\n                this.attachments.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title>\r\n        <span *ngIf=\"model.id\" trans>Update Canned Reply</span>\r\n        <span *ngIf=\"!model.id\" trans>New Canned Reply</span>\r\n    </h2>\r\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\r\n    <mat-dialog-content class=\"many-inputs\">\r\n        <div class=\"input-container\">\r\n            <label for=\"canned-reply-name\" trans>Name</label>\r\n            <input type=\"text\" id=\"canned-reply-name\" name=\"canned-reply-name\" [(ngModel)]=\"model.name\">\r\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"shared\" trans>Shared</label>\r\n            <select id=\"shared\" name=\"shared\" [(ngModel)]=\"model.shared\">\r\n                <option [ngValue]=\"true\" trans>Yes</option>\r\n                <option [ngValue]=\"false\" trans>No</option>\r\n            </select>\r\n            <div class=\"error\" *ngIf=\"errors.shared\">{{errors.shared}}</div>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"canned-body\" trans>Canned Reply Body</label>\r\n            <text-editor id=\"canned-body\" inlineUploadPrefix=\"ticket_images\" #textEditor (onFileUpload)=\"uploadFiles($event)\" [minHeight]=\"300\"></text-editor>\r\n            <upload-progress-bar></upload-progress-bar>\r\n\r\n            <div class=\"error\" *ngIf=\"errors.body\">{{errors.body}}</div>\r\n            <div class=\"error\" *ngIf=\"errors.uploads\">{{errors.uploads}}</div>\r\n\r\n            <reply-attachment-list [attachments]=\"attachments\" *ngIf=\"attachments.length\" (detached)=\"removeAttachment($event)\"></reply-attachment-list>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <button (click)=\"close()\" mat-button type=\"button\" class=\"cancel-button\" trans>Cancel</button>\r\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\">\r\n            <span *ngIf=\"model.id\" trans>Update</span>\r\n            <span *ngIf=\"!model.id\" trans>Create</span>\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","<button mat-icon-button class=\"back-button\" (click)=\"closed.emit(true)\" *ngIf=\"showCloseButton\">\r\n    <mat-icon svgIcon=\"arrow-back\"></mat-icon>\r\n</button>\r\n<ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n    <div class=\"entry-name\">\r\n        {{pagination.entry.name}}\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n        <div class=\"navigation\">\r\n            <button mat-icon-button class=\"previous\" [disabled]=\"!pagination.havePrevious\" (click)=\"previewFiles.showPrevious()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-left\"></mat-icon>\r\n            </button>\r\n\r\n            <span class=\"meta\">{{pagination.pointer + 1}} of {{pagination.total}}</span>\r\n\r\n            <button mat-icon-button class=\"next\" [disabled]=\"!pagination.haveNext\" (click)=\"previewFiles.showNext()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n            </button>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <div class=\"actions\">\r\n        <button mat-icon-button (click)=\"downloadFiles()\" [disabled]=\"disableDownload\">\r\n            <mat-icon svgIcon=\"file-download\"></mat-icon>\r\n        </button>\r\n        <ng-content></ng-content>\r\n    </div>\r\n</ng-container>\r\n<a routerLink=\"/drive\" class=\"logo\" *ngIf=\"showLogo && settings.has('branding.logo_light')\">\r\n    <img *ngIf=\"showLogo && settings.get('branding.logo_light')\" [src]=\"settings.getBaseUrl(true) + settings.get('branding.logo_light')\">\r\n</a>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\r\nimport {PreviewFilesService} from '@common/file-preview/preview-files.service';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Component({\r\n    selector: 'file-preview-toolbar',\r\n    templateUrl: './file-preview-toolbar.component.html',\r\n    styleUrls: ['./file-preview-toolbar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FilePreviewToolbarComponent {\r\n    @Input() showLogo = false;\r\n    @Input() disableDownload = false;\r\n    @Input() showCloseButton = false;\r\n\r\n    @Output() closed = new EventEmitter();\r\n\r\n    constructor(\r\n        public previewFiles: PreviewFilesService,\r\n        public settings: Settings,\r\n    ) {}\r\n\r\n    public downloadFiles() {\r\n        this.previewFiles.download.next();\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    Inject,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\r\nimport {PreviewFilesService} from '@common/file-preview/preview-files.service';\r\nimport {OVERLAY_PANEL_DATA} from '@common/core/ui/overlay-panel/overlay-panel-data';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\r\nimport {FileEntry} from '@common/uploads/types/file-entry';\r\n\r\nexport interface FilePreviewOverlayData {\r\n    entries: FileEntry[];\r\n    ticketEntry?: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'file-preview-overlay',\r\n    templateUrl: './file-preview-overlay.component.html',\r\n    styleUrls: ['./file-preview-overlay.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FilePreviewOverlayComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    public entries: FileEntry[] = [];\r\n    @ViewChild('previewContainer', { read: ElementRef, static: true }) previewContainer: ElementRef;\r\n    @ViewChild('moreOptionsButton', { read: ElementRef, static: false }) optionsButton: ElementRef;\r\n    private downloadSub: Subscription;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private overlayRef: OverlayPanelRef,\r\n        private previewFiles: PreviewFilesService,\r\n        private settings: Settings,\r\n        @Inject(OVERLAY_PANEL_DATA) public data: FilePreviewOverlayData\r\n    ) {\r\n        this.entries = data.entries;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.data.ticketEntry) {\r\n            this.previewFiles.setPreviewUriTransformer(this.urlTransformer.bind(this));\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.bindToDownload();\r\n\r\n        this.previewContainer.nativeElement.addEventListener('click', e => {\r\n            if ( ! e.target.closest('.preview-object')) {\r\n                this.overlayRef.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.downloadSub.unsubscribe();\r\n    }\r\n\r\n    public closeOverlay() {\r\n        this.overlayRef.close();\r\n    }\r\n\r\n    private bindToDownload() {\r\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\r\n            const entries = this.previewFiles.getAllEntries();\r\n            this.downloadFile(entries);\r\n        });\r\n    }\r\n\r\n    private downloadFile(entries: FileEntry[]) {\r\n        const hashes = entries.map(entry => entry.hash).join(',');\r\n        let url = `${this.settings.getBaseUrl()}secure/uploads/download?hashes=${hashes}`;\r\n        if (this.data.ticketEntry) url += '&ticketEntry=true';\r\n        downloadFileFromUrl(url);\r\n    }\r\n\r\n    public urlTransformer(entry: FileEntry) {\r\n        return `${entry.url}?ticketEntry=true`;\r\n    }\r\n}\r\n","<file-preview-toolbar [showCloseButton]=\"true\" (closed)=\"closeOverlay()\"></file-preview-toolbar>\r\n<preview-container [files]=\"entries\" #previewContainer></preview-container>","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FileMime {\r\n\r\n    /**\r\n     * Map of mime file type to material design icon name.\r\n     */\r\n    private iconsMap = {\r\n        text: 'insert-drive-file',\r\n        audio: 'volume-up',\r\n        video: 'videocam',\r\n        document: 'assignment',\r\n        image: 'image'\r\n    };\r\n\r\n    /**\r\n     * Return file type based on specified mime.\r\n     */\r\n    public getFileType(mime: string): string {\r\n        return mime.split('/')[0];\r\n    }\r\n\r\n    /**\r\n     * Return icon name based on specified mime.\r\n     */\r\n    public getIconName(mime: string): string {\r\n        const type = this.getFileType(mime);\r\n        return this.iconsMap[type] || this.iconsMap['text'];\r\n    }\r\n}\r\n","<div class=\"attachments-list-item\" *ngFor=\"let attachment of attachments\" (click)=\"showPreviewOverlay(attachment)\">\r\n    <mat-icon class=\"attachment-info type-icon\" [svgIcon]=\"mime.getIconName(attachment.mime)\" [ngClass]=\"mime.getIconName(attachment.mime)\"></mat-icon>\r\n    <div class=\"attachment-info name\">{{ attachment.name }}</div>\r\n    <div class=\"attachment-info size\">{{ attachment.file_size | formattedFileSize }}</div>\r\n    <button class=\"remove-attachment\"\r\n            type=\"button\"\r\n            mat-icon-button\r\n            *ngIf=\"cancelButtonVisible\"\r\n            (click)=\"detachEntry(attachment); $event.stopPropagation()\"\r\n    >\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation} from '@angular/core';\r\nimport {FileMime} from '../file-mime.service';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\r\nimport {FilePreviewOverlayComponent} from '../file-preview-overlay/file-preview-overlay.component';\r\nimport {FileEntry} from '@common/uploads/types/file-entry';\r\n\r\n@Component({\r\n    selector: 'reply-attachment-list',\r\n    templateUrl: './reply-attachment-list.component.html',\r\n    styleUrls: ['./reply-attachment-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ReplyAttachmentListComponent {\r\n    @Input() attachments: FileEntry[];\r\n    @Input() cancelButtonVisible = true;\r\n\r\n    @Output() detached: EventEmitter<FileEntry> = new EventEmitter();\r\n\r\n    constructor(\r\n        public mime: FileMime,\r\n        private overlay: OverlayPanel,\r\n        public uploadQueue: UploadQueueService,\r\n    ) {\r\n    }\r\n\r\n    public detachEntry(entry: FileEntry) {\r\n        const i = this.attachments.findIndex(ent => ent.id === entry.id);\r\n        if (i > -1) {\r\n            this.attachments.splice(i, 1);\r\n            this.detached.emit(entry);\r\n        }\r\n    }\r\n\r\n    public showPreviewOverlay(attachment: FileEntry) {\r\n        this.overlay.open(FilePreviewOverlayComponent, {\r\n                position: 'center',\r\n                origin: 'global',\r\n                data: {entries: [attachment], ticketEntry: true}\r\n            },\r\n        );\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {Users} from '../users.service';\nimport {User} from '../../core/types/models/User';\n\n@Component({\n    selector: 'find-user-modal',\n    templateUrl: './find-user-modal.component.html',\n    styleUrls: ['./find-user-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FindUserModalComponent implements OnInit {\n    public searchFormControl = new FormControl();\n    public loading$ = new BehaviorSubject(false);\n    public users$ = new BehaviorSubject<User[]>([]);\n\n    constructor(\n        private dialogRef: MatDialogRef<FindUserModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: FindUserModalComponent,\n        private users: Users,\n    ) {}\n\n    ngOnInit() {\n        this.searchFormControl.valueChanges\n            .pipe(\n                debounceTime(250),\n                distinctUntilChanged(),\n                switchMap(query => this.searchUsers(query)),\n                catchError(() => of([])),\n            ).subscribe(users => {\n                this.users$.next(users);\n                this.loading$.next(false);\n            });\n    }\n\n    private searchUsers(query: string): Observable<User[]> {\n        this.loading$.next(true);\n        if ( ! query) {\n            return of([]);\n        }\n        return this.users.getAll({query});\n    }\n\n    public close(user?: User) {\n        this.dialogRef.close(user);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Find User</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"no-style close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content>\n    <div class=\"input-container search-input-container\">\n        <input type=\"text\" placeholder=\"Search for user by name or email...\" [formControl]=\"searchFormControl\">\n        <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\n    </div>\n\n    <div class=\"users\">\n        <div class=\"user\" *ngFor=\"let user of users$ | async\" (click)=\"close(user)\">\n            <img [src]=\"user.avatar\">\n            <div class=\"meta overflow-hidden\">\n                <div class=\"name overflow-hidden\">{{user.display_name}}</div>\n                <div class=\"email overflow-hidden\">{{user.email}}</div>\n            </div>\n        </div>\n    </div>\n</mat-dialog-content>","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isPromise(value) {\n    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop_1 = require(\"./noop\");\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","<ng-container>\r\n    <div class=\"conversation-container\">\r\n        <conversation-toolbar [hideBackButton]=\"hideBackButton\">\r\n            <ng-content select=\"[toolbar-content]\"></ng-content>\r\n        </conversation-toolbar>\r\n\r\n        <div class=\"ticket-container\" conversationInfiniteScroll>\r\n            <conversation-header></conversation-header>\r\n            <conversation-text-editor></conversation-text-editor>\r\n            <conversation-replies></conversation-replies>\r\n        </div>\r\n    </div>\r\n\r\n    <conversation-sidebar *ngIf=\"!hideSidebar\"></conversation-sidebar>\r\n</ng-container>\r\n\r\n<loading-indicator [isVisible]=\"conversation.replies.isLoading || conversation.isLoading\" class=\"overlay\"></loading-indicator>\r\n\r\n","import {Component, ElementRef, Input, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {Conversation} from './conversation.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {UploadsApiService} from '@common/uploads/uploads-api.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\n\r\n@Component({\r\n    selector: 'conversation',\r\n    templateUrl: './conversation.component.html',\r\n    styleUrls: ['./conversation.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ConversationComponent implements OnInit {\r\n\r\n    /**\r\n     * If back button should be visible.\r\n     */\r\n    @Input() hideBackButton = false;\r\n\r\n    /**\r\n     * If conversation sidebar should be hidden.\r\n     */\r\n    @Input() hideSidebar = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        public uploads: UploadsApiService,\r\n        public currentUser: CurrentUser,\r\n        public conversation: Conversation,\r\n        private el: ElementRef<HTMLElement>,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe(data => {\r\n            this.conversation.init(data.ticket);\r\n            this.el.nativeElement.focus();\r\n        });\r\n    }\r\n}\r\n","import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisableRipple, mixinDisabled, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinColor(mixinDisableRipple(mixinDisabled(MatChipBase)), 'primary');\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        this._selected = false;\n        this._selectable = true;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        this._chipRipple = new RippleRenderer(this, _ngZone, _elementRef, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipAvatar, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipTrailingIcon, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipRemove, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler($event) { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler($event) { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", selected: \"selected\", value: \"value\", selectable: \"selectable\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disabled', 'disableRipple'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip',\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MatChipAvatar]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MatChipTrailingIcon]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatChipRemove))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     */\n    constructor(_parentChip) {\n        this._parentChip = _parentChip;\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [\"type\", \"button\", 1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } } });\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)',\n                    // Prevent accidental form submissions.\n                    'type': 'button'\n                }\n            }]\n    }], function () { return [{ type: MatChip }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip.disabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler($event) { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler($event) { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;overflow:hidden;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;overflow:hidden;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler($event) { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler($event) { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler($event) { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ( /** @type {?} */(ɵ0))\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon], exports: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ( /** @type {?} */(ɵ0))\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n\n//# sourceMappingURL=chips.js.map","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TextPreviewComponent} from './text-preview/text-preview.component';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {PreviewContainerComponent} from './preview-container/preview-container.component';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {VideoPreviewComponent} from './video-preview/video-preview.component';\r\nimport {ImagePreviewComponent} from './image-preview/image-preview.component';\r\nimport {PdfPreviewComponent} from './pdf-preview/pdf-preview.component';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {AudioPreviewComponent} from './audio-preview/audio-preview.component';\r\nimport {GoogleDocsViewerComponent} from './google-docs-viewer/google-docs-viewer.component';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {PreviewFilesService} from '@common/file-preview/preview-files.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        PortalModule,\r\n        MatButtonModule,\r\n        LoadingIndicatorModule,\r\n    ],\r\n    exports: [\r\n        PreviewContainerComponent,\r\n    ],\r\n    declarations: [\r\n        PreviewContainerComponent,\r\n        TextPreviewComponent,\r\n        VideoPreviewComponent,\r\n        ImagePreviewComponent,\r\n        PdfPreviewComponent,\r\n        DefaultPreviewComponent,\r\n        AudioPreviewComponent,\r\n        GoogleDocsViewerComponent\r\n    ],\r\n    entryComponents: [\r\n        TextPreviewComponent,\r\n        VideoPreviewComponent,\r\n        ImagePreviewComponent,\r\n        PdfPreviewComponent,\r\n        DefaultPreviewComponent,\r\n        AudioPreviewComponent,\r\n        GoogleDocsViewerComponent,\r\n    ],\r\n    providers: [\r\n        OverlayPanel,\r\n        PreviewFilesService,\r\n        {provide: AVAILABLE_PREVIEWS, useClass: DefaultPreviews},\r\n    ]\r\n})\r\nexport class FilePreviewModule {\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"title\">\r\n        <h1 trans>My requests</h1>\r\n        <a routerLink=\"/help-center/tickets/new\" *ngIf=\"!(paginator.noResults$ | async)\" mat-raised-button color=\"accent\" trans>New Request</a>\r\n    </div>\r\n\r\n    <form class=\"filter-form\" [formGroup]=\"form\">\r\n        <div class=\"input-container\">\r\n            <label for=\"customer-ticket-search\" class=\"hidden\" trans>Search requests</label>\r\n            <div class=\"input-with-icon\">\r\n                <input type=\"text\" id=\"customer-ticket-search\" class=\"filter-input\" placeholder=\"Search requests...\" trans-placeholder formControlName=\"query\">\r\n                <button mat-icon-button>\r\n                    <mat-icon svgIcon=\"search\"></mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"input-container status-input-container\">\r\n            <label for=\"customer-ticket-status\" class=\"hidden\" trans>Status</label>\r\n            <select id=\"customer-ticket-status\" class=\"filter-input\" formControlName=\"status\">\r\n                <option value=\"\" trans>All Requests</option>\r\n                <option value=\"open\" trans>Open Requests</option>\r\n                <option value=\"closed\" trans>Closed Requests</option>\r\n                <option value=\"pending\" trans>Awaiting your reply</option>\r\n            </select>\r\n        </div>\r\n    </form>\r\n\r\n    <mat-table [dataSource]=\"dataSource\" matSort class=\"responsive-material-table\">\r\n        <!-- Subject Column -->\r\n        <ng-container matColumnDef=\"subject\">\r\n            <mat-header-cell *matHeaderCellDef trans>Subject</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let ticket\">{{ticket.subject}}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- ID Column -->\r\n        <ng-container matColumnDef=\"id\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header trans>ID</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let ticket\" class=\"hidden-on-mobile\">#{{ticket.id}}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Created At Column -->\r\n        <ng-container matColumnDef=\"created-at\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header=\"created_at\" trans>Created</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let ticket\" class=\"hidden-on-mobile\">{{ticket.created_at | formattedDate}}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Last Updated Column -->\r\n        <ng-container matColumnDef=\"last-updated\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header=\"updated_at\" trans>Last Updated</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let ticket\">{{ticket.updated_at_formatted}}</mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- Status Column -->\r\n        <ng-container matColumnDef=\"status\">\r\n            <mat-header-cell *matHeaderCellDef trans>Status</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let ticket\">\r\n                <mat-chip-list [selectable]=\"false\" *ngIf=\"getStatus(ticket) as status\">\r\n                    <mat-chip [color]=\"!ticket.closed_at ? 'success' : 'standard'\" selected trans>{{status.display_name}}</mat-chip>\r\n                </mat-chip-list>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"['subject', 'id', 'created-at', 'last-updated', 'status']\"></mat-header-row>\r\n        <mat-row\r\n                *matRowDef=\"let ticket; columns: ['subject', 'id', 'created-at', 'last-updated', 'status'];\"\r\n                [class.open]=\"!ticket.closed_at\"\r\n                (click)=\"openConversation(ticket)\"\r\n        ></mat-row>\r\n    </mat-table>\r\n\r\n    <no-results-message *ngIf=\"paginator.noResults$ | async\">\r\n        <span primary-text trans>Could not find any requests.</span>\r\n        <span secondary-text>\r\n                <a routerLink=\"/help-center/tickets/new\" trans>Create a request?</a>\r\n            </span>\r\n    </no-results-message>\r\n\r\n    <mat-paginator [pageSize]=\"15\" [pageSizeOptions]=\"[5, 10, 15, 20]\" [class.hidden]=\"!(paginator.noResults$ | async)\"></mat-paginator>\r\n</div>\r\n\r\n<loading-indicator class=\"overlay\" [isVisible]=\"paginator.loading$ | async\"></loading-indicator>\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Ticket} from '../../shared/models/Ticket';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {Tag} from '../../shared/models/Tag';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Paginator} from '@common/shared/paginator.service';\r\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'customer-tickets-list',\r\n    templateUrl: './customer-tickets-list.component.html',\r\n    styleUrls: ['./customer-tickets-list.component.scss'],\r\n    providers: [Paginator],\r\n})\r\nexport class CustomerTicketsListComponent implements OnInit, OnDestroy {\r\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\r\n    @ViewChild(MatPaginator, { static: true }) matPaginator: MatPaginator;\r\n    public dataSource: PaginatedDataTableSource<Ticket>;\r\n\r\n    public form = new FormGroup({\r\n        query: new FormControl(this.route.snapshot.queryParams.query || ''),\r\n        status: new FormControl(this.route.snapshot.queryParams.status || ''),\r\n    });\r\n\r\n    constructor(\r\n        public paginator: Paginator<Ticket>,\r\n        public currentUser: CurrentUser,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.dataSource = new PaginatedDataTableSource<Ticket>({\r\n            uri: 'users/' + this.currentUser.get('id') + '/tickets',\r\n            dataPaginator: this.paginator,\r\n            matPaginator: this.matPaginator,\r\n            matSort: this.matSort,\r\n        }).init();\r\n\r\n        this.form.valueChanges.subscribe(value => {\r\n            console.log(value);\r\n            this.dataSource.reload(value);\r\n            // this.router.navigate([], {queryParams: value, replaceUrl: true});\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.dataSource.disconnect();\r\n    }\r\n\r\n    public getStatus(ticket: Ticket): Tag {\r\n        return ticket.tags.filter(tag => tag.type === 'status')[0];\r\n    }\r\n\r\n    public openConversation(ticket: Ticket) {\r\n        this.router.navigate(['/help-center/tickets', ticket.id]);\r\n    }\r\n}\r\n","<div class=\"suggestions-container\" [class.has-results]=\"articles.length\">\r\n    <div class=\"input-container\">\r\n        <input class=\"search-input\" type=\"text\" [attr.placeholder]=\"placeholder\" [formControl]=\"searchQuery\">\r\n        <mat-icon svgIcon=\"search\" class=\"search-icon input-icon\" [class.searching]=\"searching\"></mat-icon>\r\n    </div>\r\n\r\n    <section class=\"results-container\">\r\n        <div class=\"results-header\" trans>Were you looking for:</div>\r\n        <div class=\"results\" customScrollbar>\r\n            <a class=\"result\" *ngFor=\"let article of articles\" (click)=\"updateSearchLogger()\" [routerLink]=\"this.urls.article(article)\" target=\"_blank\">\r\n                <mat-icon svgIcon=\"description\"></mat-icon>\r\n                <span class=\"title\">{{article.title}}</span>\r\n            </a>\r\n        </div>\r\n    </section>\r\n</div>","import {Component, Input, OnInit, EventEmitter, ViewEncapsulation, Output} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {HelpCenterService} from '../../help-center/shared/help-center.service';\r\nimport {HcUrls} from '../../help-center/shared/hc-urls.service';\r\nimport {Article} from '../../shared/models/Article';\r\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\r\nimport {of} from 'rxjs';\r\nimport {SearchTermLoggerService} from '../../help-center/front/search-term-logger.service';\r\n\r\n@Component({\r\n    selector: 'suggested-articles-drawer',\r\n    templateUrl: './suggested-articles-drawer.component.html',\r\n    styleUrls: ['./suggested-articles-drawer.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SuggestedArticlesDrawerComponent implements OnInit {\r\n    @Input() public placeholder: string;\r\n    @Input() public categories: number[];\r\n    @Output() public inputValue = new EventEmitter();\r\n\r\n    public searchQuery = new FormControl();\r\n    public articles: Article[] = [];\r\n    public searching = false;\r\n\r\n    constructor(\r\n        private helpCenter: HelpCenterService,\r\n        public urls: HcUrls,\r\n        private searchLogger: SearchTermLoggerService,\r\n    ) {}\r\n\r\n    public ngOnInit() {\r\n        this.searchQuery.valueChanges\r\n            .pipe(\r\n                debounceTime(400),\r\n                distinctUntilChanged(),\r\n                switchMap(query => this.searchArticles(query)),\r\n                catchError(() => of({pagination: {data: []}}))\r\n            ).subscribe(response => {\r\n                this.inputValue.emit(this.searchQuery.value);\r\n                this.searching = false;\r\n                this.setSearchResults(response.pagination.data);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Search help center articles by specified query.\r\n     */\r\n    private searchArticles(query: string) {\r\n        if ( ! query) return of({pagination: {data: []}});\r\n        this.searching = true;\r\n        const params = {query, per_page: 4, categories: this.categories};\r\n        return this.helpCenter.findArticles(params);\r\n    }\r\n\r\n    /**\r\n     * Set specified search result on component instance.\r\n     */\r\n    private setSearchResults(articles: Article[]) {\r\n        if ( ! articles || ! articles.length) {\r\n            // if we've found no articles, wait until drawer\r\n            // animation completes before removing old articles\r\n            setTimeout(() => {\r\n                this.articles = [];\r\n            }, 300);\r\n        } else {\r\n            this.articles = articles;\r\n        }\r\n    }\r\n\r\n    public updateSearchLogger() {\r\n        this.searchLogger.updateSession({\r\n            clickedArticle: true,\r\n        });\r\n    }\r\n}\r\n","<ng-container *ngIf=\"content$ | async as content\">\r\n    <div class=\"left-column\">\r\n        <form (ngSubmit)=\"createTicket()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n            <h1>{{content.title}}</h1>\r\n\r\n            <div class=\"input-container category-input-container\">\r\n                <label for=\"category-select\">{{content.categoryLabel}}</label>\r\n                <select name=\"category\" id=\"category-select\" [(ngModel)]=\"ticketModel.category\">\r\n                    <option [ngValue]=\"category\" *ngFor=\"let category of ticketCategories\">{{category.name}}</option>\r\n                </select>\r\n                <div class=\"errors category-error\" *ngIf=\"errors.category || errors.purchase_code\">{{errors.category || errors.purchase_code}}</div>\r\n            </div>\r\n\r\n            <div class=\"input-container subject-input-container\">\r\n                <label for=\"subject\">{{content.subjectLabel}}</label>\r\n                <suggested-articles-drawer id=\"subject\" (inputValue)=\"ticketModel.subject = $event\" [categories]=\"getArticleCategories()\" trans-placeholder></suggested-articles-drawer>\r\n                <div class=\"errors subject-error\" *ngIf=\"errors.subject\">{{errors.subject}}</div>\r\n            </div>\r\n\r\n            <div class=\"input-container description-input-container\">\r\n                <label for=\"description\">{{content.descriptionLabel}}</label>\r\n                <text-editor id=\"description\" inlineUploadPrefix=\"ticket_images\" (onFileUpload)=\"uploadFiles($event)\" (onChange)=\"ticketModel.body = $event\" [minHeight]=\"230\"></text-editor>\r\n                <upload-progress-bar></upload-progress-bar>\r\n                <div class=\"errors body-error\" *ngIf=\"errors.body\">{{errors.body}}</div>\r\n            </div>\r\n\r\n            <reply-attachment-list [attachments]=\"attachments$ | async\" (detached)=\"removeAttachment($event)\"></reply-attachment-list>\r\n\r\n            <div class=\"buttons\">\r\n                <button class=\"submit-button\" mat-raised-button color=\"accent\" type=\"submit\">{{content.submitButtonText}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n    <div class=\"right-column\">\r\n        <div class=\"header\">{{content.sidebarTitle}}</div>\r\n\r\n        <div class=\"tips\">\r\n            <div class=\"tip-container\" *ngFor=\"let tip of content.sidebarTips\">\r\n                <div class=\"title\">{{tip.title}}</div>\r\n                <div class=\"content\">{{tip.content}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {TicketsService} from '../tickets.service';\r\nimport {HcUrls} from '../../help-center/shared/hc-urls.service';\r\nimport {TextEditorComponent} from '@common/text-editor/text-editor.component';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {UploadsApiService} from '@common/uploads/uploads-api.service';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\nimport {BehaviorSubject, ReplaySubject} from 'rxjs';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {Tag} from '../../shared/models/Tag';\r\nimport {SearchTermLoggerService} from '../../help-center/front/search-term-logger.service';\r\nimport {FileEntry} from '@common/uploads/types/file-entry';\r\nimport {NewTicketPageContent} from '../../admin/appearance/new-ticket-appearance-panel/new-ticket-page-content';\r\n\r\ninterface TicketErrors {\r\n    category?: string;\r\n    purchase_code?: string;\r\n    subject?: string;\r\n    body?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'new-ticket',\r\n    templateUrl: './new-ticket.component.html',\r\n    styleUrls: ['./new-ticket.component.scss'],\r\n    providers: [TicketsService, UploadQueueService],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {id: 'new-ticket'}\r\n})\r\nexport class NewTicketComponent implements OnInit, OnDestroy {\r\n    @ViewChild(TextEditorComponent, { static: false }) textEditor: TextEditorComponent;\r\n\r\n    public errors$ = new BehaviorSubject<TicketErrors>({});\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public attachments$ = new BehaviorSubject<FileEntry[]>([]);\r\n\r\n    public ticketCategories: Tag[] = [];\r\n    public ticketModel: {category?: Tag, body?: string, subject?: string} = {};\r\n    public content$ = new ReplaySubject<NewTicketPageContent>(1);\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n        private tickets: TicketsService,\r\n        private uploads: UploadsApiService,\r\n        private router: Router,\r\n        private urls: HcUrls,\r\n        private route: ActivatedRoute,\r\n        private toast: Toast,\r\n        private uploadQueue: UploadQueueService,\r\n        private searchLogger: SearchTermLoggerService,\r\n    ) {\r\n        this.settings.all$().subscribe(() => {\r\n            this.content$.next(this.settings.getJson('hc.newTicket.appearance', {}));\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe(data => {\r\n            this.ticketCategories = data.categories;\r\n            this.ticketModel.category = this.ticketCategories[0];\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.textEditor.destroyEditor();\r\n    }\r\n\r\n    public createTicket() {\r\n        this.loading$.next(true);\r\n\r\n        const payload = {\r\n            subject: this.ticketModel.subject,\r\n            body: this.ticketModel.body,\r\n            category: this.ticketModel.category && this.ticketModel.category.id,\r\n            uploads: this.uploadQueue.getAllCompleted().map(entry => entry.id)\r\n        };\r\n\r\n        this.tickets.create(payload)\r\n            .pipe(finalize(() => {\r\n                this.loading$.next(false);\r\n            }))\r\n            .subscribe(() => {\r\n                this.searchLogger.updateSessionAndStore({createdTicket: true});\r\n                this.router.navigate(this.urls.customerTicketList());\r\n                this.toast.open('Your request was successfully submitted.');\r\n            }, errors => {\r\n                this.errors$.next(errors.messages);\r\n            });\r\n    }\r\n\r\n    public uploadFiles(files: UploadedFile[]) {\r\n        this.uploadQueue.start(files).subscribe(response => {\r\n            this.attachments$.next([...this.attachments$.value, response.fileEntry]);\r\n        });\r\n    }\r\n\r\n    public removeAttachment(entry: FileEntry) {\r\n        const newAttachments = this.attachments$.value.slice();\r\n        for (let i = 0; i < newAttachments.length; i++) {\r\n            if (newAttachments[i].id === entry.id) {\r\n                newAttachments.splice(i, 1);\r\n            }\r\n        }\r\n        this.attachments$.next(newAttachments);\r\n    }\r\n\r\n    public getArticleCategories(): number[] {\r\n        return this.ticketModel.category ? this.ticketModel.category.categories.map(cat => cat.id) : [];\r\n    }\r\n}\r\n","<material-navbar menuPosition=\"header\" class=\"hc-content-navbar\">\r\n    <suggested-articles-dropdown\r\n            class=\"nav-searchbar\"\r\n            placeholder=\"Search help center...\"\r\n    ></suggested-articles-dropdown>\r\n</material-navbar>\r\n\r\n<breadcrumbs resource=\"Tickets\" resourceType=\"static\" class=\"container\"></breadcrumbs>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<customer-footer *ngIf=\"!settings.get('hc.hide_footer')\"></customer-footer>\r\n","import {Component, ViewEncapsulation} from '@angular/core';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Component({\r\n    selector: 'customer-mailbox.customer-mailbox',\r\n    templateUrl: './customer-mailbox.component.html',\r\n    styleUrls: ['./customer-mailbox.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class CustomerMailboxComponent {\r\n    constructor(public settings: Settings) {}\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"resolve-btn-container\" *ngIf=\"!conversation.get().closed_at\">\r\n        <button mat-raised-button color=\"accent\" (click)=\"markAsSolved()\" trans>Mark as solved</button>\r\n    </div>\r\n    <div class=\"ticket-container\" conversationInfiniteScroll>\r\n        <conversation-header></conversation-header>\r\n        <conversation-text-editor></conversation-text-editor>\r\n        <conversation-replies></conversation-replies>\r\n    </div>\r\n</div>\r\n<loading-indicator [isVisible]=\"conversation.replies.isLoading || conversation.isLoading\" class=\"overlay\"></loading-indicator>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {TicketAttachmentsService} from '../../ticketing/ticket-attachments.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Conversation} from '../../conversation/conversation.service';\r\nimport {UploadsApiService} from '@common/uploads/uploads-api.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {TicketsService} from '../../ticketing/tickets.service';\r\nimport {MailboxTagsService} from '../../ticketing/mailbox-tags.service';\r\n\r\n@Component({\r\n    selector: 'customer-conversation',\r\n    templateUrl: './customer-conversation.component.html',\r\n    styleUrls: ['./customer-conversation.component.scss'],\r\n    providers: [TicketAttachmentsService],\r\n})\r\nexport class CustomerConversationComponent implements OnInit {\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        public uploads: UploadsApiService,\r\n        public currentUser: CurrentUser,\r\n        public conversation: Conversation,\r\n        private tickets: TicketsService,\r\n        private tags: MailboxTagsService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe(data => {\r\n            this.conversation.init(data.ticket);\r\n        });\r\n    }\r\n\r\n    public markAsSolved() {\r\n        const status = this.tags.getStatusTags().find(t => t.name === 'closed');\r\n        this.tickets.changeTicketStatus(this.conversation.get().id, status.name).subscribe(() => {\r\n            this.conversation.afterReplyAction.navigateToCustomerTicketsList('Ticket marked as solved.');\r\n            this.conversation.setStatus(status);\r\n        });\r\n    }\r\n}\r\n","import {RouterModule} from '@angular/router';\r\nimport {CustomerTicketsListComponent} from './customer-tickets-list/customer-tickets-list.component';\r\nimport {NewTicketComponent} from '../ticketing/new-ticket/new-ticket.component';\r\nimport {CustomerMailboxComponent} from './customer-mailbox.component';\r\nimport {CustomerConversationComponent} from './customer-conversation/customer-conversation.component';\r\nimport {TicketResolve} from '../conversation/conversation-resolve.service';\r\nimport {NewTicketCategoriesResolve} from './new-ticket-categories-resolve';\r\nimport {AuthGuard} from '@common/guards/auth-guard.service';\r\n\r\nexport const routing = RouterModule.forChild([\r\n    {path: '', component: CustomerMailboxComponent, canActivate: [AuthGuard], children: [\r\n        {\r\n            path: '',\r\n            component: CustomerTicketsListComponent\r\n        },\r\n        {\r\n            path: 'new',\r\n            component: NewTicketComponent,\r\n            resolve: {categories: NewTicketCategoriesResolve},\r\n            data: {permissions: ['tickets.create', 'tags.view']}\r\n        },\r\n        {\r\n            path: ':id',\r\n            component: CustomerConversationComponent,\r\n            resolve: {ticket: TicketResolve},\r\n        },\r\n    ]},\r\n]);\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CustomerTicketsListComponent} from './customer-tickets-list/customer-tickets-list.component';\r\nimport {routing} from './customer-mailbox.routing';\r\nimport {CustomerMailboxComponent} from './customer-mailbox.component';\r\nimport {NewTicketComponent} from '../ticketing/new-ticket/new-ticket.component';\r\nimport {SuggestedArticlesDrawerComponent} from '../ticketing/suggested-articles-drawer/suggested-articles-drawer.component';\r\nimport {CustomerConversationComponent} from './customer-conversation/customer-conversation.component';\r\nimport {HelpCenterSharedModule} from '../help-center/shared/help-center-shared.module';\r\nimport {ConversationModule} from '../conversation/conversation.module';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {SuggestedArticleDropdownModule} from '../help-center/suggested-articles-dropdown/suggested-article-dropdown.module';\r\nimport {MaterialNavbarModule} from '@common/core/ui/material-navbar/material-navbar.module';\r\nimport {TextEditorModule} from '@common/text-editor/text-editor.module';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {NoResultsMessageModule} from '@common/core/ui/no-results-message/no-results-message.module';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {CustomScrollbarModule} from '@common/core/ui/custom-scrollbar/custom-scrollbar.module';\r\nimport {ReplyAttachmentListModule} from '../shared/reply-attachment-list/reply-attachment-list.module';\r\nimport {CustomerFooterModule} from '../shared/customer-footer/customer-footer.module';\r\nimport {UploadsModule} from '@common/uploads/uploads.module';\r\n\r\n@NgModule({\r\n    imports:      [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        ConversationModule,\r\n        HelpCenterSharedModule,\r\n        SuggestedArticleDropdownModule,\r\n        TextEditorModule,\r\n        MaterialNavbarModule,\r\n        TranslationsModule,\r\n        LoadingIndicatorModule,\r\n        NoResultsMessageModule,\r\n        CustomScrollbarModule,\r\n        ReplyAttachmentListModule,\r\n        CustomerFooterModule,\r\n        UploadsModule,\r\n        routing,\r\n\r\n        // material\r\n        MatIconModule,\r\n        MatTableModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatChipsModule,\r\n        MatButtonModule,\r\n        FormatPipesModule,\r\n    ],\r\n    declarations: [\r\n        CustomerMailboxComponent,\r\n        CustomerTicketsListComponent,\r\n        NewTicketComponent,\r\n        SuggestedArticlesDrawerComponent,\r\n        CustomerConversationComponent,\r\n    ],\r\n    exports: [],\r\n})\r\nexport class CustomerMailboxModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {Router, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport {TicketsService} from '../ticketing/tickets.service';\r\nimport {Ticket} from '../shared/models/Ticket';\r\nimport {mergeMap} from 'rxjs/internal/operators/mergeMap';\r\nimport {EMPTY, Observable} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {of} from 'rxjs/internal/observable/of';\r\n\r\nconst FAILURE_REDIRECT_URI = '/help-center/tickets';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class TicketResolve implements Resolve<Ticket> {\r\n\r\n    constructor(private tickets: TicketsService, private router: Router) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Ticket> {\r\n        const ticketId = route.params['ticket_id'] || route.params['id'];\r\n        return this.tickets.get(+ticketId).pipe(\r\n            catchError(() => {\r\n                this.router.navigate([FAILURE_REDIRECT_URI]);\r\n                return EMPTY;\r\n            }),\r\n            mergeMap(response => {\r\n                if (! response.ticket) {\r\n                    this.router.navigate([FAILURE_REDIRECT_URI]);\r\n                    return EMPTY;\r\n                } else {\r\n                    return of(response.ticket);\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { UploadedFile } from '../uploaded-file';\r\n\r\nexport async function readUploadedFolders(entries: WebKitEntry[]): Promise<UploadedFile[]> {\r\n    let files = [];\r\n\r\n    for (const key in entries) {\r\n        const entry = entries[key];\r\n\r\n        if ( ! entry.isDirectory) {\r\n            files.push(await transformFileEntry(entry as WebKitFileEntry));\r\n        } else {\r\n            files = files.concat(await readDirRecursive(entry as WebKitDirectoryEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nasync function readDirRecursive(entry: WebKitDirectoryEntry, files = []) {\r\n    const entries = await readEntries(entry);\r\n\r\n    for (const key in entries) {\r\n        const childEntry = entries[key];\r\n\r\n        if (childEntry.isDirectory) {\r\n            await readDirRecursive(childEntry as WebKitDirectoryEntry, files);\r\n        } else {\r\n            files.push(await transformFileEntry(childEntry as WebKitFileEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nfunction readEntries(dir: WebKitDirectoryEntry): Promise<WebKitEntry[]> {\r\n    return new Promise(resolve => {\r\n        const reader = dir.createReader();\r\n        reader.readEntries(entries => resolve(entries as any));\r\n    });\r\n}\r\n\r\nfunction transformFileEntry(entry: WebKitFileEntry) {\r\n    return new Promise(resolve => {\r\n        entry.file((file: any) => {\r\n            resolve(new UploadedFile(file as File, entry.fullPath));\r\n        });\r\n    });\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { readUploadedFolders } from '../utils/read-uploaded-folders';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\n\r\n@Directive({\r\n    selector: '[fileDropzone]',\r\n})\r\nexport class UploadDropzoneDirective implements OnInit, OnDestroy {\r\n    @Input() disableDropzoneClick = false;\r\n    @Input() disableDropzone = false;\r\n    @Input() clickButton: ElementRef;\r\n    @Input('fileDropzone') uploadConfig: UploadInputConfig = {};\r\n    @Output() filesDropped: EventEmitter<UploadedFile[]> = new EventEmitter();\r\n\r\n    constructor(protected el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        const el = this.el.nativeElement;\r\n        el.addEventListener('dragenter', (e) => this.handleDragEnter(e));\r\n        el.addEventListener('dragover', (e) => this.handleDragOver(e));\r\n        el.addEventListener('dragleave', (e) => this.handleDragLeave(e));\r\n        el.addEventListener('drop', (e) => this.handleDrop(e));\r\n\r\n        if ( ! this.disableDropzoneClick) {\r\n            const trigger = this.clickButton ? this.clickButton.nativeElement : el;\r\n            trigger.addEventListener('click', () => this.handleClick());\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    protected handleClick() {\r\n        if (this.disableDropzone) return;\r\n        openUploadWindow(this.uploadConfig).then(files => {\r\n            this.emitUploadEvent(files);\r\n        });\r\n    }\r\n\r\n    public handleDragEnter(e) {\r\n        if (this.dropzoneDisabled(e)) return;\r\n        this.el.nativeElement.classList.add('file-over-dropzone');\r\n    }\r\n\r\n    public handleDragOver(e) {\r\n        if (e.preventDefault) e.preventDefault();\r\n        e.dataTransfer.dropEffect = this.dropzoneDisabled(e) ? 'none' : 'move';\r\n        return false;\r\n    }\r\n\r\n    public handleDragLeave(e: MouseEvent) {\r\n        const newEl = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (this.el.nativeElement.contains(newEl)) return;\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    public async handleDrop(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.removeClassesFromDropzone();\r\n        if (this.dropzoneDisabled(e) || !e.dataTransfer.items) return;\r\n\r\n        const items = Array.from(e.dataTransfer.items)\r\n            .filter((item: DataTransferItem) => item.kind === 'file')\r\n            .map((item: DataTransferItem) => {\r\n                return item.webkitGetAsEntry();\r\n            });\r\n\r\n        if (items.length) {\r\n            this.emitUploadEvent(await readUploadedFolders(items));\r\n        }\r\n    }\r\n\r\n    protected emitUploadEvent(files: UploadedFile[]) {\r\n        this.filesDropped.emit(files);\r\n    }\r\n\r\n    protected removeClassesFromDropzone() {\r\n        this.el.nativeElement.classList.remove('file-over-dropzone');\r\n    }\r\n\r\n    protected dropzoneDisabled(e: DragEvent) {\r\n        const hasFiles = e.dataTransfer.types.find(type => type.toLowerCase() === 'files');\r\n        return this.disableDropzone || ! hasFiles;\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ConversationToolbarComponent} from './conversation-toolbar/conversation-toolbar.component';\r\nimport {ConversationHeaderComponent} from './conversation-header/conversation-header.component';\r\nimport {ConversationRepliesComponent} from './conversation-replies/conversation-replies.component';\r\nimport {ConversationTextEditorComponent} from './conversation-text-editor/conversation-text-editor.component';\r\nimport {ConversationSidebarComponent} from './conversation-sidebar/conversation-sidebar.component';\r\nimport {AddNoteModalComponent} from '../ticketing/add-note-modal/add-note-modal.component';\r\nimport {ConversationModalComponent} from './conversation-modal/conversation-modal.component';\r\nimport {ConversationComponent} from './conversation.component';\r\nimport {UpdateReplyModalComponent} from '../ticketing/update-reply-modal/update-reply-modal.component';\r\nimport {CannedRepliesDropdownComponent} from '../ticketing/canned-replies/dropdown/canned-replies-dropdown.component';\r\nimport {ConfirmReplyDeleteModalComponent} from './confirm-reply-delete-modal/confirm-reply-delete-modal.component';\r\nimport {ShowOriginalReplyModalComponent} from './conversation-replies/show-original-reply-modal/show-original-reply-modal.component';\r\nimport {CannedRepliesService} from '../ticketing/canned-replies/canned-replies.service';\r\nimport {Conversation} from './conversation.service';\r\nimport {TicketResolve} from './conversation-resolve.service';\r\nimport {AssignTicketDropdownComponent} from '../ticketing/assign-ticket-dropdown/assign-ticket-dropdown.component';\r\nimport {AddTagDropdownComponent} from '../ticketing/add-tag-dropdown/add-tag-dropdown.component';\r\nimport {TicketsService} from '../ticketing/tickets.service';\r\nimport {TagService} from '../shared/tag.service';\r\nimport {CrupdateCannedReplyModalComponent} from '../ticketing/canned-replies/crupdate-canned-reply-modal/crupdate-canned-reply-modal.component';\r\nimport {Draft} from './draft.service';\r\nimport {ConversationReplies} from './conversation-replies.service';\r\nimport {AfterReplyAction} from './after-reply-action.service';\r\nimport {TicketAttachmentsService} from '../ticketing/ticket-attachments.service';\r\nimport {TextEditorModule} from '@common/text-editor/text-editor.module';\r\nimport {FilePreviewModule} from '@common/file-preview/file-preview.module';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {SuggestedArticleDropdownModule} from '../help-center/suggested-articles-dropdown/suggested-article-dropdown.module';\r\nimport {MaterialNavbarModule} from '@common/core/ui/material-navbar/material-navbar.module';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {ReplyAttachmentListModule} from '../shared/reply-attachment-list/reply-attachment-list.module';\r\nimport {UploadsModule} from '@common/uploads/uploads.module';\r\nimport {ConversationInfiniteScrollDirective} from '../shared/conversation-infinite-scroll.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        TextEditorModule,\r\n        FilePreviewModule,\r\n        MaterialNavbarModule,\r\n        TranslationsModule,\r\n        FormatPipesModule,\r\n        LoadingIndicatorModule,\r\n        ReplyAttachmentListModule,\r\n        UploadsModule,\r\n\r\n        // conversation article search\r\n        SuggestedArticleDropdownModule,\r\n\r\n        // material\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n    ],\r\n    declarations: [\r\n        ConversationToolbarComponent,\r\n        ConversationHeaderComponent,\r\n        ConversationRepliesComponent,\r\n        ConversationTextEditorComponent,\r\n        ConversationSidebarComponent,\r\n        AddNoteModalComponent,\r\n        ConversationModalComponent,\r\n        ConversationComponent,\r\n        UpdateReplyModalComponent,\r\n        CrupdateCannedReplyModalComponent,\r\n        CannedRepliesDropdownComponent,\r\n        ConfirmReplyDeleteModalComponent,\r\n        ShowOriginalReplyModalComponent,\r\n        AssignTicketDropdownComponent,\r\n        AddTagDropdownComponent,\r\n        ConversationInfiniteScrollDirective,\r\n    ],\r\n    exports: [\r\n        ConversationHeaderComponent,\r\n        ConversationTextEditorComponent,\r\n        ConversationRepliesComponent,\r\n        AddTagDropdownComponent,\r\n        AssignTicketDropdownComponent,\r\n        AddNoteModalComponent,\r\n        ConversationInfiniteScrollDirective,\r\n    ],\r\n    providers: [\r\n        CannedRepliesService,\r\n        Conversation,\r\n        ConversationReplies,\r\n        TicketsService,\r\n        TicketAttachmentsService,\r\n        TicketResolve,\r\n        TagService,\r\n        Draft,\r\n        AfterReplyAction,\r\n    ]\r\n})\r\nexport class ConversationModule { }\r\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadInputConfig } from '../upload-input-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\n@Directive({\r\n    selector: '[uploadButton]'\r\n})\r\nexport class UploadButtonDirective implements OnInit {\r\n    @Input('uploadButton') config: UploadInputConfig = {};\r\n    @Output() filesSelected = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            openUploadWindow(this.config).then(files => {\r\n                if (files && files.length) {\r\n                    this.filesSelected.emit(files);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar scheduleObservable_1 = require(\"./scheduleObservable\");\nvar schedulePromise_1 = require(\"./schedulePromise\");\nvar scheduleArray_1 = require(\"./scheduleArray\");\nvar scheduleIterable_1 = require(\"./scheduleIterable\");\nvar isInteropObservable_1 = require(\"../util/isInteropObservable\");\nvar isPromise_1 = require(\"../util/isPromise\");\nvar isArrayLike_1 = require(\"../util/isArrayLike\");\nvar isIterable_1 = require(\"../util/isIterable\");\nfunction scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable_1.isInteropObservable(input)) {\n            return scheduleObservable_1.scheduleObservable(input, scheduler);\n        }\n        else if (isPromise_1.isPromise(input)) {\n            return schedulePromise_1.schedulePromise(input, scheduler);\n        }\n        else if (isArrayLike_1.isArrayLike(input)) {\n            return scheduleArray_1.scheduleArray(input, scheduler);\n        }\n        else if (isIterable_1.isIterable(input) || typeof input === 'string') {\n            return scheduleIterable_1.scheduleIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\nexports.scheduled = scheduled;\n//# sourceMappingURL=scheduled.js.map","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {TicketsService} from '../tickets.service';\r\nimport {TagService} from '../../shared/tag.service';\r\nimport {Tag} from '../../shared/models/Tag';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {MatMenuTrigger} from '@angular/material/menu';\r\nimport {PaginationParams} from '@common/core/types/pagination/pagination-params';\r\n\r\n@Component({\r\n    selector: 'add-tag-dropdown',\r\n    templateUrl: './add-tag-dropdown.component.html',\r\n    styleUrls: ['./add-tag-dropdown.component.scss'],\r\n})\r\nexport class AddTagDropdownComponent implements OnInit {\r\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\r\n\r\n    @Input() ticketIds: number[] = [];\r\n    @Output() tagAdded: EventEmitter<Tag> = new EventEmitter();\r\n\r\n    public tags: Tag[];\r\n    public tagQuery = new FormControl();\r\n    public searchedOnce = false;\r\n\r\n    constructor(\r\n        private tickets: TicketsService,\r\n        private tagService: TagService,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.bindTagQueryInput();\r\n\r\n        this.trigger.menuOpened.subscribe(() => {\r\n            if ( ! this.searchedOnce) {\r\n                this.searchForTags(null, {perPage: 5});\r\n            }\r\n        });\r\n\r\n        this.trigger.menuClosed.subscribe(() => {\r\n            this.clearSearchField();\r\n        });\r\n    }\r\n\r\n    public open() {\r\n        this.trigger.openMenu();\r\n    }\r\n\r\n    public close() {\r\n        this.trigger.closeMenu();\r\n    }\r\n\r\n    public addTag(tagName: string) {\r\n        this.tickets.addTag(tagName, this.ticketIds).subscribe(response => {\r\n            this.clearSearchField();\r\n            this.toast.open('Tag added');\r\n            this.tagAdded.emit(response.data);\r\n        });\r\n    }\r\n\r\n    public clearSearchField() {\r\n        if ( ! this.tagQuery.value) return;\r\n        this.tagQuery.setValue(null);\r\n    }\r\n\r\n    private bindTagQueryInput() {\r\n        this.tagQuery.valueChanges\r\n            .pipe(debounceTime(300), distinctUntilChanged())\r\n            .subscribe(query => {\r\n                this.searchForTags(query);\r\n            });\r\n    }\r\n\r\n    private searchForTags(query?: string, params: PaginationParams = {}) {\r\n        this.tagService.search(query, params)\r\n            .subscribe(response => this.tags = response.pagination.data);\r\n    }\r\n\r\n    public trackByFn = (i: number, tag: Tag) => tag.id;\r\n}\r\n","<button class=\"no-style add-tag-button toolbar-item\" [matMenuTriggerFor]=\"addTagMenu\"><mat-icon svgIcon=\"add-tag-custom\"></mat-icon></button>\r\n\r\n<mat-menu #addTagMenu=\"matMenu\" [overlapTrigger]=\"false\" class=\"add-tag-menu\">\r\n    <form class=\"input-container\" (ngSubmit)=\"addTag(tagQuery.value)\" (click)=\"$event.stopPropagation()\">\r\n        <input type=\"text\" [formControl]=\"tagQuery\" (keydown)=\"$event.stopPropagation()\" mat-menu-item class=\"tag-search-input\">\r\n    </form>\r\n    <button mat-menu-item class=\"tag-item\" *ngFor=\"let tag of tags; trackBy: trackByFn\" (click)=\"addTag(tag.name)\">{{tag.name}}</button>\r\n</mat-menu>\r\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isFunction_1 = require(\"./util/isFunction\");\nvar Observer_1 = require(\"./Observer\");\nvar Subscription_1 = require(\"./Subscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError_1.hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError_1.hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexports.SafeSubscriber = SafeSubscriber;\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObject(x) {\n    return x !== null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {UploadButtonDirective} from './directives/upload-button.directive';\r\nimport {UploadDropzoneDirective} from './directives/upload-dropzone.directive';\r\nimport {UploadProgressBarComponent} from './upload-progress-bar/upload-progress-bar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatProgressBarModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n    exports: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n})\r\nexport class UploadsModule {\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError_1.hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {ConversationModalComponent} from '../conversation-modal/conversation-modal.component';\r\nimport {User} from '../../shared/models/User';\r\nimport {Ticket} from '../../shared/models/Ticket';\r\nimport {Conversation} from '../conversation.service';\r\nimport {TicketsService} from '../../ticketing/tickets.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {PurchaseCode} from '../../shared/models/PurchaseCode';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\r\n\r\n@Component({\r\n    selector: 'conversation-sidebar',\r\n    templateUrl: './conversation-sidebar.component.html',\r\n    styleUrls: ['./conversation-sidebar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ConversationSidebarComponent implements OnInit {\r\n    public requester: User;\r\n    public otherTickets: Ticket[];\r\n    public previousTicketsVisible = true;\r\n    public envatoPurchase: PurchaseCode;\r\n    private activeTicket: Ticket;\r\n\r\n    constructor(\r\n        private modal: Modal,\r\n        private tickets: TicketsService,\r\n        private conversation: Conversation,\r\n        private route: ActivatedRoute,\r\n        private toast: Toast,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe(data => {\r\n            this.activeTicket = data.ticket;\r\n            this.loadUserData();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Show given ticket in a modal.\r\n     */\r\n    public openTicketModal(ticketId: number) {\r\n        const params = {ticketId: ticketId, activeTicketId: this.conversation.get().id};\r\n\r\n        // if tickets were merged, set merged ticket on conversation\r\n        // service and remove merged ticket from sidebar\r\n        this.modal.open(ConversationModalComponent, params, 'conversation-modal-container')\r\n            .afterClosed()\r\n            .subscribe(mergedTicket => {\r\n                if ( ! mergedTicket) return;\r\n                this.otherTickets = this.otherTickets.filter(ticket => ticket.id !== ticketId);\r\n                this.conversation.init(mergedTicket);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Get tickets (except currently active one) of active ticket requester.\r\n     */\r\n    private getUserTicketsExceptCurrent() {\r\n        this.requester = this.activeTicket.user;\r\n\r\n        if ( ! this.requester) return;\r\n\r\n        this.tickets.getTickets({user_id: this.requester.id, per_page: 6}).subscribe(response => {\r\n            this.otherTickets = response.pagination.data.filter(ticket => {\r\n                // skip currently open ticket\r\n                return ticket.id !== this.activeTicket.id;\r\n            });\r\n        });\r\n    }\r\n\r\n    public setEnvatoPurchase() {\r\n        const category = this.conversation.getCategory();\r\n        if ( ! this.requester.purchase_codes.length || ! category) return;\r\n        const categoryName = category.name.toLowerCase();\r\n        const bestMatch = this.requester.purchase_codes.find(code => {\r\n            return code.item_name.toLowerCase().indexOf(categoryName) > -1;\r\n        });\r\n        this.envatoPurchase = bestMatch || this.requester.purchase_codes[0];\r\n    }\r\n\r\n    public changeCustomer() {\r\n        this.modal.open(FindUserModalComponent).beforeClosed()\r\n            .subscribe(user => {\r\n                if ( ! user) return;\r\n                this.tickets.update(this.activeTicket.id, {user_id: user.id})\r\n                    .subscribe(() => {\r\n                        this.requester = user;\r\n                        this.loadUserData();\r\n                        this.toast.open('Customer changed.');\r\n                    });\r\n            });\r\n    }\r\n\r\n    private loadUserData() {\r\n        this.getUserTicketsExceptCurrent();\r\n        this.setEnvatoPurchase();\r\n    }\r\n}\r\n","<div class=\"user-info\" *ngIf=\"requester\">\r\n    <a class=\"avatar\" [routerLink]=\"['/mailbox/users', requester.id]\">\r\n        <img [src]=\"requester.avatar\" alt=\"Avatar\">\r\n    </a>\r\n\r\n    <div class=\"user-details\">\r\n        <div class=\"name\">\r\n            <div class=\"text\" [title]=\"requester.display_name\">{{requester.display_name}}</div>\r\n            <button mat-icon-button [matMenuTriggerFor]=\"editCustomerMenu\">\r\n                <mat-icon svgIcon=\"settings\"></mat-icon>\r\n            </button>\r\n        </div>\r\n        <div class=\"info-line\">\r\n            <mat-icon svgIcon=\"mail\"></mat-icon>\r\n            <span [title]=\"requester.email\">{{requester.email}}</span>\r\n        </div>\r\n\r\n        <mat-menu #editCustomerMenu=\"matMenu\">\r\n            <a mat-menu-item [routerLink]=\"['/mailbox/users', requester.id]\" trans>Edit Profile</a>\r\n            <button mat-menu-item (click)=\"changeCustomer()\" trans>Change Customer</button>\r\n        </mat-menu>\r\n\r\n        <div class=\"info-container\" *ngIf=\"envatoPurchase\">\r\n            <div class=\"info-title\">\r\n                <span trans>Envato</span>\r\n            </div>\r\n            <div class=\"info-line\" *ngIf=\"envatoPurchase.envato_username\">\r\n                <mat-icon svgIcon=\"person\"></mat-icon>\r\n                <a [href]=\"'https://codecanyon.net/user/' + envatoPurchase.envato_username\" [title]=\"envatoPurchase.envato_username\" target=\"_blank\">{{envatoPurchase.envato_username}}</a>\r\n            </div>\r\n            <div class=\"info-line\" [matTooltip]=\"'Supported until' | trans\" *ngIf=\"envatoPurchase.supported_until\">\r\n                <mat-icon svgIcon=\"access-time\"></mat-icon>\r\n                <span>{{envatoPurchase.supported_until | formattedDate}}</span>\r\n            </div>\r\n            <div class=\"envato-purchases\">\r\n                <div class=\"purchase-item\" *ngFor=\"let purchase of requester.purchase_codes | slice:0:5\">\r\n                    <img [src]=\"purchase.image\" alt=\"Purchase image\">\r\n                    <div class=\"purchase-name\">{{purchase.item_name}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"tickets-list-container\" [class.tickets-visible]=\"previousTicketsVisible\">\r\n    <div class=\"title\" (click)=\"previousTicketsVisible = !previousTicketsVisible\">\r\n        <span class=\"text\" trans>Other Conversations</span>\r\n        <button class=\"no-style toggle-button\"><mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon></button>\r\n    </div>\r\n\r\n    <div class=\"tickets-list toggle-container\" *ngIf=\"otherTickets\">\r\n        <div class=\"ticket\" *ngFor=\"let ticket of otherTickets\" [class.open]=\"!ticket.closed_at\" (click)=\"openTicketModal(ticket.id)\">\r\n            <mat-icon svgIcon=\"mail\"></mat-icon>\r\n            <span>{{ticket.subject}}</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar observable_1 = require(\"../symbol/observable\");\nfunction isInteropObservable(input) {\n    return input && typeof input[observable_1.observable] === 'function';\n}\nexports.isInteropObservable = isInteropObservable;\n//# sourceMappingURL=isInteropObservable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar fromArray_1 = require(\"./fromArray\");\nvar scheduleArray_1 = require(\"../scheduled/scheduleArray\");\nfunction of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        args.pop();\n        return scheduleArray_1.scheduleArray(args, scheduler);\n    }\n    else {\n        return fromArray_1.fromArray(args);\n    }\n}\nexports.of = of;\n//# sourceMappingURL=of.js.map","import {Injectable} from '@angular/core';\r\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\r\nimport {BackendResponse} from '@common/core/types/backend-response';\r\nimport {Tag} from './models/Tag';\r\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\r\nimport {PaginationParams} from '@common/core/types/pagination/pagination-params';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TagService {\r\n    private baseUri = 'tags';\r\n\r\n    constructor(private http: HttpCacheClient) {}\r\n\r\n    public getTags(params?: PaginationParams): PaginatedBackendResponse<Tag> {\r\n        return this.http.getWithCache(this.baseUri, params);\r\n    }\r\n\r\n    public createNew(data: Partial<Tag>): BackendResponse<{tag: Tag}> {\r\n        return this.http.post(this.baseUri, data);\r\n    }\r\n\r\n    public update(id: number, data: Partial<Tag>): BackendResponse<{tag: Tag}> {\r\n        return this.http.put(this.baseUri + '/' + id, data);\r\n    }\r\n\r\n    public deleteMultiple(ids: number[]) {\r\n        return this.http.delete(this.baseUri + '/delete-multiple', {ids});\r\n    }\r\n\r\n    public search(query: string, params: PaginationParams = {}): PaginatedBackendResponse<Tag> {\r\n        params = {\r\n            ...{query, notType: 'status', perPage: 10},\r\n            ...params\r\n        };\r\n        return this.http.get(this.baseUri, params);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReplyAttachmentListComponent} from './reply-attachment-list.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\nimport {FilePreviewOverlayComponent} from '../file-preview-overlay/file-preview-overlay.component';\nimport {FilePreviewToolbarComponent} from '../file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component';\nimport {FilePreviewModule} from '@common/file-preview/file-preview.module';\n\n@NgModule({\n    declarations: [\n        ReplyAttachmentListComponent,\n        FilePreviewOverlayComponent,\n        FilePreviewToolbarComponent,\n    ],\n    imports: [\n        CommonModule,\n        FilePreviewModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        FormatPipesModule,\n    ],\n    exports: [\n        ReplyAttachmentListComponent,\n    ],\n})\nexport class ReplyAttachmentListModule {\n}\n","import {Injectable} from '@angular/core';\r\nimport {Reply} from '../shared/models/Reply';\r\nimport {TicketsService} from '../ticketing/tickets.service';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ConversationReplies {\r\n\r\n    /**\r\n     * Current conversation replies.\r\n     */\r\n    private replies: Reply[] = [];\r\n\r\n    /**\r\n     * Current replies infinite load page.\r\n     */\r\n    public currentPage = 1;\r\n\r\n    /**\r\n     * Last replies infinite load page.\r\n     */\r\n    public lastPage = 2;\r\n\r\n    /**\r\n     * Whether replies are currently being loaded.\r\n     */\r\n    public isLoading = false;\r\n\r\n    /**\r\n     * ID of currently active ticket.\r\n     */\r\n    private ticketId: number;\r\n\r\n    /**\r\n     * ConversationReplies service constructor.\r\n     */\r\n    constructor(private tickets: TicketsService, private toast: Toast) {}\r\n\r\n    /**\r\n     * Get current conversation replies.\r\n     */\r\n    public get() {\r\n        return this.replies;\r\n    }\r\n\r\n    /**\r\n     * Add specified reply.\r\n     */\r\n    public add(reply: Reply) {\r\n        // if specified reply does not have ID, bail\r\n        if ( ! reply || ! reply.id) return;\r\n\r\n        // if reply does not already exist, add it to replies array\r\n        if ( ! this.replies.find(existing => existing.id === reply.id)) {\r\n            this.replies.unshift(reply);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Replace existing reply with specified one.\r\n     */\r\n    public replace(newReply: Reply) {\r\n        const index = this.replies.findIndex(oldReply => oldReply.id === newReply.id);\r\n        this.replies[index] = newReply;\r\n    }\r\n\r\n    /**\r\n     * Remove specified reply.\r\n     */\r\n    public remove(replyId: number) {\r\n        this.replies = this.replies.filter(reply => reply.id !== replyId);\r\n    }\r\n\r\n    /**\r\n     * Delete specified reply from server.\r\n     */\r\n    public delete(reply: Reply) {\r\n        const method = reply.type === 'drafts' ? 'deleteDraft' : 'deleteReply';\r\n\r\n        this.tickets[method](reply.id).subscribe(() => {\r\n            this.remove(reply.id);\r\n            this.toast.open('Deleted successfully');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load next page of replies from the server.\r\n     */\r\n    public loadMore() {\r\n        if (this.isLoading) return;\r\n\r\n        this.isLoading = true;\r\n\r\n        this.tickets.getTicketReplies(this.ticketId, this.currentPage + 1).subscribe(response => {\r\n            this.replies = this.replies.concat(response.pagination.data);\r\n            this.currentPage = response.pagination.current_page;\r\n            this.lastPage = response.pagination.last_page;\r\n            this.isLoading = false;\r\n        }, () => {\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check if more replies can be loaded from the server.\r\n     */\r\n    public canLoadMore(): boolean {\r\n        return this.currentPage < this.lastPage;\r\n    }\r\n\r\n    /**\r\n     * Init or reset conversation replies service.\r\n     */\r\n    public init(replies: Reply[], ticketId: number) {\r\n        this.replies = replies.slice();\r\n        this.currentPage = 1;\r\n        this.lastPage = 2;\r\n        this.ticketId = ticketId;\r\n    }\r\n}\r\n","import {Injectable, NgZone} from '@angular/core';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\r\nimport {BreakpointsService} from '../../core/ui/breakpoints.service';\r\nimport {Editor, EditorManager} from 'tinymce';\r\nimport {Translations} from '../../core/translations/translations.service';\r\n\r\nconst EDITOR_TOOLBAR_HEIGHT = 74;\r\n\r\ndeclare const tinymce: EditorManager;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TinymceTextEditor {\r\n    private bootstrapPromise: Promise<Editor> | boolean;\r\n    private bootstrapPromiseResolve: any;\r\n    private config: { [key: string]: any };\r\n    public tinymceInstance: Editor|any;\r\n\r\n    constructor(\r\n        private settings: Settings,\r\n        private zone: NgZone,\r\n        private lazyLoader: LazyLoaderService,\r\n        private breakpoints: BreakpointsService,\r\n        private i18n: Translations,\r\n    ) {\r\n        this.makeBootstrapPromise();\r\n    }\r\n\r\n    public reset() {\r\n        if (!this.editorIsReady()) return;\r\n        this.tinymceInstance.setContent('');\r\n        this.tinymceInstance.undoManager.clear();\r\n    }\r\n\r\n    public focus() {\r\n        this.waitForEditor().then(() => {\r\n            this.tinymceInstance.focus(false);\r\n        });\r\n    }\r\n\r\n    public hasUndo(): boolean {\r\n        return this.editorIsReady() && this.tinymceInstance.undoManager.hasUndo();\r\n    }\r\n\r\n    public hasRedo(): boolean {\r\n        return this.editorIsReady() && this.tinymceInstance.undoManager.hasRedo();\r\n    }\r\n\r\n    /**\r\n     * Queries the current state for specified tinymce command.\r\n     * For example if the current selection is \"bold\".\r\n     */\r\n    public queryCommandState(name: string): boolean | number {\r\n        return this.editorIsReady() && this.tinymceInstance.queryCommandState(name);\r\n    }\r\n\r\n    public execCommand(name: string, value: string | number = null) {\r\n        this.waitForEditor().then(() => {\r\n            this.zone.run(() => {\r\n                this.tinymceInstance.execCommand(name, false, value);\r\n            });\r\n        });\r\n    }\r\n\r\n    public getContents(params?: Object): string {\r\n        if (!this.editorIsReady()) return '';\r\n        return this.tinymceInstance.getContent(params);\r\n    }\r\n\r\n    public setContents(contents: string) {\r\n        this.waitForEditor().then(() => {\r\n            if (!this.tinymceInstance.undoManager) return;\r\n\r\n            this.tinymceInstance.undoManager.transact(() => {\r\n                this.tinymceInstance.setContent(contents);\r\n            });\r\n\r\n            this.tinymceInstance.selection.setCursorLocation();\r\n            this.tinymceInstance.nodeChanged();\r\n            this.tinymceInstance.execCommand('mceResize');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Insert specified contents at the end of tinymce.\r\n     */\r\n    public insertContents(contents) {\r\n        this.waitForEditor().then(() => {\r\n            this.tinymceInstance.execCommand('mceInsertContent', false, contents);\r\n            setTimeout(() => this.tinymceInstance.selection.collapse());\r\n        });\r\n    }\r\n\r\n    public insertImage(url: string) {\r\n        this.waitForEditor().then(() => {\r\n            this.insertContents('<img src=\"' + url + '\"/>');\r\n            setTimeout(() => this.execCommand('mceAutoResize'), 500);\r\n        });\r\n    }\r\n\r\n    public waitForEditor(): Promise<Editor> {\r\n        // editor already bootstrapped\r\n        if (this.tinymceInstance) {\r\n            return new Promise(resolve => resolve(this.tinymceInstance));\r\n        }\r\n        // editor is still bootstrapping\r\n        if (this.bootstrapPromise) {\r\n            return this.bootstrapPromise as Promise<Editor>;\r\n        }\r\n    }\r\n\r\n    public setConfig(config: object) {\r\n        this.config = config;\r\n        this.loadTinymce().then(() => {\r\n            this.initTinymce();\r\n        });\r\n    }\r\n\r\n    private editorIsReady(): boolean {\r\n        return !this.bootstrapPromise && !!this.tinymceInstance && !!this.tinymceInstance.undoManager;\r\n    }\r\n\r\n    private loadTinymce(): Promise<any> {\r\n        return this.lazyLoader.loadAsset('js/tinymce/tinymce.min.js', {type: 'js'});\r\n    }\r\n\r\n    private initTinymce() {\r\n        const config: any = {\r\n            target: this.config.textAreaEl.nativeElement,\r\n            plugins: ['link', 'codesample', 'paste', 'autoresize'],\r\n            branding: false,\r\n            browser_spellcheck: true,\r\n            max_height: this.config.maxHeight,\r\n            min_height: this.config.minHeight,\r\n            autoresize_on_init: false,\r\n            paste_as_text: true,\r\n            elementpath: false,\r\n            statusbar: false,\r\n            menubar: false,\r\n            convert_urls: false,\r\n            forced_root_block: false,\r\n            element_format: 'html',\r\n            body_class: 'editor-body',\r\n            content_style: `html {font-size: 62.5%;}\r\n.editor-body {font-size: 1.4rem;font-family: \"Roboto\", \"Helvetica Neue\", sans-serif;color: rgba(0, 0, 0, .87);}\r\nimg {max-width: 100%}\r\ncode[class*=language-], pre[class*=language-] {font-size: inherit;}`,\r\n            content_css: ['https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,400italic'],\r\n            default_link_target: '_blank',\r\n            link_assume_external_targets: true,\r\n            target_list: false,\r\n            link_title: false,\r\n            image_dimensions: false,\r\n            image_description: false,\r\n            setup: editor => {\r\n                this.tinymceInstance = editor;\r\n                editor.on('change', () => this.config.onChange.emit(editor.getContent()));\r\n\r\n                editor.on('click', () => {\r\n                    // need to run angular zone on editor (iframe) click\r\n                    // so custom editor buttons are highlighted properly\r\n                    this.zone.run(() => {\r\n                    });\r\n                });\r\n\r\n                editor.shortcuts.add('ctrl+13', 'desc', () => {\r\n                    this.zone.run(() => {\r\n                        this.config.onChange.emit(editor.getContent());\r\n                        this.config.onCtrlEnter.emit();\r\n                    });\r\n                });\r\n            },\r\n            init_instance_callback: () => {\r\n                this.bootstrapPromise = false;\r\n                this.bootstrapPromiseResolve(this.tinymceInstance);\r\n            }\r\n        };\r\n\r\n        // need to show toolbar on mobile, otherwise tinymce will error out\r\n        if (!this.breakpoints.isMobile$.value) {\r\n            config.toolbar = false;\r\n        }\r\n\r\n        if (this.config['showAdvancedControls']) {\r\n            config.plugins = config.plugins.concat(['media', 'hr', 'visualblocks', 'visualchars', 'wordcount']);\r\n            config.forced_root_block = 'p';\r\n            config.statusbar = true;\r\n            config.autoresize_on_init = true;\r\n            config.extended_valid_elements = 'svg[*],use[*],iframe[src],script[src]';\r\n            config.elementpath = true;\r\n            config.content_css.push(this.settings.getAssetUrl() + 'css/advanced-editor-styles.css');\r\n            config.target_list = [\r\n                {title: this.i18n.t('Current window'), value: ''},\r\n                {title: this.i18n.t('New Window'), value: '_blank'},\r\n            ];\r\n        }\r\n\r\n        if (this.config['minHeight'] === 'auto') {\r\n            const height = this.config.editorEl.nativeElement.parentElement.offsetHeight - EDITOR_TOOLBAR_HEIGHT - 4;\r\n            config.min_height = height;\r\n            config.max_height = height;\r\n        }\r\n\r\n        tinymce.init(config);\r\n    }\r\n\r\n    public destroyEditor() {\r\n        // catch error that sometimes occurs on EDGE when\r\n        // trying to destroy editor that is no longer in the DOM\r\n        try {\r\n            if (this.tinymceInstance) {\r\n                this.tinymceInstance.remove();\r\n            }\r\n\r\n            this.tinymceInstance = null;\r\n            this.makeBootstrapPromise();\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a tinymce bootstrap promise.\r\n     */\r\n    private makeBootstrapPromise() {\r\n        this.bootstrapPromise = new Promise(resolve => this.bootstrapPromiseResolve = resolve);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UploadValidator } from '../../uploads/validation/upload-validator';\r\nimport { FileSizeValidation } from '../../uploads/validation/validations/file-size-validation';\r\nimport { convertToBytes } from '../../core/utils/convertToBytes';\r\nimport { FileTypeValidation } from '../../uploads/validation/validations/file-type-validation';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TextEditorImageValidator extends UploadValidator {\r\n    protected readonly DEFAULT_MAX_SIZE_MB = 3;\r\n\r\n    protected initValidations() {\r\n        const validations = [\r\n            new FileSizeValidation(\r\n                {maxSize: convertToBytes(this.DEFAULT_MAX_SIZE_MB, 'MB')},\r\n                this.i18n\r\n            ),\r\n            new FileTypeValidation({types: ['image']}, this.i18n),\r\n        ];\r\n\r\n        this.validations.push(...validations);\r\n    }\r\n}\r\n","<div class=\"editor-header\">\r\n    <div class=\"toolbar-row\">\r\n        <div class=\"header-actions\" *ngIf=\"inlineUploadPrefix && currentUser.hasPermission('files.create')\">\r\n            <button class=\"no-style editor-button\" type=\"button\" [matTooltip]=\"'Add Attachment' | trans\"\r\n                    (click)=\"openFileUploadDialog()\">\r\n                <mat-icon svgIcon=\"attachment\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\" *ngIf=\"!basic\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('codesample')\"\r\n                    [matTooltip]=\"'Insert Code Sample' | trans\">\r\n                <mat-icon svgIcon=\"code\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('undo')\"\r\n                    [class.disabled]=\"!hasUndo()\" [matTooltip]=\"'Undo' | trans\">\r\n                <mat-icon svgIcon=\"undo\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('redo')\"\r\n                    [class.disabled]=\"!hasRedo()\" [matTooltip]=\"'Redo' | trans\">\r\n                <mat-icon svgIcon=\"redo\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('bold')\"\r\n                    [class.active]=\"queryCommandState('bold')\" [matTooltip]=\"'Bold' | trans\">\r\n                <mat-icon svgIcon=\"format-bold\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('italic')\"\r\n                    [class.active]=\"queryCommandState('italic')\" [matTooltip]=\"'Italic' | trans\">\r\n                <mat-icon svgIcon=\"format-italic\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('underline')\"\r\n                    [class.active]=\"queryCommandState('underline')\" [matTooltip]=\"'Underline' | trans\">\r\n                <mat-icon svgIcon=\"format-underlined\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('insertunorderedlist')\"\r\n                    [class.active]=\"queryCommandState('unorderedlist')\" [matTooltip]=\"'Unordered List' | trans\">\r\n                <mat-icon svgIcon=\"format-list-bulleted\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('insertorderedlist')\"\r\n                    [class.active]=\"queryCommandState('orderedlist')\" [matTooltip]=\"'Ordered List' | trans\">\r\n                <mat-icon svgIcon=\"format-list-numbered\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\" *ngIf=\"!basic\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('mceLink')\"\r\n                    [class.active]=\"queryCommandState('link')\" [matTooltip]=\"'Insert Link' | trans\">\r\n                <mat-icon svgIcon=\"link\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button image-modal-button\" (click)=\"openInsertImageModal()\"\r\n                    *ngIf=\"currentUser.hasPermission('files.create')\" [matTooltip]=\"'Insert Image' | trans\">\r\n                <mat-icon svgIcon=\"image\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <ng-content select=\"[customButtons]\"></ng-content>\r\n\r\n        <div class=\"header-actions last\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('removeformat')\"\r\n                    [matTooltip]=\"'Remove Formatting' | trans\">\r\n                <mat-icon svgIcon=\"format-clear\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <ng-content select=\"[header]\"></ng-content>\r\n    </div>\r\n    <div class=\"toolbar-row\" *ngIf=\"showAdvancedControls\">\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" [matMenuTriggerFor]=\"insertMenu\"\r\n                    class=\"no-style editor-button text-button insert-button\">\r\n                <span trans>Insert</span>\r\n                <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret\"></mat-icon>\r\n            </button>\r\n            <mat-menu #insertMenu>\r\n                <div mat-menu-item (click)=\"execCommand('InsertHorizontalRule')\">\r\n                    <mat-icon svgIcon=\"remove\"></mat-icon>\r\n                    <span trans>Horizontal Line</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('mceLink')\">\r\n                    <mat-icon svgIcon=\"link\"></mat-icon>\r\n                    <span trans>Link</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('mceMedia')\">\r\n                    <mat-icon svgIcon=\"videocam\"></mat-icon>\r\n                    <span trans>Media</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"insertInfoContainer('important')\" trans>\r\n                    <mat-icon svgIcon=\"star\"></mat-icon>\r\n                    <span trans>Important</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"insertInfoContainer('warning')\" trans>\r\n                    <mat-icon svgIcon=\"warning\"></mat-icon>\r\n                    <span trans>Warning</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"insertInfoContainer('note')\" trans>\r\n                    <mat-icon svgIcon=\"note\"></mat-icon>\r\n                    <span trans>Note</span>\r\n                </div>\r\n            </mat-menu>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" [matMenuTriggerFor]=\"formatMenu\" class=\"no-style editor-button text-button format-button\">\r\n                <span trans>Format</span>\r\n                <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret\"></mat-icon>\r\n            </button>\r\n            <mat-menu #formatMenu class=\"format-menu menu-with-alt-text\">\r\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h1')\">\r\n                    <div class=\"text\" trans>Heading 1</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+1</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h2')\">\r\n                    <div class=\"text\" trans>Heading 2</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+2</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h3')\">\r\n                    <div class=\"text\" trans>Heading 3</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+3</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('strikethrough')\">\r\n                    <div class=\"text\" trans>Strikethrough</div>\r\n                    <div class=\"alt-text\">Alt+Shift+5</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('superscript')\">\r\n                    <div class=\"text\" trans>Superscript</div>\r\n                    <div class=\"alt-text\">Ctrl+.</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('subscript')\">\r\n                    <div class=\"text\" trans>Subscript</div>\r\n                    <div class=\"alt-text\">Ctrl+,</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('mceBlockQuote')\">\r\n                    <div class=\"text\" trans>Blockquote</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+B</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'p')\">\r\n                    <div class=\"text\" trans>Paragraph</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+0</div>\r\n                </div>\r\n            </mat-menu>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" [matMenuTriggerFor]=\"colorMenu\" class=\"no-style editor-button text-button color-button\" #colorPickerOrigin>\r\n                <span trans>Color</span>\r\n                <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret\"></mat-icon>\r\n            </button>\r\n            <mat-menu #colorMenu class=\"color-dropdown\">\r\n                <div mat-menu-item class=\"text-color-item\" (click)=\"showColorPicker('ForeColor', colorPickerOrigin)\">\r\n                    <mat-icon svgIcon=\"format-color-text\"></mat-icon>\r\n                    <span trans>Text Color</span>\r\n                </div>\r\n                <div mat-menu-item class=\"bg-color-item\" (click)=\"showColorPicker('HiliteColor', colorPickerOrigin)\">\r\n                    <mat-icon svgIcon=\"format-color-fill\"></mat-icon>\r\n                    <span trans>Background Color</span>\r\n                </div>\r\n            </mat-menu>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('justifyLeft')\"\r\n                    [class.active]=\"queryCommandState('justifyLeft')\" [matTooltip]=\"'Align Left' | trans\">\r\n                <mat-icon svgIcon=\"format-align-left\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('justifyCenter')\"\r\n                    [class.active]=\"queryCommandState('justifyCenter')\" [matTooltip]=\"'Center' | trans\">\r\n                <mat-icon svgIcon=\"format-align-center\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('justifyRight')\"\r\n                    [class.active]=\"queryCommandState('justifyRight')\" [matTooltip]=\"'Align Right' | trans\">\r\n                <mat-icon svgIcon=\"format-align-right\"></mat-icon>\r\n            </button>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('Outdent')\" [matTooltip]=\"'Decrease Indent' | trans\">\r\n                <mat-icon svgIcon=\"format-indent-decrease\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('Indent')\" [matTooltip]=\"'Increase Indent' | trans\">\r\n                <mat-icon svgIcon=\"format-indent-increase\"></mat-icon>\r\n            </button>\r\n        </div>\r\n        <div class=\"header-actions editor-toggle-buttons\">\r\n            <button type=\"button\" class=\"no-style editor-button visual-mode-button\"\r\n                    [class.active]=\"activeEditor === 'visual'\" (click)=\"showVisualEditor()\" trans>Visual\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button source-mode-button\"\r\n                    [class.active]=\"activeEditor === 'source'\" (click)=\"showSourceEditor()\" trans>Source\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<textarea class=\"source-textarea\" #sourceArea rows=\"8\" [style.min-height]=\"minHeight\" style=\"display: none\" [formControl]=\"sourceAreaControl\" (blur)=\"setContents(sourceAreaControl.value)\"></textarea>\r\n<textarea class=\"visual-textarea\" #visualArea rows=\"8\" [style.min-height]=\"minHeight\"></textarea>\r\n\r\n<ng-content select=\"[footer]\"></ng-content>\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    Output,\r\n    Renderer2,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {TinymceTextEditor} from './editors/tinymce-text-editor.service';\r\nimport {Settings} from '../core/config/settings.service';\r\nimport {OverlayPanel} from '../core/ui/overlay-panel/overlay-panel.service';\r\nimport {openUploadWindow} from '../uploads/utils/open-upload-window';\r\nimport {UploadQueueService} from '../uploads/upload-queue/upload-queue.service';\r\nimport {TextEditorImageValidator} from './validation/text-editor-image-validator';\r\nimport {UploadInputTypes} from '../uploads/upload-input-config';\r\nimport {CurrentUser} from '../auth/current-user';\r\nimport {BOTTOM_POSITION} from '../core/ui/overlay-panel/positions/bottom-position';\r\nimport {ucFirst} from '../core/utils/uc-first';\r\nimport {FormControl} from '@angular/forms';\r\nimport {debounceTime} from 'rxjs/operators';\r\nimport {UploadUri} from '@common/uploads/types/upload-uri.enum';\r\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\nexport interface LinkAttrs {\r\n    text: string;\r\n    href: string;\r\n    target?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'text-editor',\r\n    templateUrl: './text-editor.component.html',\r\n    styleUrls: ['./text-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        UploadQueueService,\r\n    ]\r\n})\r\nexport class TextEditorComponent implements OnDestroy, AfterViewInit {\r\n    @ViewChild('visualArea', { static: true }) visualTextArea: ElementRef;\r\n    @ViewChild('sourceArea', { static: true }) sourceTextArea: ElementRef;\r\n\r\n    public sourceAreaControl = new FormControl();\r\n    public activeEditor = 'visual';\r\n\r\n    @Input() showAdvancedControls = false;\r\n    @Input() basic = false;\r\n    @Input() minHeight: number|string = 183;\r\n    @Input() maxHeight = 530;\r\n    @Input() inlineUploadPrefix: string;\r\n\r\n    @Output() onChange: EventEmitter<string> = new EventEmitter();\r\n    @Output() onCtrlEnter = new EventEmitter();\r\n    @Output() onFileUpload = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(\r\n        public editor: TinymceTextEditor,\r\n        public currentUser: CurrentUser,\r\n        private uploadQueue: UploadQueueService,\r\n        private settings: Settings,\r\n        private renderer: Renderer2,\r\n        public el: ElementRef,\r\n        private overlayPanel: OverlayPanel,\r\n        private imageValidator: TextEditorImageValidator,\r\n    ) {}\r\n\r\n    ngAfterViewInit() {\r\n        this.bootTextEditor();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyEditor();\r\n    }\r\n\r\n    public reset() {\r\n        this.editor.reset();\r\n    }\r\n\r\n    public focus() {\r\n        this.editor.focus();\r\n    }\r\n\r\n    public hasUndo(): boolean {\r\n        return this.editor.hasUndo();\r\n    }\r\n\r\n    public hasRedo(): boolean {\r\n        return this.editor.hasRedo();\r\n    }\r\n\r\n    /**\r\n     * Queries the current state for specified text editor command.\r\n     * For example if the current selection is \"bold\".\r\n     */\r\n    public queryCommandState(name: string): boolean|number {\r\n        return this.editor.queryCommandState(name);\r\n    }\r\n\r\n    public execCommand(name: string, value: string|number = null) {\r\n        this.editor.execCommand(name, value);\r\n    }\r\n\r\n    /**\r\n     * Insert information container of specified type into the editor.\r\n     */\r\n    public insertInfoContainer(type: string) {\r\n        // TODO: refactor into shortcodes maybe if need more of similar buttons in the future\r\n        // TODO: translate once angular translation service is available\r\n        this.insertContents(\r\n            `<div class=\"widget widget-${type}\"><div class=\"title\">${ucFirst(type)}:</div><br></div><br>`\r\n        );\r\n    }\r\n\r\n    public async showColorPicker(command: string, origin: HTMLElement) {\r\n        const { BeColorPickerModule } = await import('@common/core/ui/color-picker/be-color-picker.module');\r\n        this.overlayPanel.open(BeColorPickerModule.components.panel, {origin: new ElementRef(origin), position: BOTTOM_POSITION})\r\n            .valueChanged().pipe(debounceTime(50)).subscribe(color => {\r\n                this.execCommand(command, color);\r\n            });\r\n    }\r\n\r\n    public showVisualEditor() {\r\n        if ( ! this.editor.tinymceInstance.contentAreaContainer || this.activeEditor === 'visual') return;\r\n\r\n        this.activeEditor = 'visual';\r\n\r\n        this.renderer.setStyle(this.editor.tinymceInstance.contentAreaContainer, 'display', 'block');\r\n        this.renderer.setStyle(this.sourceTextArea.nativeElement, 'display', 'none');\r\n\r\n        this.editor.focus();\r\n    }\r\n\r\n    public showSourceEditor() {\r\n        if ( ! this.editor.tinymceInstance.contentAreaContainer || this.activeEditor === 'source') return;\r\n\r\n        this.activeEditor = 'source';\r\n\r\n        this.renderer.setStyle(this.sourceTextArea.nativeElement, 'height', this.editor.tinymceInstance.contentAreaContainer.offsetHeight + 'px');\r\n        this.renderer.setStyle(this.sourceTextArea.nativeElement, 'display', 'block');\r\n        this.renderer.setStyle(this.editor.tinymceInstance.contentAreaContainer, 'display', 'none');\r\n\r\n        this.sourceAreaControl.setValue(this.editor.getContents({source_view: true}));\r\n    }\r\n\r\n    public openFileUploadDialog() {\r\n        openUploadWindow({multiple: true}).then(fileList => {\r\n            this.onFileUpload.emit(fileList);\r\n        });\r\n    }\r\n\r\n    public openInsertImageModal() {\r\n        const params: UploadApiConfig = {\r\n            uri: UploadUri.Image,\r\n            validator: this.imageValidator,\r\n            httpParams: {diskPrefix: this.inlineUploadPrefix}\r\n        };\r\n        openUploadWindow({types: [UploadInputTypes.image]}).then(files => {\r\n            this.uploadQueue.start(files, params).subscribe(response => {\r\n                this.insertImage(this.settings.getBaseUrl(true) + response.fileEntry.url);\r\n            });\r\n        });\r\n    }\r\n\r\n    public getContents(): string {\r\n        return this.editor.getContents();\r\n    }\r\n\r\n    public setContents(contents: string) {\r\n        this.editor.setContents(contents);\r\n    }\r\n\r\n    public insertContents(contents) {\r\n        this.editor.insertContents(contents);\r\n    }\r\n\r\n    public insertImage(url: string) {\r\n        this.editor.insertImage(url);\r\n    }\r\n\r\n    public insertLink(attrs: LinkAttrs) {\r\n        const target = attrs.target || 'self';\r\n        this.insertContents(`<a href=\"${attrs.href}\" target=\"${target}\">${attrs.text}</a>`);\r\n    }\r\n\r\n    public destroyEditor() {\r\n        this.editor.destroyEditor();\r\n    }\r\n\r\n    private bootTextEditor() {\r\n        this.editor.setConfig({\r\n            textAreaEl: this.visualTextArea,\r\n            editorEl: this.el,\r\n            minHeight: this.minHeight,\r\n            maxHeight: this.maxHeight,\r\n            onChange: this.onChange,\r\n            onCtrlEnter: this.onCtrlEnter,\r\n            showAdvancedControls: this.showAdvancedControls,\r\n        });\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UnsubscriptionErrorImpl = (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexports.UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar Subscription_1 = require(\"../Subscription\");\nvar iterator_1 = require(\"../symbol/iterator\");\nfunction scheduleIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        var sub = new Subscription_1.Subscription();\n        var iterator;\n        sub.add(function () {\n            if (iterator && typeof iterator.return === 'function') {\n                iterator.return();\n            }\n        });\n        sub.add(scheduler.schedule(function () {\n            iterator = input[iterator_1.iterator]();\n            sub.add(scheduler.schedule(function () {\n                if (subscriber.closed) {\n                    return;\n                }\n                var value;\n                var done;\n                try {\n                    var result = iterator.next();\n                    value = result.value;\n                    done = result.done;\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                    this.schedule();\n                }\n            }));\n        }));\n        return sub;\n    });\n}\nexports.scheduleIterable = scheduleIterable;\n//# sourceMappingURL=scheduleIterable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\nexports.hostReportError = hostReportError;\n//# sourceMappingURL=hostReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subscribeToArray = function (array) { return function (subscriber) {\n    for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n    }\n    subscriber.complete();\n}; };\n//# sourceMappingURL=subscribeToArray.js.map","import {Component, Input, OnInit, Output, EventEmitter, ViewEncapsulation, ViewChild, ElementRef} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Conversation} from '../../../conversation/conversation.service';\r\nimport {CannedRepliesService} from '../canned-replies.service';\r\nimport {CannedReply} from '../../../shared/models/CannedReply';\r\nimport {CrupdateCannedReplyModalComponent} from '../crupdate-canned-reply-modal/crupdate-canned-reply-modal.component';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {catchError, debounceTime, distinctUntilChanged, switchMap, tap} from 'rxjs/operators';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport * as Dot from 'dot-object';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {of} from 'rxjs';\r\nimport {EMPTY_PAGINATION_RESPONSE} from '@common/core/types/pagination/pagination-response';\r\n\r\n@Component({\r\n    selector: 'canned-replies-dropdown',\r\n    templateUrl: './canned-replies-dropdown.component.html',\r\n    styleUrls: ['./canned-replies-dropdown.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CannedRepliesDropdownComponent implements OnInit {\r\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\r\n    @ViewChild('input', { static: true }) input: ElementRef;\r\n\r\n    @Input() searchQuery = new FormControl();\r\n    @Output() onReplySelect = new EventEmitter();\r\n\r\n    public loadedResultsAtLeastOnce = false;\r\n    public cannedReplies: CannedReply[] = [];\r\n\r\n    constructor(\r\n        private cannedRepliesService: CannedRepliesService,\r\n        private currentUser: CurrentUser,\r\n        private modal: Modal,\r\n        private conversation: Conversation,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.searchQuery.valueChanges\r\n            .pipe(\r\n                debounceTime(250),\r\n                distinctUntilChanged(),\r\n                switchMap(query => this.getCannedReplies(query)),\r\n                catchError(() => of(EMPTY_PAGINATION_RESPONSE)),\r\n            ).subscribe();\r\n\r\n        this.trigger.menuOpened\r\n            .subscribe(() => {\r\n                if ( ! this.loadedResultsAtLeastOnce) {\r\n                    this.getCannedReplies(null, true).subscribe();\r\n                }\r\n            });\r\n    }\r\n\r\n    public selectCannedReply(cannedReply: CannedReply) {\r\n        // replace placeholders\r\n        const body = cannedReply.body.replace(/{{([\\w.\\-]+?)}}/, (fullMatch, groupMatch) => {\r\n            const replacement = Dot.pick(groupMatch.toLowerCase(), {ticket: this.conversation.get()});\r\n            return replacement || fullMatch;\r\n        });\r\n        this.onReplySelect.emit({...cannedReply, body});\r\n    }\r\n\r\n    public showNewCannedReplyModal() {\r\n        const cannedReply =  new CannedReply({\r\n            body: this.conversation.draft.get().body,\r\n            uploads: this.conversation.draft.get().uploads,\r\n        });\r\n        this.modal.open(\r\n            CrupdateCannedReplyModalComponent,\r\n            {cannedReply},\r\n            {panelClass: 'crupdate-canned-reply-modal-container'}\r\n        ).afterClosed().subscribe(newReply => {\r\n            if ( ! newReply) return;\r\n            this.toast.open('Canned reply created.');\r\n            this.cannedReplies.unshift(newReply);\r\n        });\r\n    }\r\n\r\n    public getCannedReplies(query: string, force?: boolean) {\r\n        if ( ! query && ! force) return of(EMPTY_PAGINATION_RESPONSE);\r\n        const payload = {query, user_id: this.currentUser.get('id'), per_page: 20, shared: true};\r\n        return this.cannedRepliesService.getReplies(payload)\r\n            .pipe(tap(response => {\r\n                this.loadedResultsAtLeastOnce = true;\r\n                this.cannedReplies = response.pagination.data;\r\n            }));\r\n    }\r\n}\r\n","<button class=\"no-style editor-button\" mat-icon-button [matMenuTriggerFor]=\"cannedReplyMenu\">\r\n    <mat-icon svgIcon=\"comment\" class=\"dropdown-icon\"></mat-icon>\r\n</button>\r\n\r\n<mat-menu #cannedReplyMenu=\"matMenu\" [overlapTrigger]=\"false\" class=\"canned-reply-menu\">\r\n    <div class=\"input-container\" (click)=\"$event.stopPropagation()\">\r\n        <input type=\"text\" [formControl]=\"searchQuery\" mat-menu-item class=\"canned-reply-search-input\" #input>\r\n    </div>\r\n\r\n    <button class=\"new-canned-reply\" mat-menu-item (click)=\"showNewCannedReplyModal()\" *ngIf=\"!searchQuery.value\" trans>\r\n        <strong trans>Create new canned reply</strong>\r\n    </button>\r\n\r\n    <button class=\"canned-reply\" mat-menu-item *ngFor=\"let cannedReply of cannedReplies\" (click)=\"selectCannedReply(cannedReply)\">\r\n        {{cannedReply.name}}\r\n    </button>\r\n\r\n    <div class=\"no-results\" *ngIf=\"!cannedReplies.length && loadedResultsAtLeastOnce && searchQuery.value\" (click)=\"$event.stopPropagation()\">\r\n        <div><span trans>No results found for</span> <strong>{{ searchQuery.value }}</strong></div>\r\n    </div>\r\n</mat-menu>\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar canReportError_1 = require(\"./util/canReportError\");\nvar toSubscriber_1 = require(\"./util/toSubscriber\");\nvar observable_1 = require(\"./symbol/observable\");\nvar pipe_1 = require(\"./util/pipe\");\nvar config_1 = require(\"./config\");\nvar Observable = (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError_1.canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config_1.config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar InnerSubscriber_1 = require(\"../InnerSubscriber\");\nvar map_1 = require(\"./map\");\nvar from_1 = require(\"../observable/from\");\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from_1.from(project(a, i)).pipe(map_1.map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        var innerSubscriber = new InnerSubscriber_1.InnerSubscriber(this, value, index);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, ish, undefined, undefined, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexports.getSymbolIterator = getSymbolIterator;\nexports.iterator = getSymbolIterator();\nexports.$$iterator = exports.iterator;\n//# sourceMappingURL=iterator.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"./Subscriber\");\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map","import {Injectable} from '@angular/core';\r\nimport {CannedReply} from '../../shared/models/CannedReply';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\nimport {BackendResponse} from '@common/core/types/backend-response';\r\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\r\n\r\ninterface RepliesIndexParams {\r\n    query?: string;\r\n    per_page?: number;\r\n    user_id?: number;\r\n    shared?: boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CannedRepliesService {\r\n    constructor(private httpClient: AppHttpClient) {}\r\n\r\n    public getReplies(params: RepliesIndexParams): PaginatedBackendResponse<CannedReply> {\r\n        return this.httpClient.get('canned-replies', params);\r\n    }\r\n\r\n    public create(params): BackendResponse<CannedReply> {\r\n        return this.httpClient.post('canned-replies', params);\r\n    }\r\n\r\n    public update(id: number, params): BackendResponse<CannedReply> {\r\n        return this.httpClient.put('canned-replies/' + id, params);\r\n    }\r\n\r\n    public delete(ids: number[]): BackendResponse<void> {\r\n        return this.httpClient.delete('canned-replies', {ids});\r\n    }\r\n}\r\n","import { EventEmitter, HostBinding, Inject, Directive } from '@angular/core';\r\nimport { CURRENT_PREVIEW_FILE } from './current-preview-file';\r\nimport { FileEntry } from '../uploads/types/file-entry';\r\nimport { PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer } from './preview-url-transformer';\r\nimport { Settings } from '../core/config/settings.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AppHttpClient } from '../core/http/app-http-client.service';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { CurrentUser } from '../auth/current-user';\r\n\r\n@Directive()\nexport abstract class BaseFilePreview {\r\n    @HostBinding('class.file-preview-wrapper') filePreviewWrapper = true;\r\n    public download = new EventEmitter();\r\n\r\n    constructor(\r\n        @Inject(CURRENT_PREVIEW_FILE) protected file: FileEntry,\r\n        @Inject(PREVIEW_URL_TRANSFORMER) protected transformer: PreviewUrlTransformer,\r\n        protected settings: Settings,\r\n        protected http: AppHttpClient,\r\n        protected sanitizer: DomSanitizer,\r\n        protected currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    public getSrc(): string {\r\n        return this.transformer(this.file);\r\n    }\r\n\r\n    public getSafeSrc(): SafeResourceUrl {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.getSrc());\r\n    }\r\n\r\n    public getContents(): Observable<string> {\r\n        return this.http.get(this.getSrc(), null, {responseType: 'text'});\r\n    }\r\n}\r\n","import {BehaviorSubject, combineLatest, merge, Observable} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged, filter, map, take} from 'rxjs/operators';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {PageEvent} from '@angular/material/paginator';\r\nimport {Sort} from '@angular/material/sort';\r\nimport {DataSource, SelectionModel} from '@angular/cdk/collections';\r\nimport {DataTableSourceConfig} from '@common/shared/data-table/data/data-table-source-config';\r\nimport {arrayToObject} from '@common/core/utils/array-to-object';\r\nimport {DataTableFilter} from '@common/shared/data-table/filter-panel/data-table-filters';\r\nimport {PaginationResponse} from '@common/core/types/pagination/pagination-response';\r\nimport {PaginationParams} from '@common/core/types/pagination/pagination-params';\r\n\r\nexport class PaginatedDataTableSource<T> implements DataSource<T> {\r\n    public initiated = false;\r\n    private pagination$ = new BehaviorSubject<PaginationResponse<T>>(null);\r\n    private userParamsChange$ = new BehaviorSubject<object>({});\r\n    public selectedRows = new SelectionModel<T>(true, []);\r\n    public searchControl = new FormControl();\r\n    public filterForm = new FormGroup({});\r\n    public nextPageLoader$ = new BehaviorSubject<{page: number}>(null);\r\n    public virtualSort$ = new BehaviorSubject<Partial<Sort>>({});\r\n    public paginationParams: PaginationParams = {};\r\n    public activeFilters$: Observable<DataTableFilter[]> = this.filterForm.valueChanges.pipe(map((value: object) => {\r\n        return Object.entries(value)\r\n            // remove non active filters\r\n            .filter(entry => entry[1] != null)\r\n            // map filter column to display name\r\n            .map(entry => this.config.filters.find(f => f.column === entry[0]));\r\n    }));\r\n\r\n    public get paginatedOnce$(): Observable<boolean> {\r\n        return this.config.dataPaginator.paginatedOnce$.pipe(filter(val => !!val), take(1));\r\n    }\r\n\r\n    public get noResults$() {\r\n        // check if paginated at least once or if\r\n        // data has been set via \"setData\" method\r\n        return combineLatest([\r\n            this.config.dataPaginator.noResults$,\r\n            this.pagination$,\r\n        ]).pipe(map(([noResults, paginationResponse]) => {\r\n            return noResults && (paginationResponse && !paginationResponse.data.length);\r\n        }));\r\n    }\r\n\r\n    public get loading$() {\r\n        return this.config.dataPaginator.loading$;\r\n    }\r\n\r\n    public get totalCount$(): Observable<number|null> {\r\n        return this.pagination$.pipe(map(p => p ? p.total : null));\r\n    }\r\n\r\n    constructor(public config: DataTableSourceConfig<T>) {\r\n        if (this.config.filters) {\r\n            this.config.filters.forEach(f => {\r\n                const control = new FormControl(f.defaultValue || null);\r\n                this.filterForm.addControl(f.column, control);\r\n            });\r\n            this.applyFiltersFromQueryParams();\r\n        }\r\n        if (config.dataPaginator && config.dontUpdateQueryParams) {\r\n            config.dataPaginator.dontUpdateQueryParams = true;\r\n        }\r\n    }\r\n\r\n    public anyRowsSelected() {\r\n        return this.selectedRows.hasValue();\r\n    }\r\n\r\n    public allRowsSelected(): boolean {\r\n        return this.selectedRows.selected.length &&\r\n            this.selectedRows.selected.length === this.pagination$.value.data.length;\r\n    }\r\n\r\n    public toggleAllRows() {\r\n        this.allRowsSelected() ?\r\n            this.deselectAllItems() :\r\n            this.pagination$.value.data.forEach(row => this.selectedRows.select(row));\r\n    }\r\n\r\n    public deselectAllItems() {\r\n        this.selectedRows.clear();\r\n    }\r\n\r\n    public getSelectedItems(): number[] {\r\n        return this.selectedRows.selected.map(item => item['id']);\r\n    }\r\n\r\n    public setSelectedItems(items: T[]) {\r\n        this.deselectAllItems();\r\n        this.selectedRows.select(...items);\r\n    }\r\n\r\n    public setData(data: T[]) {\r\n        this.pagination$.next({...this.pagination$.value, data});\r\n    }\r\n\r\n    public getData(): T[] {\r\n        return this.pagination$.value ? this.pagination$.value.data : [];\r\n    }\r\n    \r\n    public removeFilter(column: string) {\r\n        this.filterForm.get(column).setValue(null);\r\n    }\r\n\r\n    public updateConfig(config: DataTableSourceConfig<T>) {\r\n        this.config = {...this.config, ...config};\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Merge specified params with current\r\n     * pagination params and reload data.\r\n     */\r\n    public reload(params: object = {}) {\r\n        this.userParamsChange$.next(params);\r\n        if ( ! this.initiated) {\r\n            this.init();\r\n        }\r\n    }\r\n    \r\n    public canLoadNextPage() {\r\n        return this.pagination$.value &&\r\n            this.getCurrentPage() < this.pagination$.value.last_page;\r\n    }\r\n\r\n    public loadNextPage() {\r\n        this.nextPageLoader$.next({page: this.getCurrentPage() + 1});\r\n    }\r\n\r\n    /**\r\n     * Reset current pagination params to initial\r\n     * state and reload data using specified params\r\n     */\r\n    public reset(params?: object) {\r\n        this.searchControl.reset();\r\n        this.resetSort();\r\n        this.resetMatPaginator();\r\n        this.deselectAllItems();\r\n        this.reload(params);\r\n    }\r\n\r\n    public init(config?: DataTableSourceConfig<T>) {\r\n        if (this.initiated) return this;\r\n        if (config) this.updateConfig(config);\r\n        const sortChange = this.config.matSort ?\r\n            merge(this.config.matSort.sortChange, this.config.matSort.initialized) :\r\n            this.virtualSort$;\r\n        const pageChange = this.config.matPaginator ?\r\n            merge(this.config.matPaginator.page, this.config.matPaginator.initialized) :\r\n            this.nextPageLoader$;\r\n        const searchChange = this.searchControl.valueChanges.pipe(\r\n            debounceTime(400),\r\n            distinctUntilChanged(),\r\n            map(query => {\r\n                return {query};\r\n            })\r\n        );\r\n        const filterChange = this.filterForm.valueChanges.pipe(map((value: object) => {\r\n            // remove \"undefined\" values from filters object\r\n            Object.keys(value).forEach(key => {\r\n                if (value[key] == null) {\r\n                    delete value[key];\r\n                // return only ID if whole model is bound to form\r\n                } else if (value[key].id) {\r\n                    value[key] = value[key].id;\r\n                }\r\n            });\r\n            return value;\r\n        }));\r\n\r\n        combineLatest([sortChange, pageChange, searchChange, filterChange, this.userParamsChange$])\r\n            .pipe(\r\n                // prevent double trigger when resetting all filters at the same time\r\n                debounceTime(0),\r\n                map(params => this.transformParams(params as any)),\r\n            )\r\n            .subscribe(params => {\r\n                this.config.dataPaginator.paginate(params, this.config.uri, this.config.initialData);\r\n            });\r\n\r\n        this.config.dataPaginator.pagination$.subscribe(pagination => {\r\n            // material paginator current page is zero-based while laravel starts from one\r\n            if (this.config.matPaginator) {\r\n                this.config.matPaginator.pageIndex = pagination.current_page - 1;\r\n                this.config.matPaginator.pageSize = pagination.per_page;\r\n                this.config.matPaginator.length = pagination.data.length ? pagination.total : 0;\r\n            }\r\n\r\n            // append data instead of overriding with next page data (infinite scroll).\r\n            // if page did not change, we can assume that it was filter or sort\r\n            // change and we should use only new data, even on infinite scroll\r\n            if (this.config.appendData && pagination.current_page !== this.getCurrentPage()) {\r\n                const currentData = this.pagination$.value ? this.pagination$.value.data : [];\r\n                pagination = {...pagination, data: [...currentData, ...pagination.data]};\r\n            }\r\n\r\n            this.pagination$.next(pagination);\r\n        });\r\n\r\n        // angular does not fire \"valueChanges\" on form control if default\r\n        // value is not provided, so need to trigger it manually here otherwise\r\n        // changes pipeline will not fire until search control value changes\r\n        // # https://github.com/angular/angular/issues/14542\r\n        this.searchControl.setValue(null);\r\n        this.filterForm.patchValue({});\r\n\r\n        this.initiated = true;\r\n        return this;\r\n    }\r\n\r\n    public getCurrentPage(): number {\r\n        return this.pagination$.value ? this.pagination$.value.current_page : undefined;\r\n    }\r\n\r\n    private transformParams(originalParams: (PageEvent & Sort)[]) {\r\n        const params = arrayToObject(originalParams);\r\n\r\n        // have mat paginator\r\n        if (this.config.matPaginator) {\r\n            // pageIndex can be 0, need to check for undefined or null only\r\n            params.page = params.pageIndex != null ? params.pageIndex + 1 : undefined;\r\n            params.per_page = params.pageSize;\r\n        }\r\n\r\n        params.orderBy = params.active;\r\n        params.orderDir = params.direction;\r\n\r\n        // remove \"undefined\" and renamed values from object\r\n        const keysToRemove = ['pageIndex', 'pageSize', 'active', 'direction', 'previousPageIndex', 'length'];\r\n        Object.keys(params)\r\n            .forEach(key => {\r\n                if (keysToRemove.indexOf(key) > -1 || params[key] == null) {\r\n                    delete params[key];\r\n                }\r\n            });\r\n\r\n        // merge static params specified by users, they will\r\n        // not change and should be sent with every request\r\n        this.paginationParams = {...this.config.staticParams, ...params};\r\n        return this.paginationParams;\r\n    }\r\n\r\n    private resetSort() {\r\n        if ( ! this.config.matSort) return;\r\n        this.config.matSort.sort({\r\n            id: null,\r\n            start: null,\r\n            disableClear: false\r\n        });\r\n    }\r\n\r\n    private resetMatPaginator() {\r\n        if ( ! this.config.matPaginator) return;\r\n        this.config.matPaginator.length = 0;\r\n        this.config.matPaginator._changePageSize(15);\r\n        this.config.matPaginator.firstPage();\r\n    }\r\n\r\n    public connect(): Observable<T[]> {\r\n        return this.pagination$.pipe(\r\n            filter(p => !!p), // skip first \"null\" on behaviour subject\r\n            map(p => p ? p.data : [])\r\n        );\r\n    }\r\n\r\n    public disconnect() {\r\n        this.config.dataPaginator.destroy();\r\n        this.pagination$.complete();\r\n    }\r\n\r\n    private applyFiltersFromQueryParams() {\r\n        const queryParams = this.config.dataPaginator.currentQueryParams();\r\n        const queryValues = {};\r\n        Object.keys(this.filterForm.controls).forEach(filterName => {\r\n            let queryValue = queryParams[filterName];\r\n            if (queryValue) {\r\n                if (queryValue === 'false') {\r\n                    queryValue = false;\r\n                } else if (queryValue === 'true') {\r\n                    queryValue = true;\r\n                }\r\n                queryValues[filterName] = queryValue;\r\n            }\r\n        });\r\n        if (Object.keys(queryValues).length) {\r\n            setTimeout(() => {\r\n                this.filterForm.patchValue(queryValues);\r\n            });\r\n        }\r\n    }\r\n}\r\n","export function arrayToObject(array: object[]): {[key: string]: any} {\r\n    return array.reduce((previous, current) => {\r\n        return {...previous, ...current};\r\n    });\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nvar rxSubscriber_1 = require(\"../symbol/rxSubscriber\");\nvar Observer_1 = require(\"../Observer\");\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"./Subscriber\");\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map","/*!\n * perfect-scrollbar v1.5.0\n * Copyright 2020 Hyunje Jun, MDBootstrap and Contributors\n * Licensed under MIT\n */\n\nfunction get(element) {\n  return getComputedStyle(element);\n}\n\nfunction set(element, obj) {\n  for (var key in obj) {\n    var val = obj[key];\n    if (typeof val === 'number') {\n      val = val + \"px\";\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nfunction div(className) {\n  var div = document.createElement('div');\n  div.className = className;\n  return div;\n}\n\nvar elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches ||\n    Element.prototype.webkitMatchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector);\n\nfunction matches(element, query) {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\nfunction remove(element) {\n  if (element.remove) {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n}\n\nfunction queryChildren(element, selector) {\n  return Array.prototype.filter.call(element.children, function (child) { return matches(child, selector); }\n  );\n}\n\nvar cls = {\n  main: 'ps',\n  rtl: 'ps__rtl',\n  element: {\n    thumb: function (x) { return (\"ps__thumb-\" + x); },\n    rail: function (x) { return (\"ps__rail-\" + x); },\n    consuming: 'ps__child--consume',\n  },\n  state: {\n    focus: 'ps--focus',\n    clicking: 'ps--clicking',\n    active: function (x) { return (\"ps--active-\" + x); },\n    scrolling: function (x) { return (\"ps--scrolling-\" + x); },\n  },\n};\n\n/*\n * Helper methods\n */\nvar scrollingClassTimeout = { x: null, y: null };\n\nfunction addScrollingClass(i, x) {\n  var classList = i.element.classList;\n  var className = cls.state.scrolling(x);\n\n  if (classList.contains(className)) {\n    clearTimeout(scrollingClassTimeout[x]);\n  } else {\n    classList.add(className);\n  }\n}\n\nfunction removeScrollingClass(i, x) {\n  scrollingClassTimeout[x] = setTimeout(\n    function () { return i.isAlive && i.element.classList.remove(cls.state.scrolling(x)); },\n    i.settings.scrollingThreshold\n  );\n}\n\nfunction setScrollingClassInstantly(i, x) {\n  addScrollingClass(i, x);\n  removeScrollingClass(i, x);\n}\n\nvar EventElement = function EventElement(element) {\n  this.element = element;\n  this.handlers = {};\n};\n\nvar prototypeAccessors = { isEmpty: { configurable: true } };\n\nEventElement.prototype.bind = function bind (eventName, handler) {\n  if (typeof this.handlers[eventName] === 'undefined') {\n    this.handlers[eventName] = [];\n  }\n  this.handlers[eventName].push(handler);\n  this.element.addEventListener(eventName, handler, false);\n};\n\nEventElement.prototype.unbind = function unbind (eventName, target) {\n    var this$1 = this;\n\n  this.handlers[eventName] = this.handlers[eventName].filter(function (handler) {\n    if (target && handler !== target) {\n      return true;\n    }\n    this$1.element.removeEventListener(eventName, handler, false);\n    return false;\n  });\n};\n\nEventElement.prototype.unbindAll = function unbindAll () {\n  for (var name in this.handlers) {\n    this.unbind(name);\n  }\n};\n\nprototypeAccessors.isEmpty.get = function () {\n    var this$1 = this;\n\n  return Object.keys(this.handlers).every(\n    function (key) { return this$1.handlers[key].length === 0; }\n  );\n};\n\nObject.defineProperties( EventElement.prototype, prototypeAccessors );\n\nvar EventManager = function EventManager() {\n  this.eventElements = [];\n};\n\nEventManager.prototype.eventElement = function eventElement (element) {\n  var ee = this.eventElements.filter(function (ee) { return ee.element === element; })[0];\n  if (!ee) {\n    ee = new EventElement(element);\n    this.eventElements.push(ee);\n  }\n  return ee;\n};\n\nEventManager.prototype.bind = function bind (element, eventName, handler) {\n  this.eventElement(element).bind(eventName, handler);\n};\n\nEventManager.prototype.unbind = function unbind (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  ee.unbind(eventName, handler);\n\n  if (ee.isEmpty) {\n    // remove\n    this.eventElements.splice(this.eventElements.indexOf(ee), 1);\n  }\n};\n\nEventManager.prototype.unbindAll = function unbindAll () {\n  this.eventElements.forEach(function (e) { return e.unbindAll(); });\n  this.eventElements = [];\n};\n\nEventManager.prototype.once = function once (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  var onceHandler = function (evt) {\n    ee.unbind(eventName, onceHandler);\n    handler(evt);\n  };\n  ee.bind(eventName, onceHandler);\n};\n\nfunction createEvent(name) {\n  if (typeof window.CustomEvent === 'function') {\n    return new CustomEvent(name);\n  } else {\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(name, false, false, undefined);\n    return evt;\n  }\n}\n\nfunction processScrollDiff(\n  i,\n  axis,\n  diff,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var fields;\n  if (axis === 'top') {\n    fields = [\n      'contentHeight',\n      'containerHeight',\n      'scrollTop',\n      'y',\n      'up',\n      'down' ];\n  } else if (axis === 'left') {\n    fields = [\n      'contentWidth',\n      'containerWidth',\n      'scrollLeft',\n      'x',\n      'left',\n      'right' ];\n  } else {\n    throw new Error('A proper axis should be provided');\n  }\n\n  processScrollDiff$1(i, diff, fields, useScrollingClass, forceFireReachEvent);\n}\n\nfunction processScrollDiff$1(\n  i,\n  diff,\n  ref,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  var contentHeight = ref[0];\n  var containerHeight = ref[1];\n  var scrollTop = ref[2];\n  var y = ref[3];\n  var up = ref[4];\n  var down = ref[5];\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var element = i.element;\n\n  // reset reach\n  i.reach[y] = null;\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] < 1) {\n    i.reach[y] = 'start';\n  }\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {\n    i.reach[y] = 'end';\n  }\n\n  if (diff) {\n    element.dispatchEvent(createEvent((\"ps-scroll-\" + y)));\n\n    if (diff < 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + up)));\n    } else if (diff > 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + down)));\n    }\n\n    if (useScrollingClass) {\n      setScrollingClassInstantly(i, y);\n    }\n  }\n\n  if (i.reach[y] && (diff || forceFireReachEvent)) {\n    element.dispatchEvent(createEvent((\"ps-\" + y + \"-reach-\" + (i.reach[y]))));\n  }\n}\n\nfunction toInt(x) {\n  return parseInt(x, 10) || 0;\n}\n\nfunction isEditable(el) {\n  return (\n    matches(el, 'input,[contenteditable]') ||\n    matches(el, 'select,[contenteditable]') ||\n    matches(el, 'textarea,[contenteditable]') ||\n    matches(el, 'button,[contenteditable]')\n  );\n}\n\nfunction outerWidth(element) {\n  var styles = get(element);\n  return (\n    toInt(styles.width) +\n    toInt(styles.paddingLeft) +\n    toInt(styles.paddingRight) +\n    toInt(styles.borderLeftWidth) +\n    toInt(styles.borderRightWidth)\n  );\n}\n\nvar env = {\n  isWebKit:\n    typeof document !== 'undefined' &&\n    'WebkitAppearance' in document.documentElement.style,\n  supportsTouch:\n    typeof window !== 'undefined' &&\n    ('ontouchstart' in window ||\n      ('maxTouchPoints' in window.navigator &&\n        window.navigator.maxTouchPoints > 0) ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)),\n  supportsIePointer:\n    typeof navigator !== 'undefined' && navigator.msMaxTouchPoints,\n  isChrome:\n    typeof navigator !== 'undefined' &&\n    /Chrome/i.test(navigator && navigator.userAgent),\n};\n\nfunction updateGeometry(i) {\n  var element = i.element;\n  var roundedScrollTop = Math.floor(element.scrollTop);\n  var rect = element.getBoundingClientRect();\n\n  i.containerWidth = Math.ceil(rect.width);\n  i.containerHeight = Math.ceil(rect.height);\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  if (!element.contains(i.scrollbarXRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('x')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarXRail);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('y')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarYRail);\n  }\n\n  if (\n    !i.settings.suppressScrollX &&\n    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth\n  ) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(\n      i,\n      toInt((i.railXWidth * i.containerWidth) / i.contentWidth)\n    );\n    i.scrollbarXLeft = toInt(\n      ((i.negativeScrollAdjustment + element.scrollLeft) *\n        (i.railXWidth - i.scrollbarXWidth)) /\n        (i.contentWidth - i.containerWidth)\n    );\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (\n    !i.settings.suppressScrollY &&\n    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight\n  ) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(\n      i,\n      toInt((i.railYHeight * i.containerHeight) / i.contentHeight)\n    );\n    i.scrollbarYTop = toInt(\n      (roundedScrollTop * (i.railYHeight - i.scrollbarYHeight)) /\n        (i.contentHeight - i.containerHeight)\n    );\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    element.classList.add(cls.state.active('x'));\n  } else {\n    element.classList.remove(cls.state.active('x'));\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    element.scrollLeft = i.isRtl === true ? i.contentWidth : 0;\n  }\n  if (i.scrollbarYActive) {\n    element.classList.add(cls.state.active('y'));\n  } else {\n    element.classList.remove(cls.state.active('y'));\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    element.scrollTop = 0;\n  }\n}\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  var xRailOffset = { width: i.railXWidth };\n  var roundedScrollTop = Math.floor(element.scrollTop);\n\n  if (i.isRtl) {\n    xRailOffset.left =\n      i.negativeScrollAdjustment +\n      element.scrollLeft +\n      i.containerWidth -\n      i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;\n  }\n  set(i.scrollbarXRail, xRailOffset);\n\n  var yRailOffset = { top: roundedScrollTop, height: i.railYHeight };\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right =\n        i.contentWidth -\n        (i.negativeScrollAdjustment + element.scrollLeft) -\n        i.scrollbarYRight -\n        i.scrollbarYOuterWidth -\n        9;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left =\n        i.negativeScrollAdjustment +\n        element.scrollLeft +\n        i.containerWidth * 2 -\n        i.contentWidth -\n        i.scrollbarYLeft -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  set(i.scrollbarYRail, yRailOffset);\n\n  set(i.scrollbarX, {\n    left: i.scrollbarXLeft,\n    width: i.scrollbarXWidth - i.railBorderXWidth,\n  });\n  set(i.scrollbarY, {\n    top: i.scrollbarYTop,\n    height: i.scrollbarYHeight - i.railBorderYWidth,\n  });\n}\n\nfunction clickRail(i) {\n  var element = i.element;\n\n  i.event.bind(i.scrollbarY, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarYRail, 'mousedown', function (e) {\n    var positionTop =\n      e.pageY -\n      window.pageYOffset -\n      i.scrollbarYRail.getBoundingClientRect().top;\n    var direction = positionTop > i.scrollbarYTop ? 1 : -1;\n\n    i.element.scrollTop += direction * i.containerHeight;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n\n  i.event.bind(i.scrollbarX, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarXRail, 'mousedown', function (e) {\n    var positionLeft =\n      e.pageX -\n      window.pageXOffset -\n      i.scrollbarXRail.getBoundingClientRect().left;\n    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\n\n    i.element.scrollLeft += direction * i.containerWidth;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n}\n\nfunction dragThumb(i) {\n  bindMouseScrollHandler(i, [\n    'containerWidth',\n    'contentWidth',\n    'pageX',\n    'railXWidth',\n    'scrollbarX',\n    'scrollbarXWidth',\n    'scrollLeft',\n    'x',\n    'scrollbarXRail' ]);\n  bindMouseScrollHandler(i, [\n    'containerHeight',\n    'contentHeight',\n    'pageY',\n    'railYHeight',\n    'scrollbarY',\n    'scrollbarYHeight',\n    'scrollTop',\n    'y',\n    'scrollbarYRail' ]);\n}\n\nfunction bindMouseScrollHandler(\n  i,\n  ref\n) {\n  var containerHeight = ref[0];\n  var contentHeight = ref[1];\n  var pageY = ref[2];\n  var railYHeight = ref[3];\n  var scrollbarY = ref[4];\n  var scrollbarYHeight = ref[5];\n  var scrollTop = ref[6];\n  var y = ref[7];\n  var scrollbarYRail = ref[8];\n\n  var element = i.element;\n\n  var startingScrollTop = null;\n  var startingMousePageY = null;\n  var scrollBy = null;\n\n  function mouseMoveHandler(e) {\n    if (e.touches && e.touches[0]) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    element[scrollTop] =\n      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);\n    addScrollingClass(i, y);\n    updateGeometry(i);\n\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  function mouseUpHandler() {\n    removeScrollingClass(i, y);\n    i[scrollbarYRail].classList.remove(cls.state.clicking);\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  }\n\n  function bindMoves(e, touchMode) {\n    startingScrollTop = element[scrollTop];\n    if (touchMode && e.touches) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    startingMousePageY = e[pageY];\n    scrollBy =\n      (i[contentHeight] - i[containerHeight]) /\n      (i[railYHeight] - i[scrollbarYHeight]);\n    if (!touchMode) {\n      i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n      i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n      e.preventDefault();\n    } else {\n      i.event.bind(i.ownerDocument, 'touchmove', mouseMoveHandler);\n    }\n\n    i[scrollbarYRail].classList.add(cls.state.clicking);\n\n    e.stopPropagation();\n  }\n\n  i.event.bind(i[scrollbarY], 'mousedown', function (e) {\n    bindMoves(e);\n  });\n  i.event.bind(i[scrollbarY], 'touchstart', function (e) {\n    bindMoves(e, true);\n  });\n}\n\nfunction keyboard(i) {\n  var element = i.element;\n\n  var elementHovered = function () { return matches(element, ':hover'); };\n  var scrollbarFocused = function () { return matches(i.scrollbarX, ':focus') || matches(i.scrollbarY, ':focus'); };\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if (\n        (scrollTop === 0 && deltaY > 0) ||\n        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if (\n        (scrollLeft === 0 && deltaX < 0) ||\n        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, 'keydown', function (e) {\n    if (\n      (e.isDefaultPrevented && e.isDefaultPrevented()) ||\n      e.defaultPrevented\n    ) {\n      return;\n    }\n\n    if (!elementHovered() && !scrollbarFocused()) {\n      return;\n    }\n\n    var activeElement = document.activeElement\n      ? document.activeElement\n      : i.ownerDocument.activeElement;\n    if (activeElement) {\n      if (activeElement.tagName === 'IFRAME') {\n        activeElement = activeElement.contentDocument.activeElement;\n      } else {\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n      }\n      if (isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    var deltaX = 0;\n    var deltaY = 0;\n\n    switch (e.which) {\n      case 37: // left\n        if (e.metaKey) {\n          deltaX = -i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = -i.containerWidth;\n        } else {\n          deltaX = -30;\n        }\n        break;\n      case 38: // up\n        if (e.metaKey) {\n          deltaY = i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = 30;\n        }\n        break;\n      case 39: // right\n        if (e.metaKey) {\n          deltaX = i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = i.containerWidth;\n        } else {\n          deltaX = 30;\n        }\n        break;\n      case 40: // down\n        if (e.metaKey) {\n          deltaY = -i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = -i.containerHeight;\n        } else {\n          deltaY = -30;\n        }\n        break;\n      case 32: // space bar\n        if (e.shiftKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = -i.containerHeight;\n        }\n        break;\n      case 33: // page up\n        deltaY = i.containerHeight;\n        break;\n      case 34: // page down\n        deltaY = -i.containerHeight;\n        break;\n      case 36: // home\n        deltaY = i.contentHeight;\n        break;\n      case 35: // end\n        deltaY = -i.contentHeight;\n        break;\n      default:\n        return;\n    }\n\n    if (i.settings.suppressScrollX && deltaX !== 0) {\n      return;\n    }\n    if (i.settings.suppressScrollY && deltaY !== 0) {\n      return;\n    }\n\n    element.scrollTop -= deltaY;\n    element.scrollLeft += deltaX;\n    updateGeometry(i);\n\n    if (shouldPreventDefault(deltaX, deltaY)) {\n      e.preventDefault();\n    }\n  });\n}\n\nfunction wheel(i) {\n  var element = i.element;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var roundedScrollTop = Math.floor(element.scrollTop);\n    var isTop = element.scrollTop === 0;\n    var isBottom =\n      roundedScrollTop + element.offsetHeight === element.scrollHeight;\n    var isLeft = element.scrollLeft === 0;\n    var isRight =\n      element.scrollLeft + element.offsetWidth === element.scrollWidth;\n\n    var hitsBound;\n\n    // pick axis with primary direction\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n      hitsBound = isTop || isBottom;\n    } else {\n      hitsBound = isLeft || isRight;\n    }\n\n    return hitsBound ? !i.settings.wheelPropagation : true;\n  }\n\n  function getDeltaFromEvent(e) {\n    var deltaX = e.deltaX;\n    var deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === 'undefined' || typeof deltaY === 'undefined') {\n      // OS X Safari\n      deltaX = (-1 * e.wheelDeltaX) / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    if (e.shiftKey) {\n      // reverse axis with shift key\n      return [-deltaY, -deltaX];\n    }\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    // FIXME: this is a workaround for <select> issue in FF and IE #571\n    if (!env.isWebKit && element.querySelector('select:focus')) {\n      return true;\n    }\n\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    var ref = getDeltaFromEvent(e);\n    var deltaX = ref[0];\n    var deltaY = ref[1];\n\n    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {\n      return;\n    }\n\n    var shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      element.scrollLeft += deltaX * i.settings.wheelSpeed;\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      } else {\n        element.scrollTop += deltaX * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        element.scrollLeft += deltaX * i.settings.wheelSpeed;\n      } else {\n        element.scrollLeft -= deltaY * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(i);\n\n    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent && !e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== 'undefined') {\n    i.event.bind(element, 'wheel', mousewheelHandler);\n  } else if (typeof window.onmousewheel !== 'undefined') {\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\n  }\n}\n\nfunction touch(i) {\n  if (!env.supportsTouch && !env.supportsIePointer) {\n    return;\n  }\n\n  var element = i.element;\n\n  function shouldPrevent(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    var scrollLeft = element.scrollLeft;\n    var magnitudeX = Math.abs(deltaX);\n    var magnitudeY = Math.abs(deltaY);\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (\n        (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight) ||\n        (deltaY > 0 && scrollTop === 0)\n      ) {\n        // set prevent for mobile Chrome refresh\n        return window.scrollY === 0 && deltaY > 0 && env.isChrome;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (\n        (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth) ||\n        (deltaX > 0 && scrollLeft === 0)\n      ) {\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    element.scrollTop -= differenceY;\n    element.scrollLeft -= differenceX;\n\n    updateGeometry(i);\n  }\n\n  var startOffset = {};\n  var startTime = 0;\n  var speed = {};\n  var easingLoop = null;\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n\n  function shouldHandle(e) {\n    if (e.pointerType && e.pointerType === 'pen' && e.buttons === 0) {\n      return false;\n    }\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (\n      e.pointerType &&\n      e.pointerType !== 'mouse' &&\n      e.pointerType !== e.MSPOINTER_TYPE_MOUSE\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  function touchStart(e) {\n    if (!shouldHandle(e)) {\n      return;\n    }\n\n    var touch = getTouch(e);\n\n    startOffset.pageX = touch.pageX;\n    startOffset.pageY = touch.pageY;\n\n    startTime = new Date().getTime();\n\n    if (easingLoop !== null) {\n      clearInterval(easingLoop);\n    }\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function touchMove(e) {\n    if (shouldHandle(e)) {\n      var touch = getTouch(e);\n\n      var currentOffset = { pageX: touch.pageX, pageY: touch.pageY };\n\n      var differenceX = currentOffset.pageX - startOffset.pageX;\n      var differenceY = currentOffset.pageY - startOffset.pageY;\n\n      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {\n        return;\n      }\n\n      applyTouchMove(differenceX, differenceY);\n      startOffset = currentOffset;\n\n      var currentTime = new Date().getTime();\n\n      var timeGap = currentTime - startTime;\n      if (timeGap > 0) {\n        speed.x = differenceX / timeGap;\n        speed.y = differenceY / timeGap;\n        startTime = currentTime;\n      }\n\n      if (shouldPrevent(differenceX, differenceY)) {\n        e.preventDefault();\n      }\n    }\n  }\n  function touchEnd() {\n    if (i.settings.swipeEasing) {\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function() {\n        if (i.isInitialized) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!speed.x && !speed.y) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (env.supportsTouch) {\n    i.event.bind(element, 'touchstart', touchStart);\n    i.event.bind(element, 'touchmove', touchMove);\n    i.event.bind(element, 'touchend', touchEnd);\n  } else if (env.supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(element, 'pointerdown', touchStart);\n      i.event.bind(element, 'pointermove', touchMove);\n      i.event.bind(element, 'pointerup', touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(element, 'MSPointerDown', touchStart);\n      i.event.bind(element, 'MSPointerMove', touchMove);\n      i.event.bind(element, 'MSPointerUp', touchEnd);\n    }\n  }\n}\n\nvar defaultSettings = function () { return ({\n  handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'],\n  maxScrollbarLength: null,\n  minScrollbarLength: null,\n  scrollingThreshold: 1000,\n  scrollXMarginOffset: 0,\n  scrollYMarginOffset: 0,\n  suppressScrollX: false,\n  suppressScrollY: false,\n  swipeEasing: true,\n  useBothWheelAxes: false,\n  wheelPropagation: true,\n  wheelSpeed: 1,\n}); };\n\nvar handlers = {\n  'click-rail': clickRail,\n  'drag-thumb': dragThumb,\n  keyboard: keyboard,\n  wheel: wheel,\n  touch: touch,\n};\n\nvar PerfectScrollbar = function PerfectScrollbar(element, userSettings) {\n  var this$1 = this;\n  if ( userSettings === void 0 ) userSettings = {};\n\n  if (typeof element === 'string') {\n    element = document.querySelector(element);\n  }\n\n  if (!element || !element.nodeName) {\n    throw new Error('no element is specified to initialize PerfectScrollbar');\n  }\n\n  this.element = element;\n\n  element.classList.add(cls.main);\n\n  this.settings = defaultSettings();\n  for (var key in userSettings) {\n    this.settings[key] = userSettings[key];\n  }\n\n  this.containerWidth = null;\n  this.containerHeight = null;\n  this.contentWidth = null;\n  this.contentHeight = null;\n\n  var focus = function () { return element.classList.add(cls.state.focus); };\n  var blur = function () { return element.classList.remove(cls.state.focus); };\n\n  this.isRtl = get(element).direction === 'rtl';\n  if (this.isRtl === true) {\n    element.classList.add(cls.rtl);\n  }\n  this.isNegativeScroll = (function () {\n    var originalScrollLeft = element.scrollLeft;\n    var result = null;\n    element.scrollLeft = -1;\n    result = element.scrollLeft < 0;\n    element.scrollLeft = originalScrollLeft;\n    return result;\n  })();\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? element.scrollWidth - element.clientWidth\n    : 0;\n  this.event = new EventManager();\n  this.ownerDocument = element.ownerDocument || document;\n\n  this.scrollbarXRail = div(cls.element.rail('x'));\n  element.appendChild(this.scrollbarXRail);\n  this.scrollbarX = div(cls.element.thumb('x'));\n  this.scrollbarXRail.appendChild(this.scrollbarX);\n  this.scrollbarX.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarX, 'focus', focus);\n  this.event.bind(this.scrollbarX, 'blur', blur);\n  this.scrollbarXActive = null;\n  this.scrollbarXWidth = null;\n  this.scrollbarXLeft = null;\n  var railXStyle = get(this.scrollbarXRail);\n  this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);\n  if (isNaN(this.scrollbarXBottom)) {\n    this.isScrollbarXUsingBottom = false;\n    this.scrollbarXTop = toInt(railXStyle.top);\n  } else {\n    this.isScrollbarXUsingBottom = true;\n  }\n  this.railBorderXWidth =\n    toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);\n  // Set rail to display:block to calculate margins\n  set(this.scrollbarXRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);\n  set(this.scrollbarXRail, { display: '' });\n  this.railXWidth = null;\n  this.railXRatio = null;\n\n  this.scrollbarYRail = div(cls.element.rail('y'));\n  element.appendChild(this.scrollbarYRail);\n  this.scrollbarY = div(cls.element.thumb('y'));\n  this.scrollbarYRail.appendChild(this.scrollbarY);\n  this.scrollbarY.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarY, 'focus', focus);\n  this.event.bind(this.scrollbarY, 'blur', blur);\n  this.scrollbarYActive = null;\n  this.scrollbarYHeight = null;\n  this.scrollbarYTop = null;\n  var railYStyle = get(this.scrollbarYRail);\n  this.scrollbarYRight = parseInt(railYStyle.right, 10);\n  if (isNaN(this.scrollbarYRight)) {\n    this.isScrollbarYUsingRight = false;\n    this.scrollbarYLeft = toInt(railYStyle.left);\n  } else {\n    this.isScrollbarYUsingRight = true;\n  }\n  this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;\n  this.railBorderYWidth =\n    toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railYMarginHeight =\n    toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);\n  set(this.scrollbarYRail, { display: '' });\n  this.railYHeight = null;\n  this.railYRatio = null;\n\n  this.reach = {\n    x:\n      element.scrollLeft <= 0\n        ? 'start'\n        : element.scrollLeft >= this.contentWidth - this.containerWidth\n        ? 'end'\n        : null,\n    y:\n      element.scrollTop <= 0\n        ? 'start'\n        : element.scrollTop >= this.contentHeight - this.containerHeight\n        ? 'end'\n        : null,\n  };\n\n  this.isAlive = true;\n\n  this.settings.handlers.forEach(function (handlerName) { return handlers[handlerName](this$1); });\n\n  this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only\n  this.lastScrollLeft = element.scrollLeft; // for onScroll only\n  this.event.bind(this.element, 'scroll', function (e) { return this$1.onScroll(e); });\n  updateGeometry(this);\n};\n\nPerfectScrollbar.prototype.update = function update () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  // Recalcuate negative scrollLeft adjustment\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? this.element.scrollWidth - this.element.clientWidth\n    : 0;\n\n  // Recalculate rail margins\n  set(this.scrollbarXRail, { display: 'block' });\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(get(this.scrollbarXRail).marginLeft) +\n    toInt(get(this.scrollbarXRail).marginRight);\n  this.railYMarginHeight =\n    toInt(get(this.scrollbarYRail).marginTop) +\n    toInt(get(this.scrollbarYRail).marginBottom);\n\n  // Hide scrollbars not to affect scrollWidth and scrollHeight\n  set(this.scrollbarXRail, { display: 'none' });\n  set(this.scrollbarYRail, { display: 'none' });\n\n  updateGeometry(this);\n\n  processScrollDiff(this, 'top', 0, false, true);\n  processScrollDiff(this, 'left', 0, false, true);\n\n  set(this.scrollbarXRail, { display: '' });\n  set(this.scrollbarYRail, { display: '' });\n};\n\nPerfectScrollbar.prototype.onScroll = function onScroll (e) {\n  if (!this.isAlive) {\n    return;\n  }\n\n  updateGeometry(this);\n  processScrollDiff(this, 'top', this.element.scrollTop - this.lastScrollTop);\n  processScrollDiff(\n    this,\n    'left',\n    this.element.scrollLeft - this.lastScrollLeft\n  );\n\n  this.lastScrollTop = Math.floor(this.element.scrollTop);\n  this.lastScrollLeft = this.element.scrollLeft;\n};\n\nPerfectScrollbar.prototype.destroy = function destroy () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  this.event.unbindAll();\n  remove(this.scrollbarX);\n  remove(this.scrollbarY);\n  remove(this.scrollbarXRail);\n  remove(this.scrollbarYRail);\n  this.removePsClasses();\n\n  // unset elements\n  this.element = null;\n  this.scrollbarX = null;\n  this.scrollbarY = null;\n  this.scrollbarXRail = null;\n  this.scrollbarYRail = null;\n\n  this.isAlive = false;\n};\n\nPerfectScrollbar.prototype.removePsClasses = function removePsClasses () {\n  this.element.className = this.element.className\n    .split(' ')\n    .filter(function (name) { return !name.match(/^ps([-_].+|)$/); })\n    .join(' ');\n};\n\nexport default PerfectScrollbar;\n//# sourceMappingURL=perfect-scrollbar.esm.js.map\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const SUPPORTS_NATIVE_SCROLLBAR_STYLING = new InjectionToken<boolean>('SUPPORTS_NATIVE_SCROLLBAR_STYLING', {\r\n    providedIn: 'root',\r\n    factory: () => {\r\n        // Detect IE, does not support custom scrollbars\r\n        if (navigator.userAgent.indexOf('MSIE') !== -1\r\n            || navigator.appVersion.indexOf('Trident/') > -1) {\r\n            return false;\r\n        }\r\n\r\n        // Tested Element\r\n        const test = document.createElement('div');\r\n        test.className = '__sb-test';\r\n        test.style.overflow = 'scroll';\r\n        test.style.width = '40px';\r\n\r\n        // Is there another way to style pseudo-elements in JS ?\r\n        const style = document.createElement('style');\r\n        style.innerHTML = '.__sb-test::-webkit-scrollbar { width: 0px; }';\r\n\r\n        // Apply\r\n        test.appendChild(style);\r\n        document.body.appendChild(test);\r\n\r\n        // If css scrollbar is supported, than the scrollWidth should not be impacted\r\n        const result = test.scrollWidth == 40;\r\n\r\n        // Cleaning\r\n        document.body.removeChild(test);\r\n\r\n        return result;\r\n    }\r\n});\r\n","import {AfterViewInit, Directive, ElementRef, Inject, Input, NgZone, OnDestroy, Renderer2} from '@angular/core';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport {Subscription, Subject} from 'rxjs';\r\nimport {BreakpointsService} from '../breakpoints.service';\r\nimport {MutationObserverFactory} from '@angular/cdk/observers';\r\nimport {Settings} from '../../config/settings.service';\r\nimport {SUPPORTS_NATIVE_SCROLLBAR_STYLING} from './supports-native-scrollbar-styling';\r\n\r\n@Directive({\r\n    selector: '[customScrollbar]'\r\n})\r\nexport class CustomScrollbarDirective implements AfterViewInit, OnDestroy {\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    /**\r\n     * Minimum length for scrollbar drag handle.\r\n     */\r\n    @Input('customScrollbarMinLength') minLength = 100;\r\n\r\n    /**\r\n     * Whether horizontal scrollbar should be always hidden.\r\n     */\r\n    @Input() suppressX = true;\r\n\r\n    /**\r\n     * scrollTop value set via custom setScrollTop() method.\r\n     * Perfect Scrollbar doesn't preserve scrollTop value on DOM\r\n     * element for some reason, so we need to keep it here.\r\n     */\r\n    private scrollTop = 0;\r\n\r\n    /**\r\n     * Whether custom or native scrollbar is used.\r\n     */\r\n    private native = true;\r\n\r\n    private scrollbar: PerfectScrollbar;\r\n\r\n    private observer: MutationObserver;\r\n\r\n    /**\r\n     * Used for debouncing the emitted values to the observeContent event.\r\n     */\r\n    private debouncer = new Subject<MutationRecord[]>();\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private renderer: Renderer2,\r\n        private breakpoints: BreakpointsService,\r\n        private ngZone: NgZone,\r\n        private mutationObserverFactory: MutationObserverFactory,\r\n        private config: Settings,\r\n        @Inject(SUPPORTS_NATIVE_SCROLLBAR_STYLING) private supportsNativeStyling: boolean,\r\n    ) {}\r\n\r\n    ngAfterViewInit() {\r\n        if (this.suppressX) {\r\n            this.renderer.addClass(this.el.nativeElement, 'scroll-container');\r\n        } else {\r\n            this.renderer.addClass(this.el.nativeElement, 'scroll-container-x');\r\n        }\r\n\r\n        if (this.shouldUseNative()) return;\r\n\r\n        this.scrollbar = new PerfectScrollbar(this.el.nativeElement, {\r\n            minScrollbarLength: this.minLength,\r\n            suppressScrollX: this.suppressX,\r\n            useBothWheelAxes: !this.suppressX,\r\n            wheelSpeed: 2\r\n        });\r\n\r\n        this.native = false;\r\n\r\n        this.bindToContentChange();\r\n    }\r\n\r\n    /**\r\n     * Update custom scrollbar.\r\n     */\r\n    public update() {\r\n        if (this.native) return;\r\n        this.scrollbar.update();\r\n    }\r\n\r\n    /**\r\n     * Scroll container top to given value.\r\n     */\r\n    public setScrollTop(value = 0) {\r\n        this.el.nativeElement.scrollTop = value;\r\n        this.scrollTop = this.el.nativeElement.scrollTop;\r\n        this.update();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n        this.subscriptions = [];\r\n\r\n        if ( ! this.native) {\r\n            this.scrollbar.destroy();\r\n        }\r\n\r\n        // disable observer\r\n        this.debouncer.complete();\r\n        this.observer && this.observer.disconnect();\r\n    }\r\n\r\n    /**\r\n     * Check whether native or custom scrollbar should be used.\r\n     */\r\n    private shouldUseNative(): boolean {\r\n        if (this.config.get('vebto.forceCustomScrollbar')) return false;\r\n        if (/Edge/.test(navigator.userAgent)) return false;\r\n        if (this.breakpoints.isMobile$.value) return true;\r\n        return this.supportsNativeStyling;\r\n    }\r\n\r\n    /**\r\n     * Update custom scrollbar when element content changes.\r\n     */\r\n    private bindToContentChange() {\r\n        this.observer = this.ngZone.runOutsideAngular(() => {\r\n            return this.mutationObserverFactory.create((mutations: MutationRecord[]) => {\r\n                this.debouncer.next(mutations);\r\n            });\r\n        });\r\n\r\n        this.observer.observe(this.el.nativeElement, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.debouncer.subscribe((mutations: MutationRecord[]) => this.update());\r\n        });\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hostReportError_1 = require(\"./hostReportError\");\nexports.subscribeToPromise = function (promise) { return function (subscriber) {\n    promise.then(function (value) {\n        if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n        }\n    }, function (err) { return subscriber.error(err); })\n        .then(null, hostReportError_1.hostReportError);\n    return subscriber;\n}; };\n//# sourceMappingURL=subscribeToPromise.js.map","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'default-preview',\r\n    templateUrl: './default-preview.component.html',\r\n    styleUrls: ['./default-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DefaultPreviewComponent extends BaseFilePreview {\r\n    @Input() message: string;\r\n\r\n    public getMessage() {\r\n        return this.message || 'No file preview available.';\r\n    }\r\n}\r\n","<div class=\"panel preview-object\">\r\n    <div class=\"message\" trans>{{getMessage()}}</div>\r\n    <button mat-raised-button color=\"accent\" (click)=\"download.emit()\" trans>Download</button>\r\n</div>","import {AfterViewInit, Component, Inject, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {TicketsService} from '../tickets.service';\r\nimport {Reply} from '../../shared/models/Reply';\r\nimport {TextEditorComponent} from '@common/text-editor/text-editor.component';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\nimport {FileEntry} from '@common/uploads/types/file-entry';\r\n\r\ninterface UpdateReplyModalData {\r\n    reply: Reply;\r\n}\r\n\r\ninterface UpdateReplyModalErrors {\r\n    body?: string;\r\n    attachments?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'update-reply-modal',\r\n    templateUrl: './update-reply-modal.component.html',\r\n    styleUrls: ['./update-reply-modal.component.scss'],\r\n    providers: [UploadQueueService],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class UpdateReplyModalComponent implements AfterViewInit {\r\n    @ViewChild(TextEditorComponent, { static: true }) textEditor: TextEditorComponent;\r\n\r\n    private reply: Reply;\r\n    public attachments: FileEntry[] = [];\r\n    public errors: UpdateReplyModalErrors = {};\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<UpdateReplyModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: UpdateReplyModalData,\r\n        private tickets: TicketsService,\r\n        private uploadQueue: UploadQueueService,\r\n    ) {\r\n        this.hydrate();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.textEditor.focus();\r\n        this.textEditor.setContents(this.reply.body);\r\n    }\r\n\r\n    private hydrate() {\r\n        this.reply = Object.assign({}, this.data.reply);\r\n        this.attachments = this.reply.uploads.slice();\r\n    }\r\n\r\n    public close(reply?: Reply) {\r\n        this.dialogRef.close(reply);\r\n        this.textEditor.destroyEditor();\r\n    }\r\n\r\n    public confirm() {\r\n        const payload = {\r\n            body: this.textEditor.getContents(),\r\n            uploads: this.attachments.map(attachment => attachment.id)\r\n        };\r\n\r\n        this.tickets.updateReply(this.reply.id, payload).subscribe(response => {\r\n            this.close(response.data);\r\n        }, errorResponse => this.errors = errorResponse.messages);\r\n    }\r\n\r\n    public uploadFiles(files: UploadedFile[]) {\r\n        this.uploadQueue.start(files).subscribe(response => {\r\n            this.attachments = [...this.attachments, response.fileEntry];\r\n        });\r\n    }\r\n\r\n    public removeAttachment(entry: FileEntry) {\r\n        for (let i = 0; i < this.attachments.length; i++) {\r\n            if (this.attachments[i].id === entry.id) {\r\n                this.attachments.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title trans>Update Reply</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button\" mat-icon-button tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"many-inputs\">\r\n    <div class=\"input-container\">\r\n        <text-editor inlineUploadPrefix=\"ticket_images\" [minHeight]=\"300\" (onFileUpload)=\"uploadFiles($event)\"></text-editor>\r\n        <upload-progress-bar></upload-progress-bar>\r\n\r\n        <div class=\"error\" *ngIf=\"errors.body\">{{errors.body}}</div>\r\n        <div class=\"error\" *ngIf=\"errors.attachments\">{{errors.attachments}}</div>\r\n\r\n        <reply-attachment-list [attachments]=\"attachments\" *ngIf=\"attachments.length\"\r\n                               (detached)=\"removeAttachment($event)\"></reply-attachment-list>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button (click)=\"close()\" type=\"button\" class=\"cancel-button\" mat-button trans>Cancel</button>\r\n    <button type=\"submit\" class=\"submit-button\" mat-raised-button color=\"accent\" (click)=\"confirm()\" trans>Update</button>\r\n</mat-dialog-actions>\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Upload} from '../shared/models/Upload';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class TicketAttachmentsService {\r\n    constructor(private httpClient: AppHttpClient) {}\r\n\r\n    public attach(conversationId: number, attachments: Upload[] = [], draft: string = null) {\r\n        const payload: any = { ids: [] };\r\n\r\n        payload.ids = attachments.map(attachment => attachment.id);\r\n\r\n        if (draft) payload.body = draft;\r\n\r\n        return this.httpClient.post('tickets/' + conversationId + '/attachments', payload);\r\n    }\r\n\r\n    public detach(draftId: number, uploadId: number): Observable<{data: number}> {\r\n        return this.httpClient.post('drafts/' + draftId + '/uploads/' + uploadId + '/detach');\r\n    }\r\n}\r\n","<div class=\"title-container\">\r\n    <h2 class=\"ticket-subject\">{{conversation.get().subject}}</h2>\r\n    <div class=\"tags\">\r\n        <ng-template ngFor let-tag [ngForOf]=\"conversation.get().tags\">\r\n            <div class=\"tag-label\" *ngIf=\"tag.type !== 'status'\">\r\n                <span class=\"tag-name\">{{tag.name}}</span>\r\n                <button class=\"no-style remove-tag-button\" type=\"button\" (click)=\"removeTag(tag)\" title=\"Remove Tag\" *ngIf=\"currentUser.hasPermission('tickets.update')\">\r\n                    <mat-icon svgIcon=\"close\"></mat-icon>\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"title-meta\">\r\n    <div class=\"ticket-created-at-date\">{{conversation.get()['created_at_formatted']}} ({{conversation.get()['created_at_month']}})</div>\r\n    <div class=\"actions\">\r\n        <button class=\"button reply-button\" (click)=\"conversation.openEditor()\" [matTooltip]=\"'Reply (r)' | trans\"><mat-icon svgIcon=\"reply\"></mat-icon></button>\r\n    </div>\r\n</div>","import {Component, ViewEncapsulation} from '@angular/core';\r\nimport {Conversation} from '../conversation.service';\r\nimport {Tag} from '../../shared/models/Tag';\r\nimport {TicketsService} from '../../ticketing/tickets.service';\r\nimport {MailboxTagsService} from '../../ticketing/mailbox-tags.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\n\r\n@Component({\r\n    selector: 'conversation-header',\r\n    templateUrl: './conversation-header.component.html',\r\n    styleUrls: ['./conversation-header.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ConversationHeaderComponent {\r\n    constructor(\r\n        private tickets: TicketsService,\r\n        public currentUser: CurrentUser,\r\n        private mailboxTags: MailboxTagsService,\r\n        public conversation: Conversation,\r\n    ) {}\r\n\r\n    /**\r\n     * Remove specified tag from current ticket.\r\n     */\r\n    public removeTag(tagToRemove: Tag) {\r\n        this.tickets.removeTag(tagToRemove, [this.conversation.get().id]).subscribe(() => {\r\n            this.conversation.get().tags = this.conversation.get().tags.filter(tag => tag.id !== tagToRemove.id);\r\n            this.mailboxTags.refresh();\r\n        });\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar InnerSubscriber_1 = require(\"../InnerSubscriber\");\nvar subscribeTo_1 = require(\"./subscribeTo\");\nvar Observable_1 = require(\"../Observable\");\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {\n    if (innerSubscriber === void 0) { innerSubscriber = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex); }\n    if (innerSubscriber.closed) {\n        return undefined;\n    }\n    if (result instanceof Observable_1.Observable) {\n        return result.subscribe(innerSubscriber);\n    }\n    return subscribeTo_1.subscribeTo(result)(innerSubscriber);\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map","import {User} from './User';\nimport {FileEntry} from '@common/uploads/types/file-entry';\n\nexport class CannedReply {\n    id: number;\n    name: string;\n    body: string;\n    user_id: number;\n    shared = false;\n    created_at?: string;\n    updated_at?: string;\n    uploads?: FileEntry[];\n    user?: User;\n\n    constructor(params: Object = {}) {\n        for (const name in params) {\n            this[name] = params[name];\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\r\nimport {TicketsService} from '../ticketing/tickets.service';\r\nimport {MailboxTagsService} from '../ticketing/mailbox-tags.service';\r\nimport {Router} from '@angular/router';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {LocalStorage} from '@common/core/services/local-storage.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AfterReplyAction {\r\n    public defaultAction: string;\r\n    private activeTicketId: number;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private toast: Toast,\r\n        private tickets: TicketsService,\r\n        private settings: Settings,\r\n        private mailboxTags: MailboxTagsService,\r\n        private localStorage: LocalStorage,\r\n    ) {\r\n        this.defaultAction = this.settings.get('replies.after_reply_action', 'next_active_ticket');\r\n    }\r\n\r\n    public perform() {\r\n        // we're currently in help center tickets list\r\n        if (this.router.url.indexOf('help-center') > -1) {\r\n            this.navigateToCustomerTicketsList();\r\n            return;\r\n        }\r\n\r\n        switch (this.get()) {\r\n            case 'next_active_ticket':\r\n                this.navigateToNextActiveTicket();\r\n                break;\r\n            case 'back_to_folder':\r\n                this.navigateToAgentTicketsList();\r\n                break;\r\n        }\r\n\r\n        this.mailboxTags.refresh();\r\n    }\r\n\r\n    /**\r\n     * Get currently active after redirect action.\r\n     */\r\n    public get() {\r\n        return this.localStorage.get('after_reply_action', this.defaultAction);\r\n    }\r\n\r\n    /**\r\n     * Change default action that is applied after reply submit.\r\n     */\r\n    public set(value: string = null) {\r\n        this.defaultAction = value;\r\n        this.localStorage.set('after_reply_action', value);\r\n    }\r\n\r\n    /**\r\n     * Set currently active ticket id.\r\n     */\r\n    public setTicketId(id: number) {\r\n        this.activeTicketId = id;\r\n    }\r\n\r\n    /**\r\n     * Navigate to next active ticket belonging to currently active tag.\r\n     */\r\n    private navigateToNextActiveTicket() {\r\n        const tagId = this.mailboxTags.getActiveTagId();\r\n        this.tickets.getLatestActiveTicket(tagId).subscribe(ticket => {\r\n            if (ticket && ticket.id !== this.activeTicketId) {\r\n                this.router.navigate(['/mailbox/tickets/tag/', tagId, 'ticket', ticket.id]);\r\n            } else {\r\n                this.navigateToAgentTicketsList();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Navigate back to tickets list for currently active tag.\r\n     */\r\n    private navigateToAgentTicketsList() {\r\n        this.router.navigate(['/mailbox/tickets/tag/' + this.mailboxTags.getActiveTagId()]);\r\n    }\r\n\r\n    /**\r\n     * Navigate back to customers ticket list.\r\n     */\r\n    public navigateToCustomerTicketsList(message?: string) {\r\n        this.router.navigate(['/help-center/tickets']);\r\n        this.toast.open(message || 'Your reply was submitted successfully.');\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar subscribeTo_1 = require(\"../util/subscribeTo\");\nvar scheduled_1 = require(\"../scheduled/scheduled\");\nfunction from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable_1.Observable) {\n            return input;\n        }\n        return new Observable_1.Observable(subscribeTo_1.subscribeTo(input));\n    }\n    else {\n        return scheduled_1.scheduled(input, scheduler);\n    }\n}\nexports.from = from;\n//# sourceMappingURL=from.js.map","import {NgModule} from '@angular/core';\r\nimport {CustomScrollbarDirective} from './custom-scrollbar.directive';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CustomScrollbarDirective\r\n    ],\r\n    exports: [\r\n        CustomScrollbarDirective,\r\n    ]\r\n})\r\nexport class CustomScrollbarModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\r\nimport {catchError, mergeMap} from 'rxjs/operators';\r\nimport {EMPTY, Observable, of} from 'rxjs';\r\nimport {Tag} from '../shared/models/Tag';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NewTicketCategoriesResolve implements Resolve<Tag[]> {\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpCacheClient,\r\n    ) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Tag[]> {\r\n        return this.http.get('new-ticket/categories')\r\n            .pipe(\r\n                catchError(() => {\r\n                    this.router.navigateByUrl('/');\r\n                    return EMPTY;\r\n                }),\r\n                mergeMap((response: {tags: Tag[]}) => {\r\n                    return of(response.tags);\r\n                })\r\n            );\r\n    }\r\n}\r\n","import {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Pipe({\r\n    name: 'formattedDate'\r\n})\r\nexport class FormattedDatePipe implements PipeTransform {\r\n    private readonly format: string;\r\n    private angularPipe: DatePipe;\r\n\r\n    /**\r\n     * FormattedDatePipe Constructor.\r\n     */\r\n    constructor(private settings: Settings, @Inject(LOCALE_ID) private _locale: string) {\r\n        this.format = this.settings.get('dates.format', 'yyyy-MM-dd');\r\n        this.angularPipe = new DatePipe(_locale);\r\n    }\r\n\r\n    transform(value: any, format?: string, timezone?: string, locale?: string): string | null {\r\n        // iOS does not support YYYY-MM-DD\r\n        value = (value && typeof value === 'string' ) ? value.replace(/-/g, '/') : value;\r\n        return this.angularPipe.transform(value, format || this.format, timezone, locale);\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CURRENT_PREVIEW_FILE = new InjectionToken<any>('CURRENT_PREVIEW_FILE');\r\n","import {Injectable} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {filter} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RouterHistory {\r\n\r\n    /**\r\n     * Application route history.\r\n     */\r\n    private history: {url: string, queryParams?: Object}[] = [];\r\n\r\n    /**\r\n     * Maximum number of history items.\r\n     */\r\n    private  limit = 15;\r\n\r\n    /**\r\n     * RouteHistory Constructor.\r\n     */\r\n    constructor(private router: Router) {}\r\n\r\n    /**\r\n     * get history item at specified index or first item.\r\n     */\r\n    public get(index = 0) {\r\n        return this.history[index] || null;\r\n    }\r\n\r\n    /**\r\n     * Get previous history item.\r\n     */\r\n    public getPrevious() {\r\n        return this.get(1);\r\n    }\r\n\r\n    /**\r\n     * Navigate to previous url in routing history.\r\n     */\r\n    public back(): Promise<boolean> {\r\n        const item = this.getPrevious();\r\n        if ( ! item) return new Promise(resolve => resolve(false));\r\n\r\n        return this.router.navigate([item.url], {queryParams: item.queryParams})\r\n    }\r\n\r\n    /**\r\n     * Add new route history item from specified uri.\r\n     */\r\n    private addHistoryItem(uri: string) {\r\n        const parts = uri.split('?');\r\n        let queryParams = {};\r\n\r\n        // parse and add query params\r\n        if (parts[1]) {\r\n            queryParams = this.parseQueryParams(parts[1]);\r\n        }\r\n\r\n        // limit history length\r\n        if (this.history.length >= this.limit) {\r\n            this.history.splice(1, this.history.length - 1);\r\n        }\r\n\r\n        this.history.unshift({url: parts[0], queryParams});\r\n    }\r\n\r\n    /**\r\n     * Parse query params string into object.\r\n     */\r\n    private parseQueryParams(rawString: string): Object {\r\n        const params = new URLSearchParams(rawString), queryParams = {};\r\n\r\n        console.log(params);\r\n\r\n        return queryParams;\r\n    }\r\n\r\n    /**\r\n     * Initiate RouteHistory service.\r\n     */\r\n    public init() {\r\n        this.router.events\r\n            .pipe(filter(event => event instanceof NavigationEnd))\r\n            .subscribe((e: NavigationEnd) => {\r\n                this.addHistoryItem(e.urlAfterRedirects);\r\n            });\r\n    }\r\n}\r\n","import {Component, Injector, Input, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {Conversation} from '../conversation.service';\r\nimport {Tag} from '../../shared/models/Tag';\r\nimport {Reply} from '../../shared/models/Reply';\r\nimport {TicketsService} from '../../ticketing/tickets.service';\r\nimport {MailboxTagsService} from '../../ticketing/mailbox-tags.service';\r\nimport {AddNoteModalComponent} from '../../ticketing/add-note-modal/add-note-modal.component';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AssignTicketDropdownComponent} from '../../ticketing/assign-ticket-dropdown/assign-ticket-dropdown.component';\r\nimport {AddTagDropdownComponent} from '../../ticketing/add-tag-dropdown/add-tag-dropdown.component';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {BrowserEvents} from '@common/core/services/browser-events.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {MatMenuTrigger} from '@angular/material/menu';\r\nimport {RouterHistory} from '../../shared/router-history.service';\r\nimport {A, B, C, N, O, P, S, T} from '@angular/cdk/keycodes';\r\n\r\n@Component({\r\n    selector: 'conversation-toolbar',\r\n    templateUrl: './conversation-toolbar.component.html',\r\n    styleUrls: ['./conversation-toolbar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ConversationToolbarComponent implements OnInit, OnDestroy {\r\n    @ViewChild(AssignTicketDropdownComponent, { static: false }) assignTicketDropdown: AssignTicketDropdownComponent;\r\n    @ViewChild(AddTagDropdownComponent, { static: false }) addTagDropdown: AddTagDropdownComponent;\r\n    @ViewChild('ticketStatusMenuTrigger', { read: MatMenuTrigger, static: false }) ticketStatusTrigger: MatMenuTrigger;\r\n\r\n    @Input() hideBackButton = false;\r\n\r\n    private subscriptions = [];\r\n\r\n    constructor(\r\n        private router: Router,\r\n        public injector: Injector,\r\n        private modals: Modal,\r\n        private route: ActivatedRoute,\r\n        public currentUser: CurrentUser,\r\n        private tickets: TicketsService,\r\n        public conversation: Conversation,\r\n        private browserEvents: BrowserEvents,\r\n        public mailboxTags: MailboxTagsService,\r\n        private routerHistory: RouterHistory,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.initKeybinds();\r\n    }\r\n\r\n    public changeTicketStatus(status: Tag) {\r\n        if ( ! status) return;\r\n        this.tickets.changeTicketStatus(this.conversation.get().id, status.name).subscribe(() => {\r\n            this.conversation.performAfterReplyAction();\r\n            this.conversation.setStatus(status);\r\n        });\r\n    }\r\n\r\n    public showNoteModal() {\r\n        this.modals.open(\r\n            AddNoteModalComponent,\r\n            {ticketId: this.conversation.get().id},\r\n            {panelClass: 'add-note-modal-container'}\r\n        ).afterClosed().subscribe(note => {\r\n            if ( ! note) return;\r\n            this.addNewNote(note);\r\n        });\r\n    }\r\n\r\n    public addTag(tag: Tag) {\r\n        this.conversation.addTag(tag);\r\n        this.refreshMailboxTags();\r\n    }\r\n\r\n    public addNewNote(note: Reply) {\r\n        if ( ! note) return;\r\n        this.conversation.replies.add(note);\r\n    }\r\n\r\n    public navigateToTicketsList() {\r\n        if (this.routerHistory.getPrevious()) {\r\n            this.routerHistory.back();\r\n        } else {\r\n            this.router.navigate(['../../'], {relativeTo: this.route});\r\n        }\r\n    }\r\n\r\n    public refreshMailboxTags() {\r\n        this.mailboxTags.refresh();\r\n    }\r\n\r\n    private initKeybinds() {\r\n        const sub = this.browserEvents.globalKeyDown$.subscribe(e => {\r\n            let handled = true;\r\n\r\n            // if any modals are open or user is currently typing, bail\r\n            if (this.modals.anyDialogOpen() || BrowserEvents.userIsTyping() || e.ctrlKey) return;\r\n\r\n            switch (e.keyCode) {\r\n                // main toolbar actions\r\n                case B:\r\n                    this.closeAllMenus();\r\n                    this.navigateToTicketsList();\r\n                    break;\r\n                case A:\r\n                    this.assignTicketDropdown.open();\r\n                    break;\r\n                case N:\r\n                    this.closeAllMenus();\r\n                    this.showNoteModal();\r\n                    break;\r\n                case T:\r\n                    this.addTagDropdown.open();\r\n                    break;\r\n                case S:\r\n                    if (this.ticketStatusTrigger.menuOpen) {\r\n                        this.handleTicketStatusChangeKeybind('spam');\r\n                    } else {\r\n                        this.ticketStatusTrigger.openMenu();\r\n                    }\r\n                    break;\r\n\r\n                // change ticket status\r\n                case O:\r\n                    this.handleTicketStatusChangeKeybind('open');\r\n                    break;\r\n                case C:\r\n                    this.handleTicketStatusChangeKeybind('closed');\r\n                    break;\r\n                case P:\r\n                    this.handleTicketStatusChangeKeybind('pending');\r\n                    break;\r\n                default:\r\n                    handled = false;\r\n            }\r\n\r\n            if (handled) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n\r\n        this.subscriptions.push(sub);\r\n    }\r\n\r\n    private closeAllMenus() {\r\n        this.addTagDropdown.close();\r\n        this.assignTicketDropdown.close();\r\n        this.ticketStatusTrigger.closeMenu();\r\n    }\r\n\r\n    /**\r\n     * Change ticket status so specified one and close dropdown.\r\n     */\r\n    private handleTicketStatusChangeKeybind(status: string) {\r\n        if ( ! this.ticketStatusTrigger.menuOpen) return;\r\n        this.changeTicketStatus(this.mailboxTags.getTagByIdOrName(status));\r\n        this.ticketStatusTrigger.closeMenu();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(subscription => {\r\n            if (subscription) subscription.unsubscribe();\r\n        });\r\n    }\r\n}\r\n","<div class=\"left toolbar-actions\">\r\n    <ng-container *ngIf=\"currentUser.hasPermissions(['tickets.update', 'replies.create'])\">\r\n        <button class=\"no-style action back-button\" (click)=\"navigateToTicketsList()\" *ngIf=\"!hideBackButton\" [matTooltip]=\"'Back (b)' | trans\">\r\n            <mat-icon svgIcon=\"return-custom\"></mat-icon>\r\n        </button>\r\n\r\n        <assign-ticket-dropdown [ticket]=\"conversation.get()\" (assigned)=\"refreshMailboxTags()\" class=\"action\" [matTooltip]=\"'Assign (a)' | trans\"></assign-ticket-dropdown>\r\n\r\n        <button class=\"action no-style add-note-button\" (click)=\"showNoteModal()\" [matTooltip]=\"'Note (n)' | trans\">\r\n            <mat-icon svgIcon=\"note-custom\"></mat-icon>\r\n        </button>\r\n\r\n        <add-tag-dropdown class=\"action\" [ticketIds]=\"[conversation.get().id]\" (tagAdded)=\"addTag($event)\" [matTooltip]=\"'Tag (t)' | trans\"></add-tag-dropdown>\r\n\r\n        <button class=\"no-style change-ticket-status-button action\" [matMenuTriggerFor]=\"ticketStatusMenu\" [matTooltip]=\"'Status (s)' | trans\" #ticketStatusMenuTrigger>\r\n            <mat-icon svgIcon=\"flag-custom\"></mat-icon>\r\n        </button>\r\n        <mat-menu #ticketStatusMenu=\"matMenu\" [overlapTrigger]=\"false\" class=\"ticket-status-menu\">\r\n            <button mat-menu-item\r\n                    *ngFor=\"let tag of mailboxTags.getStatusTags(true)\"\r\n                    (click)=\"changeTicketStatus(tag)\"\r\n                    [class.active]=\"conversation.status?.name === tag.name\"\r\n                    [ngClass]=\"tag.name\">\r\n                {{tag.display_name || tag.name}}\r\n            </button>\r\n        </mat-menu>\r\n\r\n        <ng-content></ng-content>\r\n    </ng-container>\r\n</div>\r\n<div class=\"right ticket-info\">\r\n    <div class=\"ticket-number\">#{{conversation.get().id}}</div>\r\n    <div class=\"ticket-status\" [ngClass]=\"conversation.getStatus().name\">{{conversation.getStatus().display_name}}</div>\r\n</div>","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormattedDatePipe} from '@common/core/ui/format-pipes/formatted-date.pipe';\nimport {FormattedFileSizePipe} from '@common/uploads/formatted-file-size.pipe';\n\n\n@NgModule({\n    declarations: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n    ]\n})\nexport class FormatPipesModule {\n}\n","import {Component, Inject, ViewEncapsulation} from '@angular/core';\r\nimport {Reply} from '../../shared/models/Reply';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\ninterface ConfirmReplyDeleteModalComponentData  {\r\n    reply: Reply;\r\n}\r\n\r\n@Component({\r\n    selector: 'confirm-reply-delete-modal',\r\n    templateUrl: './confirm-reply-delete-modal.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ConfirmReplyDeleteModalComponent {\r\n    public type: string;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConfirmReplyDeleteModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmReplyDeleteModalComponentData,\r\n        public settings: Settings,\r\n    ) {\r\n        this.type = this.getDisplayType(data.reply.type);\r\n    }\r\n\r\n    public close(confirmed = false) {\r\n        this.dialogRef.close(confirmed);\r\n    }\r\n\r\n    public confirm() {\r\n        this.close(true);\r\n    }\r\n\r\n    private getDisplayType(type: string): string {\r\n        switch (type) {\r\n            case 'replies':\r\n                return 'reply';\r\n            case 'notes':\r\n                return 'note';\r\n            case 'drafts':\r\n                return 'draft';\r\n        }\r\n    }\r\n}\r\n","<div class=\"modal-header\" style=\"margin: 0\">\r\n    <h2 mat-dialog-title trans>Delete {{type}}</h2>\r\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n    <p>\r\n        <span trans>Are you sure you want to delete this</span>&ngsp;\r\n        <span>{{type | trans}}?</span>\r\n    </p>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button (click)=\"close()\" mat-button type=\"button\" class=\"cancel-button\" trans>Close</button>\r\n    <button type=\"submit\" mat-raised-button [color]=\"settings.get('vebto.auth.color')\" class=\"submit-button\" (click)=\"confirm()\" trans>Delete</button>\r\n</mat-dialog-actions>\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexports.config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = new Error();\n            console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar Subscription_1 = require(\"../Subscription\");\nfunction schedulePromise(input, scheduler) {\n    return new Observable_1.Observable(function (subscriber) {\n        var sub = new Subscription_1.Subscription();\n        sub.add(scheduler.schedule(function () { return input.then(function (value) {\n            sub.add(scheduler.schedule(function () {\n                subscriber.next(value);\n                sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n            }));\n        }, function (err) {\n            sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n        }); }));\n        return sub;\n    });\n}\nexports.schedulePromise = schedulePromise;\n//# sourceMappingURL=schedulePromise.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map","<ng-container *ngIf=\"previewFiles.getPortal() | async as portal\">\r\n    <ng-template [cdkPortalOutlet]=\"portal\" (attached)=\"listenForDownloadClick($event)\"></ng-template>\r\n</ng-container>\r\n","import {ChangeDetectionStrategy, Component, ComponentRef, Input, OnChanges, OnDestroy} from '@angular/core';\r\nimport {FileEntry} from '../../uploads/types/file-entry';\r\nimport {PreviewFilesService} from '../preview-files.service';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'preview-container',\r\n    templateUrl: './preview-container.component.html',\r\n    styleUrls: ['./preview-container.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PreviewContainerComponent implements OnChanges, OnDestroy {\r\n    @Input() files: FileEntry[];\r\n    @Input() activeFile: number;\r\n    private downloadSub: Subscription;\r\n\r\n    constructor(public previewFiles: PreviewFilesService) {}\r\n\r\n    ngOnChanges(changes) {\r\n        this.previewFiles.set(this.files, this.activeFile);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.previewFiles.destroy();\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n    }\r\n\r\n    public listenForDownloadClick(comp: ComponentRef<BaseFilePreview>) {\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n        this.downloadSub = comp.instance.download.subscribe(() => {\r\n            this.previewFiles.download.next();\r\n        });\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar observable_1 = require(\"../symbol/observable\");\nexports.subscribeToObservable = function (obj) { return function (subscriber) {\n    var obs = obj[observable_1.observable]();\n    if (typeof obs.subscribe !== 'function') {\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    }\n    else {\n        return obs.subscribe(subscriber);\n    }\n}; };\n//# sourceMappingURL=subscribeToObservable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rxSubscriber = (function () {\n    return typeof Symbol === 'function'\n        ? Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + Math.random();\n})();\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","import { Input, ElementRef, OnInit, OnDestroy, NgZone, Directive } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive()\nexport abstract class InfiniteScroll implements OnInit, OnDestroy {\r\n    protected scrollSub: Subscription;\r\n    protected el: ElementRef<HTMLElement>;\r\n    protected abstract zone: NgZone;\r\n\r\n    @Input() threshold: number | string = 50;\r\n\r\n    ngOnInit() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.scrollSub = fromEvent(this.getScrollContainer(), 'scroll', {capture: true, passive: true})\r\n                .pipe(debounceTime(20))\r\n                .subscribe((e: Event) => this.onScroll(e.target as HTMLElement));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.scrollSub && this.scrollSub.unsubscribe();\r\n    }\r\n\r\n    protected getScrollContainer() {\r\n        return this.el ? this.el.nativeElement : document;\r\n    }\r\n\r\n    protected onScroll(target: HTMLElement) {\r\n        if ( ! target || (this.el && target !== this.el.nativeElement) || ! this.canLoadMore() || this.isLoading()) return;\r\n\r\n        const offset = parseInt(this.threshold as string);\r\n\r\n        const currentScroll = this.el ?\r\n            target.scrollTop + target.offsetHeight :\r\n            window.scrollY + window.innerHeight;\r\n\r\n        const heightWithoutOffset = this.el ?\r\n            target.scrollHeight - offset :\r\n            document.documentElement.scrollHeight - offset;\r\n\r\n        if (currentScroll >= heightWithoutOffset) {\r\n            this.zone.run(() => {\r\n                this.loadMoreItems();\r\n            });\r\n        }\r\n    }\r\n\r\n    protected abstract loadMoreItems();\r\n    protected abstract canLoadMore(): boolean;\r\n    protected abstract isLoading(): boolean;\r\n}\r\n","import {Directive, ElementRef, NgZone} from '@angular/core';\r\nimport {InfiniteScroll} from '@common/core/ui/infinite-scroll/infinite.scroll';\r\nimport {Conversation} from '../conversation/conversation.service';\r\n\r\n@Directive({\r\n    selector: '[conversationInfiniteScroll]'\r\n})\r\nexport class ConversationInfiniteScrollDirective extends InfiniteScroll {\r\n    constructor(\r\n        protected el: ElementRef,\r\n        private conversation: Conversation,\r\n        protected zone: NgZone,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    protected getScrollContainer() {\r\n        return document;\r\n    }\r\n\r\n    protected loadMoreItems() {\r\n        this.conversation.replies.loadMore();\r\n    }\r\n\r\n    protected isLoading(): boolean {\r\n        return this.conversation.replies.isLoading;\r\n    }\r\n\r\n    protected canLoadMore(): boolean {\r\n        return this.conversation.replies.canLoadMore();\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterator_1 = require(\"../symbol/iterator\");\nexports.subscribeToIterable = function (iterable) { return function (subscriber) {\n    var iterator = iterable[iterator_1.iterator]();\n    do {\n        var item = iterator.next();\n        if (item.done) {\n            subscriber.complete();\n            break;\n        }\n        subscriber.next(item.value);\n        if (subscriber.closed) {\n            break;\n        }\n    } while (true);\n    if (typeof iterator.return === 'function') {\n        subscriber.add(function () {\n            if (iterator.return) {\n                iterator.return();\n            }\n        });\n    }\n    return subscriber;\n}; };\n//# sourceMappingURL=subscribeToIterable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map","import {Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {Conversation} from '../conversation.service';\r\nimport {MailboxTagsService} from '../../ticketing/mailbox-tags.service';\r\nimport {ConfirmReplyDeleteModalComponent} from '../confirm-reply-delete-modal/confirm-reply-delete-modal.component';\r\nimport {TextEditorComponent} from '@common/text-editor/text-editor.component';\r\nimport {Subscription} from 'rxjs';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {BrowserEvents} from '@common/core/services/browser-events.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {CannedReply} from '../../shared/models/CannedReply';\r\nimport {DraftPayload} from '../../ticketing/tickets.service';\r\nimport {Article} from '../../shared/models/Article';\r\nimport {HcUrls} from '../../help-center/shared/hc-urls.service';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {SuggestedArticlesDropdownComponent} from '../../help-center/suggested-articles-dropdown/suggested-articles-dropdown.component';\r\nimport {R, SLASH} from '@angular/cdk/keycodes';\r\nimport {Tag} from '../../shared/models/Tag';\r\nimport {TinymceTextEditor} from '@common/text-editor/editors/tinymce-text-editor.service';\r\n\r\n@Component({\r\n    selector: 'conversation-text-editor',\r\n    templateUrl: './conversation-text-editor.component.html',\r\n    styleUrls: ['./conversation-text-editor.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ConversationTextEditorComponent implements OnInit, OnDestroy {\r\n    @ViewChild('textEditor', { static: true }) textEditor: TextEditorComponent;\r\n    @ViewChild(SuggestedArticlesDropdownComponent, { static: false }) articleDropdown: SuggestedArticlesDropdownComponent;\r\n\r\n    public selectedStatus = new Tag();\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        private modal: Modal,\r\n        public currentUser: CurrentUser,\r\n        public conversation: Conversation,\r\n        private browserEvents: BrowserEvents,\r\n        public mailboxTags: MailboxTagsService,\r\n        private hcUrls: HcUrls,\r\n        private settings: Settings,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.setSelectedStatus();\r\n        this.initKeybinds();\r\n        this.conversation.setEditor(this.textEditor);\r\n    }\r\n\r\n    public submitReply() {\r\n        const payload = {body: this.textEditor.getContents(), status: this.selectedStatus};\r\n        this.conversation.submitReply(payload).subscribe(() => {\r\n            this.closeEditor();\r\n        }, () => {});\r\n    }\r\n\r\n    public saveDraft(params: DraftPayload = {}) {\r\n        return this.conversation.draft.save(params);\r\n    }\r\n\r\n    public closeEditor() {\r\n        this.conversation.closeEditor();\r\n        this.conversation.draft.reset();\r\n        this.textEditor.reset();\r\n    }\r\n\r\n    public saveDraftAndAddToReplies() {\r\n        if ( ! this.conversation.draft.isEmpty()) {\r\n            this.saveDraft().subscribe(response => {\r\n                this.conversation.replies.add(response.data);\r\n                this.closeEditor();\r\n            });\r\n        } else {\r\n            this.closeEditor();\r\n        }\r\n    }\r\n\r\n    public maybeDeleteDraft() {\r\n        // TODO: refactor to use async/wait and remove duplicated stuff\r\n        const draft = this.conversation.draft.get();\r\n\r\n        if (draft.id) {\r\n            this.modal.show(ConfirmReplyDeleteModalComponent, {reply: draft}).afterClosed()\r\n                .subscribe(confirmed => {\r\n                    if ( ! confirmed) return;\r\n                    this.conversation.draft.delete();\r\n                    this.closeEditor();\r\n                });\r\n        } else {\r\n            this.closeEditor();\r\n        }\r\n    }\r\n\r\n    public applyCannedReply(reply: CannedReply) {\r\n        this.textEditor.insertContents(reply.body);\r\n        setTimeout(() => {\r\n            this.saveDraft({uploads: reply.uploads.map(upload => upload.id)});\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the status that should be applied to ticket after submitting reply.\r\n     */\r\n    private setSelectedStatus() {\r\n        let tag: Tag;\r\n\r\n        // if current user is customer open ticket when they reply,\r\n        // otherwise set default tag to \"closed\"\r\n        if ( ! this.currentUser.hasPermission('tickets.update')) {\r\n            tag = this.mailboxTags.getTagByIdOrName('open');\r\n        } else {\r\n            tag = this.mailboxTags.getTagByIdOrName('closed');\r\n        }\r\n\r\n        this.selectedStatus = tag;\r\n    }\r\n\r\n    /**\r\n     * Init keybinds for conversation text editor.\r\n     */\r\n    private initKeybinds() {\r\n        const sub = this.browserEvents.globalKeyDown$.subscribe(e => {\r\n\r\n            // if any modals are open or user is currently typing, bail\r\n            if (this.modal.anyDialogOpen() || BrowserEvents.userIsTyping()) return;\r\n\r\n            // open text editor\r\n            if (e.keyCode === R) {\r\n                this.conversation.openEditor();\r\n            }\r\n\r\n            if (e.keyCode === SLASH && e.ctrlKey) {\r\n                this.articleDropdown.focus();\r\n            }\r\n        });\r\n        this.subscriptions.push(sub);\r\n\r\n        (this.textEditor.editor as TinymceTextEditor).waitForEditor().then((editor: any) => {\r\n            editor.shortcuts.add('ctrl+191', 'Search docs', () => {\r\n                this.articleDropdown.focus();\r\n            });\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.saveDraft();\r\n        this.closeEditor();\r\n\r\n        this.subscriptions.forEach(subscription => {\r\n            subscription && subscription.unsubscribe();\r\n        });\r\n    }\r\n\r\n    public insertArticleLink(article: Article) {\r\n        const uri = this.hcUrls.article(article).join('/');\r\n        this.textEditor.insertLink({\r\n            target: 'blank',\r\n            href: this.settings.getBaseUrl() + uri,\r\n            text: article.title\r\n        });\r\n    }\r\n}\r\n","<section class=\"text-editor-container\" [class.hidden]=\"!conversation.isEditorOpen()\">\r\n    <suggested-articles-dropdown placeholder=\"Search docs... (ctrl + /)\" (articleSelected)=\"insertArticleLink($event)\" [category]=\"conversation.getCategory()\" *ngIf=\"currentUser.hasPermission('tickets.update')\"></suggested-articles-dropdown>\r\n    <reply-attachment-list [attachments]=\"conversation.draft.get().uploads\" (detached)=\"conversation.draft.detachUpload($event)\"></reply-attachment-list>\r\n    <upload-progress-bar></upload-progress-bar>\r\n    <text-editor inlineUploadPrefix=\"ticket_images\" (onChange)=\"conversation.draft.setBody($event)\" (onFileUpload)=\"conversation.draft.uploadFiles($event)\" (onCtrlEnter)=\"submitReply()\" #textEditor>\r\n\r\n        <div class=\"header-actions\" customButtons *ngIf=\"currentUser.hasPermission('canned_replies.view')\">\r\n            <canned-replies-dropdown (onReplySelect)=\"applyCannedReply($event)\"></canned-replies-dropdown>\r\n        </div>\r\n\r\n        <div class=\"header-actions last right\" header>\r\n            <button type=\"button\" class=\"no-style editor-button save-draft-button\" [class.success]=\"conversation.draft.get().id\" (click)=\"saveDraftAndAddToReplies()\" [matTooltip]=\"'Save Draft' | trans\">\r\n                <mat-icon svgIcon=\"check-circle\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button delete-draft-button\" (click)=\"maybeDeleteDraft()\" [matTooltip]=\"'Discard (Esc)' | trans\"><mat-icon svgIcon=\"delete\"></mat-icon></button>\r\n        </div>\r\n\r\n        <div class=\"editor-footer\" footer>\r\n            <div class=\"right\">\r\n                <ng-container *ngIf=\"currentUser.hasPermission('tickets.update')\">\r\n                    <button type=\"button\" class=\"change-status-button\" mat-button [matMenuTriggerFor]=\"statusMenu\">\r\n                        <span>{{selectedStatus.display_name | trans}}</span>\r\n                        <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"dropdown-icon\"></mat-icon>\r\n                    </button>\r\n\r\n                    <mat-menu #statusMenu=\"matMenu\" [overlapTrigger]=\"false\" class=\"status-menu\">\r\n                        <button mat-menu-item [ngClass]=\"tag.name\" *ngFor=\"let tag of mailboxTags.getStatusTags(true)\" (click)=\"selectedStatus = tag\" trans>{{tag.display_name}}</button>\r\n                    </mat-menu>\r\n                </ng-container>\r\n\r\n                <button type=\"button\" mat-flat-button color=\"accent\" class=\"submit-button\" (click)=\"submitReply()\" [disabled]=\"conversation.replySaving\">\r\n                    <span *ngIf=\"!conversation.replySaving\" trans>Send Reply</span>\r\n                    <span *ngIf=\"conversation.replySaving\" trans>Sending...</span>\r\n                </button>\r\n\r\n                <ng-container *ngIf=\"currentUser.hasPermission('settings.update')\">\r\n                    <button mat-flat-button color=\"accent\" class=\"dropdown-left submit-button-addon\" [disabled]=\"conversation.replySaving\" [matMenuTriggerFor]=\"defaultRedirectMenu\">\r\n                        <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret align-middle\"></mat-icon>\r\n                    </button>\r\n\r\n                    <mat-menu #defaultRedirectMenu=\"matMenu\" class=\"default-redirect-menu\" [overlapTrigger]=\"false\">\r\n                        <button mat-menu-item class=\"stay-on-page\" [class.selected]=\"conversation.afterReplyAction.get() === 'stay_on_page'\" (click)=\"conversation.afterReplyAction.set('stay_on_page')\" trans>Send and stay on page</button>\r\n                        <button mat-menu-item class=\"next-active-ticket\" [class.selected]=\"conversation.afterReplyAction.get() === 'next_active_ticket'\" (click)=\"conversation.afterReplyAction.set('next_active_ticket')\" trans>Send and next ticket</button>\r\n                        <button mat-menu-item class=\"back_to_folder\" [class.selected]=\"conversation.afterReplyAction.get() === 'back_to_folder'\" (click)=\"conversation.afterReplyAction.set('back_to_folder')\" trans>Send and back to folder</button>\r\n                    </mat-menu>\r\n                </ng-container>\r\n\r\n            </div>\r\n        </div>\r\n    </text-editor>\r\n</section>\r\n","import {Component, ViewChild, OnInit, ViewEncapsulation, Inject} from '@angular/core';\r\nimport {TicketsService} from '../tickets.service';\r\nimport {Conversation} from '../../conversation/conversation.service';\r\nimport {TextEditorComponent} from '@common/text-editor/text-editor.component';\r\nimport {UploadsApiService} from '@common/uploads/uploads-api.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {Reply} from '../../shared/models/Reply';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\r\nimport {FileEntry} from '@common/uploads/types/file-entry';\r\nimport {finalize} from 'rxjs/operators';\r\n\r\ninterface AddNoteModalData {\r\n    ticketId: number;\r\n}\r\n\r\ninterface AddNoteModalErrors {\r\n    body?: string;\r\n    attachments?: string;\r\n    file?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'add-note-modal',\r\n    templateUrl: './add-note-modal.component.html',\r\n    styleUrls: ['./add-note-modal.component.scss'],\r\n    providers: [Conversation, UploadQueueService],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AddNoteModalComponent implements OnInit {\r\n    @ViewChild('textEditor', { static: true }) textEditor: TextEditorComponent;\r\n\r\n    public errors: AddNoteModalErrors = {};\r\n    public attachments: FileEntry[] = [];\r\n    public loading = false;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<AddNoteModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: AddNoteModalData,\r\n        private ticketService: TicketsService,\r\n        private uploads: UploadsApiService,\r\n        private uploadQueue: UploadQueueService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.textEditor.focus();\r\n    }\r\n\r\n    public close(note?: Reply) {\r\n        this.textEditor.destroyEditor();\r\n        this.dialogRef.close(note);\r\n    }\r\n\r\n    public confirm() {\r\n        this.loading = true;\r\n        const payload = {\r\n            body: this.textEditor.getContents(),\r\n            uploads: this.attachments.map(attachment => attachment.id)\r\n        };\r\n        this.ticketService.addNote(this.data.ticketId, payload)\r\n            .pipe(finalize(() => this.loading = false))\r\n            .subscribe(response => {\r\n                this.close(response.data);\r\n            }, errorResponse => this.errors = errorResponse.messages);\r\n    }\r\n\r\n    public uploadFiles(files: UploadedFile[]) {\r\n        this.uploadQueue.start(files).subscribe(response => {\r\n            this.attachments = [...this.attachments, response.fileEntry];\r\n        });\r\n    }\r\n\r\n    public removeAttachment(entry: FileEntry) {\r\n        for (let i = 0; i < this.attachments.length; i++) {\r\n            if (this.attachments[i].id === entry.id) {\r\n                this.attachments.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title trans>Add Note</h2>\r\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\r\n    <mat-dialog-content class=\"many-inputs\">\r\n        <div class=\"input-container\">\r\n            <text-editor inlineUploadPrefix=\"ticket_images\" class=\"text-editor\" [minHeight]=\"300\" (onFileUpload)=\"uploadFiles($event)\" #textEditor></text-editor>\r\n            <upload-progress-bar></upload-progress-bar>\r\n\r\n            <div class=\"error\" *ngIf=\"errors.body\">{{errors.body}}</div>\r\n            <div class=\"error\" *ngIf=\"errors.file\">{{errors.file}}</div>\r\n            <div class=\"error\" *ngIf=\"errors.attachments\">{{errors.attachments}}</div>\r\n\r\n            <reply-attachment-list [attachments]=\"attachments\" *ngIf=\"attachments.length\" (detached)=\"removeAttachment($event)\"></reply-attachment-list>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\r\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading\" trans>Add Note</button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy } from '@angular/core';\r\nimport { UploadQueueService } from '../upload-queue/upload-queue.service';\r\nimport { animationFrameScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'upload-progress-bar',\r\n    templateUrl: './upload-progress-bar.component.html',\r\n    styleUrls: ['./upload-progress-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadProgressBarComponent implements OnDestroy {\r\n    @HostBinding('class.hidden') hidden = true;\r\n    private subscription: Subscription;\r\n    public progress: number;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        public uploadQueue: UploadQueueService,\r\n        private cd: ChangeDetectorRef,\r\n    ) {\r\n        this.subscription = this.uploadQueue.totalProgress()\r\n            // material progress bar animation lasts 250ms\r\n            .pipe(throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}))\r\n            .subscribe(progress => {\r\n                this.progress = progress;\r\n                this.hidden = progress === 100 || this.uploadQueue.count$.value.pending === 0;\r\n                this.cd.markForCheck();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}\r\n\r\n","<mat-progress-bar mode=\"determinate\" [value]=\"progress\" color=\"accent\"></mat-progress-bar>\r\n","import {User} from './User';\r\nimport {Tag} from './Tag';\r\nimport {Reply} from './Reply';\r\n\r\nexport const AGENT_PERMISSION = 'tickets.update';\r\n\r\nexport class Ticket {\r\n    id: number;\r\n    subject: string;\r\n    user_id: number;\r\n    closed_at?: string;\r\n    closed_by?: number;\r\n    assigned_to?: number;\r\n    created_at?: string;\r\n    updated_at?: string;\r\n    updated_at_formatted: string;\r\n    user?: User;\r\n    tags?: Tag[];\r\n    categories?: Tag[];\r\n    replies?: Reply[];\r\n    replies_count?: Reply;\r\n    latest_replies?: Reply[];\r\n    latest_reply?: Reply;\r\n    notes?: Reply[];\r\n\r\n    constructor(params: Object = {}) {\r\n        for (const name in params) {\r\n            this[name] = params[name];\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Download file from specified url.\r\n */\r\nexport function downloadFileFromUrl(url: string, name?: string) {\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    if (name) link.download = name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","<default-preview *ngIf=\"fileTooLarge$ | async; else textPreview\" message=\"This file is too large to preview.\"></default-preview>\r\n<ng-template #textPreview>\r\n    <div class=\"text-wrapper preview-object\">\r\n        <pre>{{ content$ | async }}</pre>\r\n    </div>\r\n</ng-template>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\nconst FIVE_MB = 5242880;\r\n\r\n@Component({\r\n    selector: 'text-preview',\r\n    templateUrl: './text-preview.component.html',\r\n    styleUrls: ['./text-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextPreviewComponent extends BaseFilePreview implements OnInit {\r\n    public content$ = new BehaviorSubject('');\r\n    public fileTooLarge$ = new BehaviorSubject(false);\r\n\r\n    ngOnInit() {\r\n        if (this.file.file_size > FIVE_MB) {\r\n            this.fileTooLarge$.next(true);\r\n        } else {\r\n            this.loadFileContents();\r\n        }\r\n    }\r\n\r\n    private loadFileContents() {\r\n        this.getContents()\r\n            .subscribe(content => {\r\n                this.content$.next(content);\r\n            });\r\n    }\r\n}\r\n","<audio #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></audio>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'audio-preview',\r\n    templateUrl: './audio-preview.component.html',\r\n    styleUrls: ['./audio-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AudioPreviewComponent extends BaseFilePreview implements OnInit {\r\n    @ViewChild('playerEl', { static: true }) playerEl: ElementRef;\r\n    public invalidMedia = false;\r\n\r\n    ngOnInit() {\r\n        this.invalidMedia = !this.canPlayVideo();\r\n\r\n        if ( ! this.invalidMedia) {\r\n            this.player().src = this.getSrc();\r\n            this.player().play();\r\n        }\r\n    }\r\n\r\n    protected canPlayVideo(): boolean {\r\n        return !!this.player().canPlayType(this.file.mime);\r\n    }\r\n\r\n    protected player() {\r\n        return this.playerEl.nativeElement as HTMLVideoElement|HTMLAudioElement;\r\n    }\r\n}\r\n","<video #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></video>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {AudioPreviewComponent} from '../audio-preview/audio-preview.component';\r\n\r\n@Component({\r\n    selector: 'video-preview',\r\n    templateUrl: './video-preview.component.html',\r\n    styleUrls: ['./video-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VideoPreviewComponent extends AudioPreviewComponent {\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'image-preview',\r\n    templateUrl: './image-preview.component.html',\r\n    styleUrls: ['./image-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImagePreviewComponent extends BaseFilePreview {}\r\n","<img [src]=\"getSafeSrc()\" class=\"preview-object\">","import {ChangeDetectionStrategy, Component, HostBinding,} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n  selector: 'pdf-preview',\r\n  templateUrl: './pdf-preview.component.html',\r\n  styleUrls: ['./pdf-preview.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PdfPreviewComponent extends BaseFilePreview {\r\n    @HostBinding('class') className = 'preview-object';\r\n\r\n    public getSrc() {\r\n        return super.getSrc() + '#toolbar=0';\r\n    }\r\n}\r\n","<iframe [src]=\"getSafeSrc()\"></iframe>","<ng-container *ngIf=\"!(showDefaultPreview$ | async); else defaultPreview\">\r\n    <iframe class=\"preview-object\" #iframe></iframe>\r\n    <div class=\"pop-out-block\" (click)=\"openInNewWindow()\"></div>\r\n</ng-container>\r\n<ng-template #defaultPreview>\r\n    <default-preview></default-preview>\r\n</ng-template>\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\nimport { BaseFilePreview } from '../base-file-preview';\nimport { BehaviorSubject } from 'rxjs';\nimport { GenericBackendResponse } from '@common/core/types/backend-response';\nimport { isAbsoluteUrl } from '@common/core/utils/is-absolute-url';\n\n@Component({\n    selector: 'google-docs-viewer',\n    templateUrl: './google-docs-viewer.component.html',\n    styleUrls: ['./google-docs-viewer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GoogleDocsViewerComponent extends BaseFilePreview implements AfterViewInit {\n    @ViewChild('iframe') iframe: ElementRef<HTMLIFrameElement>;\n    public loading$ = new BehaviorSubject(true);\n    public showDefaultPreview$ = new BehaviorSubject(false);\n    private timeoutRef: number;\n\n    ngAfterViewInit() {\n        // google docs viewer only supports file up to 25MB\n        if (this.file.file_size > 25000000) {\n            return this.showDefaultPreview();\n        }\n\n        this.iframe.nativeElement.onload = () => {\n            clearTimeout(this.timeoutRef);\n            this.stopLoading();\n        };\n\n        this.getIframeSrc().then(url => {\n            this.iframe.nativeElement.src = url;\n        }).catch(() => {\n            this.showDefaultPreview();\n        });\n\n        // if google docs preview iframe is not loaded\n        // after 6 seconds, bail and show default preview\n        this.timeoutRef = setTimeout(() => {\n            this.showDefaultPreview();\n        }, 5000);\n    }\n\n    public stopLoading() {\n        this.loading$.next(false);\n    }\n\n    public showDefaultPreview() {\n        this.stopLoading();\n        this.showDefaultPreview$.next(true);\n    }\n\n    public openInNewWindow() {\n        window.open(window.location.href, '_blank');\n    }\n\n    private getIframeSrc(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            let previewUrl = this.getSrc();\n\n            // if we're not trying to preview shareable link we will need to generate\n            // preview token, otherwise google won't be able to access this file\n            if (previewUrl.indexOf('shareable_link') === -1) {\n                this.http.post<GenericBackendResponse<{preview_token: string}>>(`uploads/${this.file.id}/add-preview-token`).subscribe(response => {\n                    previewUrl += `?preview_token=${response.preview_token}`;\n                    resolve(this.getGoogleDocsUrl(previewUrl));\n                }, () => reject);\n            } else {\n                resolve(this.getGoogleDocsUrl(previewUrl));\n            }\n        });\n    }\n\n    private getGoogleDocsUrl(previewUrl: string) {\n        previewUrl = isAbsoluteUrl(previewUrl) ? previewUrl : this.settings.getBaseUrl() + previewUrl;\n        return 'https://docs.google.com/gview?embedded=true&url=' + encodeURIComponent(previewUrl);\n    }\n}\n","import { InjectionToken, Injectable } from '@angular/core';\r\nimport { TextPreviewComponent } from './text-preview/text-preview.component';\r\nimport { VideoPreviewComponent } from './video-preview/video-preview.component';\r\nimport { ImagePreviewComponent } from './image-preview/image-preview.component';\r\nimport { PdfPreviewComponent } from './pdf-preview/pdf-preview.component';\r\nimport { AudioPreviewComponent } from './audio-preview/audio-preview.component';\r\nimport { GoogleDocsViewerComponent } from './google-docs-viewer/google-docs-viewer.component';\r\n\r\nexport const AVAILABLE_PREVIEWS = new InjectionToken<any>('AVAILABLE_PREVIEWS');\r\n\r\n@Injectable()\nexport class DefaultPreviews {\r\n    text = TextPreviewComponent;\r\n    video = VideoPreviewComponent;\r\n    audio = AudioPreviewComponent;\r\n    image = ImagePreviewComponent;\r\n    pdf = PdfPreviewComponent;\r\n    spreadsheet = GoogleDocsViewerComponent;\r\n    powerPoint = GoogleDocsViewerComponent;\r\n    word = GoogleDocsViewerComponent;\r\n}\r\n\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {Draft} from './draft.service';\r\nimport {Ticket} from '../shared/models/Ticket';\r\nimport {ConversationReplies} from './conversation-replies.service';\r\nimport {Tag} from '../shared/models/Tag';\r\nimport {TicketsService} from '../ticketing/tickets.service';\r\nimport {AfterReplyAction} from './after-reply-action.service';\r\nimport {Reply} from '../shared/models/Reply';\r\nimport {TextEditorComponent} from '@common/text-editor/text-editor.component';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Category} from '../shared/models/Category';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Conversation {\r\n\r\n    /**\r\n     * Whether conversation is loading currently.\r\n     */\r\n    public isLoading = false;\r\n\r\n    /**\r\n     * Ticket this conversation was created for.\r\n     */\r\n    private model = new Ticket({tags: []});\r\n\r\n    /**\r\n     * Current status of the ticket (on the server).\r\n     */\r\n    public status = new Tag();\r\n\r\n    /**\r\n     * Whether conversation reply is being saved currently.\r\n     */\r\n    public replySaving = false;\r\n\r\n    /**\r\n     * Whether text editor is currently open.\r\n     */\r\n    private editorIsOpen = false;\r\n\r\n    /**\r\n     * Instance of text editor for this conversation.\r\n     */\r\n    private editor: TextEditorComponent;\r\n\r\n    /**\r\n     * Fired after conversation is initiated or reloaded.\r\n     */\r\n    public afterInit = new EventEmitter();\r\n\r\n    /**\r\n     * Conversation service constructor.\r\n     */\r\n    constructor(\r\n        public draft: Draft,\r\n        private toast: Toast,\r\n        private tickets: TicketsService,\r\n        public replies: ConversationReplies,\r\n        public afterReplyAction: AfterReplyAction,\r\n    ) {}\r\n\r\n    public get(): Ticket {\r\n        return this.model;\r\n    }\r\n\r\n    public getStatus() {\r\n        return this.status || new Tag();\r\n    }\r\n\r\n    public getCategory(): Category  {\r\n        const tag = this.model.tags\r\n            .find(t => t.type !== 'status');\r\n        return (tag && tag.categories) ? tag.categories[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Set conversation status.\r\n     */\r\n    public setStatus(tag?: Tag) {\r\n        if ( ! tag) return;\r\n        this.status = tag;\r\n    }\r\n\r\n    /**\r\n     * Open conversation text editor.\r\n     */\r\n    public openEditor() {\r\n        this.editorIsOpen = true;\r\n        this.editor && this.editor.focus();\r\n    }\r\n\r\n    /**\r\n     * Close conversation text editor.\r\n     */\r\n    public closeEditor() {\r\n        this.editorIsOpen = false;\r\n    }\r\n\r\n    /**\r\n     * Check if conversation text editor is open.\r\n     */\r\n    public isEditorOpen() {\r\n        return this.editorIsOpen;\r\n    }\r\n\r\n    /**\r\n     * Set text editor instance on conversation.\r\n     */\r\n    public setEditor(editor: TextEditorComponent) {\r\n        this.editor = editor;\r\n    }\r\n\r\n    /**\r\n     * Set specified draft as active.\r\n     */\r\n    public setDraft(draft: Reply) {\r\n        this.draft.set(draft);\r\n        this.editor.setContents(draft.body);\r\n    }\r\n\r\n    /**\r\n     * Add specified tag to currently active ticket.\r\n     */\r\n    public addTag(newTag: Tag) {\r\n        const exists = this.model.tags.find(tag => newTag.name === tag.name);\r\n        if ( ! exists) this.model.tags.unshift(newTag);\r\n    }\r\n\r\n    /**\r\n     * Submit a reply for current conversation.\r\n     */\r\n    public submitReply(params: {status?: Tag, body?: string} = {}) {\r\n        this.replySaving = true;\r\n\r\n        return this.tickets\r\n            .saveReply(this.model.id, this.draft.getPayload(params))\r\n            .pipe(\r\n                tap(response => {\r\n                    this.replySaving = false;\r\n                    this.draft.delete();\r\n                    this.performAfterReplyAction();\r\n                    this.setStatus(params.status);\r\n                    this.replies.add(response.data);\r\n                }, () => {\r\n                    this.toast.open('There was an issue submitting this reply.');\r\n                    this.replySaving = false;\r\n                    this.isLoading = false;\r\n                })\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Perform after reply action and\r\n     * mark conversation as \"reloading\"\r\n     */\r\n    public performAfterReplyAction() {\r\n        if (this.afterReplyAction.get() && this.afterReplyAction.get() !== 'stay_on_page') {\r\n            this.isLoading = true;\r\n        }\r\n        this.afterReplyAction.perform();\r\n    }\r\n\r\n    /**\r\n     * Init or reset conversation.\r\n     */\r\n    public init(ticket: Ticket) {\r\n        if ( ! ticket) return;\r\n\r\n        this.model = ticket;\r\n        this.status = ticket.tags.find(tag => tag.type === 'status');\r\n        this.replies.init(this.model.replies, this.model.id);\r\n        this.draft.setTicketId(this.model.id);\r\n        this.afterReplyAction.setTicketId(this.model.id);\r\n        this.isLoading = false;\r\n        this.afterInit.emit();\r\n    }\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import {Component, ViewEncapsulation, ChangeDetectionStrategy, Inject} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\ninterface ShowOriginalReplyModalData {\r\n    original: {headers: any, body: {plain: string, html: string}};\r\n}\r\n\r\n@Component({\r\n    selector: 'show-original-reply-modal',\r\n    templateUrl: './show-original-reply-modal.component.html',\r\n    styleUrls: ['./show-original-reply-modal.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShowOriginalReplyModalComponent {\r\n    public originalEmail: {headers: any, body: {plain: string, html: string}};\r\n    public headerNames: string[] = [];\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ShowOriginalReplyModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ShowOriginalReplyModalData,\r\n    ) {\r\n        this.hydrate();\r\n    }\r\n\r\n    public close() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    private hydrate() {\r\n        this.originalEmail = this.data.original;\r\n\r\n        if (this.originalEmail && this.originalEmail.headers) {\r\n            this.headerNames = Object.keys(this.originalEmail.headers);\r\n        }\r\n    }\r\n}\r\n\r\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title trans>Original Message</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button\" mat-icon-button tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n    <div class=\"headers\">\r\n        <div class=\"header\" *ngFor=\"let name of headerNames\">\r\n            <div class=\"name\">{{name}}</div>\r\n            <div class=\"value\">{{originalEmail.headers[name]}}</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"email-content\">\r\n        <span *ngIf=\"!originalEmail\" trans>Could not find original email for this reply.</span>\r\n        <pre class=\"body-plain\" *ngIf=\"originalEmail && originalEmail.body.plain\">{{originalEmail.body.plain}}</pre>\r\n        <pre class=\"body-html\" *ngIf=\"originalEmail && originalEmail.body.html\">{{originalEmail.body.html}}</pre>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button type=\"submit\" class=\"submit-button\" mat-raised-button color=\"accent\" (click)=\"close()\" trans>Done</button>\r\n</mat-dialog-actions>","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nfunction canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber_1.Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\nexports.canReportError = canReportError;\n//# sourceMappingURL=canReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = require(\"./util/isArray\");\nvar isObject_1 = require(\"./util/isObject\");\nvar isFunction_1 = require(\"./util/isFunction\");\nvar UnsubscriptionError_1 = require(\"./util/UnsubscriptionError\");\nvar Subscription = (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.observable = (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar subscribeToArray_1 = require(\"../util/subscribeToArray\");\nvar scheduleArray_1 = require(\"../scheduled/scheduleArray\");\nfunction fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable_1.Observable(subscribeToArray_1.subscribeToArray(input));\n    }\n    else {\n        return scheduleArray_1.scheduleArray(input, scheduler);\n    }\n}\nexports.fromArray = fromArray;\n//# sourceMappingURL=fromArray.js.map"]}